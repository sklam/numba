Parallel: 5. Serial: 0
test_unicode_enumerate_iter (numba.tests.test_unicode.TestUnicodeIteration.test_unicode_enumerate_iter) ... ERROR
test_unicode_iter (numba.tests.test_unicode.TestUnicodeIteration.test_unicode_iter) ... ERROR
test_unicode_literal_iter (numba.tests.test_unicode.TestUnicodeIteration.test_unicode_literal_iter) ... ERROR
test_unicode_literal_stopiteration_iter (numba.tests.test_unicode.TestUnicodeIteration.test_unicode_literal_stopiteration_iter) ... ERROR
test_unicode_stopiteration_iter (numba.tests.test_unicode.TestUnicodeIteration.test_unicode_stopiteration_iter) ... ERROR

======================================================================
ERROR: test_unicode_enumerate_iter (numba.tests.test_unicode.TestUnicodeIteration.test_unicode_enumerate_iter)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
    constraint(typeinfer)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 704, in __call__
    self.resolve(typeinfer, typeinfer.typevars, fnty=fnty)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
    return self.context.resolve_function_type(fnty, pos_args, kw_args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
    raise last_exception
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
    res = self._resolve_user_function_type(func, args, kws)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
    return func.get_call_type(self, args, kws)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
    failures.raise_error()
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: No implementation of function Function(<built-in function iadd>) found for signature:
 
 >>> iadd(Literal[str](), unicode_type)
 
There are 18 candidate implementations:
   - Of which 15 did not match due to:
   Overload of function 'iadd': File: <numerous>: Line N/A.
     With argument(s): '(unicode_type, unicode_type)':
    No match.
   - Of which 2 did not match due to:
   Operator Overload in function 'iadd': File: unknown: Line unknown.
     With argument(s): '(unicode_type, unicode_type)':
    No match for registered cases:
     * (int64, int64) -> int64
     * (int64, uint64) -> int64
     * (uint64, int64) -> int64
     * (uint64, uint64) -> uint64
     * (float32, float32) -> float32
     * (float64, float64) -> float64
     * (complex64, complex64) -> complex64
     * (complex128, complex128) -> complex128
        
   - Of which 1 did not match due to:
   Overload in function 'unicode_concat': File: numba/cpython/unicode.py: Line 1843.
     With argument(s): '(unicode_type, unicode_type)':
    Rejected as the implementation raised a specific error:
      TypingError: Failed in nopython mode pipeline (step: nopython frontend)
    No implementation of function Function(<function _pick_kind at 0x7f60a0fd49a0>) found for signature:
     
     >>> _pick_kind(int32, int32)
     
    There are 2 candidate implementations:
          - Of which 2 did not match due to:
          Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
            With argument(s): '(int32, int32)':
           Rejected as the implementation raised a specific error:
             TypingError: Failed in nopython mode pipeline (step: nopython frontend)
           NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
               Traceback (most recent call last):
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                   sig = temp.apply(nolitargs, nolitkws)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                   sig = generic(args, kws)
                         ^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                   disp, new_args = self._get_impl(args, kws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                   impl, args = self._build_impl(cache_key, args, kws)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                   disp_type.get_call_type(self.context, args, kws)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                   self.dispatcher.get_call_template(args, kws)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                   self.compile(tuple(args))
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                   cres = self._compiler.compile(args, return_type)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                   raise retval
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                   retval = self._compile_core(args, return_type)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                   cres = compiler.compile_extra(self.targetdescr.typing_context,
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                   return pipeline.compile_extra(func)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                   return self._compile_bytecode()
                          ^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                   return self._compile_core()
                          ^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                   raise e
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                   pm.run(self.state)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                   raise patched_exception
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                   self._runPass(idx, pass_inst, state)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                   return func(*args, **kwargs)
                          ^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                   mutated |= check(pss.run_pass, internal_state)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                   mangled = func(compiler_state)
                             ^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                   typemap, return_type, calltypes, errs = type_inference_stage(
                                                           ^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                   infer.build_constraint()
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                   self.constrain_statement(inst)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                   self.typeof_assign(inst)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                   self.typeof_global(inst, inst.target, value)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                   typ = self.resolve_value_type(inst, gvar.value)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                   raise TypingError(msg, loc=inst.loc)
               numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
               NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
      raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
    
    During: resolving callee type: Function(<function _pick_kind at 0x7f60a0fd49a0>)
    During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1849)
    
    
    File "numba/cpython/unicode.py", line 1849:
            def concat_impl(a, b):
                <source elided>
                new_length = a._length + b._length
                new_kind = _pick_kind(a._kind, b._kind)
                ^
    
        Traceback (most recent call last):
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
            constraint(typeinfer)
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
            self.resolve(typeinfer, typevars, fnty)
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
            sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
            return self.context.resolve_function_type(fnty, pos_args, kw_args)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
            raise last_exception
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
            res = self._resolve_user_function_type(func, args, kws)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
            return func.get_call_type(self, args, kws)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
            failures.raise_error()
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
            raise errors.TypingError(self.format())
        numba.core.errors.TypingError: No implementation of function Function(<function _pick_kind at 0x7f60a0fd49a0>) found for signature:
         
         >>> _pick_kind(int32, int32)
         
        There are 2 candidate implementations:
              - Of which 2 did not match due to:
              Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                With argument(s): '(int32, int32)':
               Rejected as the implementation raised a specific error:
                 TypingError: Failed in nopython mode pipeline (step: nopython frontend)
               NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                   Traceback (most recent call last):
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                       sig = temp.apply(nolitargs, nolitkws)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                       sig = generic(args, kws)
                             ^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                       disp, new_args = self._get_impl(args, kws)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                       impl, args = self._build_impl(cache_key, args, kws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                       disp_type.get_call_type(self.context, args, kws)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                       self.dispatcher.get_call_template(args, kws)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                       self.compile(tuple(args))
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                       cres = self._compiler.compile(args, return_type)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                       raise retval
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                       retval = self._compile_core(args, return_type)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                       cres = compiler.compile_extra(self.targetdescr.typing_context,
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                       return pipeline.compile_extra(func)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                       return self._compile_bytecode()
                              ^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                       return self._compile_core()
                              ^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                       raise e
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                       pm.run(self.state)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                       raise patched_exception
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                       self._runPass(idx, pass_inst, state)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                       return func(*args, **kwargs)
                              ^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                       mutated |= check(pss.run_pass, internal_state)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                       mangled = func(compiler_state)
                                 ^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                       typemap, return_type, calltypes, errs = type_inference_stage(
                                                               ^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                       infer.build_constraint()
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                       self.constrain_statement(inst)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                       self.typeof_assign(inst)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                       self.typeof_global(inst, inst.target, value)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                       typ = self.resolve_value_type(inst, gvar.value)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                       raise TypingError(msg, loc=inst.loc)
                   numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                   NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
          raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
        During: resolving callee type: Function(<function _pick_kind at 0x7f60a0fd49a0>)
        During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1849)
        The above exception was the direct cause of the following exception:
        Traceback (most recent call last):
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
            sig = temp.apply(nolitargs, nolitkws)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
            sig = generic(args, kws)
                  ^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
            disp, new_args = self._get_impl(args, kws)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
            impl, args = self._build_impl(cache_key, args, kws)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
            disp_type.get_call_type(self.context, args, kws)
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
            self.dispatcher.get_call_template(args, kws)
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
            self.compile(tuple(args))
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
            cres = self._compiler.compile(args, return_type)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
            raise retval
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
            retval = self._compile_core(args, return_type)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
            cres = compiler.compile_extra(self.targetdescr.typing_context,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
            return pipeline.compile_extra(func)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
            return self._compile_bytecode()
                   ^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
            return self._compile_core()
                   ^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
            raise e
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
            pm.run(self.state)
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
            raise patched_exception
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
            self._runPass(idx, pass_inst, state)
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
            return func(*args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
            mutated |= check(pss.run_pass, internal_state)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
            mangled = func(compiler_state)
                      ^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
            typemap, return_type, calltypes, errs = type_inference_stage(
                                                    ^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
            errs = infer.propagate(raise_errors=raise_errors)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
            raise errors[0]
        numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
        No implementation of function Function(<function _pick_kind at 0x7f60a0fd49a0>) found for signature:
         
         >>> _pick_kind(int32, int32)
         
        There are 2 candidate implementations:
              - Of which 2 did not match due to:
              Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                With argument(s): '(int32, int32)':
               Rejected as the implementation raised a specific error:
                 TypingError: Failed in nopython mode pipeline (step: nopython frontend)
               NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                   Traceback (most recent call last):
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                       sig = temp.apply(nolitargs, nolitkws)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                       sig = generic(args, kws)
                             ^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                       disp, new_args = self._get_impl(args, kws)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                       impl, args = self._build_impl(cache_key, args, kws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                       disp_type.get_call_type(self.context, args, kws)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                       self.dispatcher.get_call_template(args, kws)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                       self.compile(tuple(args))
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                       cres = self._compiler.compile(args, return_type)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                       raise retval
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                       retval = self._compile_core(args, return_type)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                       cres = compiler.compile_extra(self.targetdescr.typing_context,
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                       return pipeline.compile_extra(func)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                       return self._compile_bytecode()
                              ^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                       return self._compile_core()
                              ^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                       raise e
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                       pm.run(self.state)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                       raise patched_exception
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                       self._runPass(idx, pass_inst, state)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                       return func(*args, **kwargs)
                              ^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                       mutated |= check(pss.run_pass, internal_state)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                       mangled = func(compiler_state)
                                 ^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                       typemap, return_type, calltypes, errs = type_inference_stage(
                                                               ^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                       infer.build_constraint()
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                       self.constrain_statement(inst)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                       self.typeof_assign(inst)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                       self.typeof_global(inst, inst.target, value)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                       typ = self.resolve_value_type(inst, gvar.value)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                       raise TypingError(msg, loc=inst.loc)
                   numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                   NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
          raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
        During: resolving callee type: Function(<function _pick_kind at 0x7f60a0fd49a0>)
        During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1849)
        File "numba/cpython/unicode.py", line 1849:
                def concat_impl(a, b):
                    <source elided>
                    new_length = a._length + b._length
                    new_kind = _pick_kind(a._kind, b._kind)
                    ^
  raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086

During: typing of intrinsic-call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_unicode.py (325)

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_unicode.py", line 2569, in test_unicode_enumerate_iter
    self.assertPreciseEqual(pyfunc(a), cfunc(a))
                                       ^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 468, in _compile_for_args
    error_rewrite(e, 'typing')
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 407, in error_rewrite
    raise e
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 420, in _compile_for_args
    return_val = self.compile(tuple(argtypes))
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
    cres = self._compiler.compile(args, return_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
    raise retval
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
    retval = self._compile_core(args, return_type)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
    cres = compiler.compile_extra(self.targetdescr.typing_context,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
    return pipeline.compile_extra(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
    return self._compile_bytecode()
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
    return self._compile_core()
           ^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
    raise e
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
    pm.run(self.state)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
    raise patched_exception
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
    self._runPass(idx, pass_inst, state)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
    mutated |= check(pss.run_pass, internal_state)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
    mangled = func(compiler_state)
              ^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
    typemap, return_type, calltypes, errs = type_inference_stage(
                                            ^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
    errs = infer.propagate(raise_errors=raise_errors)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
    raise errors[0]
numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
No implementation of function Function(<built-in function iadd>) found for signature:
 
 >>> iadd(Literal[str](), unicode_type)
 
There are 18 candidate implementations:
   - Of which 15 did not match due to:
   Overload of function 'iadd': File: <numerous>: Line N/A.
     With argument(s): '(unicode_type, unicode_type)':
    No match.
   - Of which 2 did not match due to:
   Operator Overload in function 'iadd': File: unknown: Line unknown.
     With argument(s): '(unicode_type, unicode_type)':
    No match for registered cases:
     * (int64, int64) -> int64
     * (int64, uint64) -> int64
     * (uint64, int64) -> int64
     * (uint64, uint64) -> uint64
     * (float32, float32) -> float32
     * (float64, float64) -> float64
     * (complex64, complex64) -> complex64
     * (complex128, complex128) -> complex128
        
   - Of which 1 did not match due to:
   Overload in function 'unicode_concat': File: numba/cpython/unicode.py: Line 1843.
     With argument(s): '(unicode_type, unicode_type)':
    Rejected as the implementation raised a specific error:
      TypingError: Failed in nopython mode pipeline (step: nopython frontend)
    No implementation of function Function(<function _pick_kind at 0x7f60a0fd49a0>) found for signature:
     
     >>> _pick_kind(int32, int32)
     
    There are 2 candidate implementations:
          - Of which 2 did not match due to:
          Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
            With argument(s): '(int32, int32)':
           Rejected as the implementation raised a specific error:
             TypingError: Failed in nopython mode pipeline (step: nopython frontend)
           NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
               Traceback (most recent call last):
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                   sig = temp.apply(nolitargs, nolitkws)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                   sig = generic(args, kws)
                         ^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                   disp, new_args = self._get_impl(args, kws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                   impl, args = self._build_impl(cache_key, args, kws)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                   disp_type.get_call_type(self.context, args, kws)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                   self.dispatcher.get_call_template(args, kws)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                   self.compile(tuple(args))
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                   cres = self._compiler.compile(args, return_type)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                   raise retval
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                   retval = self._compile_core(args, return_type)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                   cres = compiler.compile_extra(self.targetdescr.typing_context,
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                   return pipeline.compile_extra(func)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                   return self._compile_bytecode()
                          ^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                   return self._compile_core()
                          ^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                   raise e
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                   pm.run(self.state)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                   raise patched_exception
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                   self._runPass(idx, pass_inst, state)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                   return func(*args, **kwargs)
                          ^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                   mutated |= check(pss.run_pass, internal_state)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                   mangled = func(compiler_state)
                             ^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                   typemap, return_type, calltypes, errs = type_inference_stage(
                                                           ^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                   infer.build_constraint()
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                   self.constrain_statement(inst)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                   self.typeof_assign(inst)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                   self.typeof_global(inst, inst.target, value)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                   typ = self.resolve_value_type(inst, gvar.value)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                   raise TypingError(msg, loc=inst.loc)
               numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
               NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
      raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
    
    During: resolving callee type: Function(<function _pick_kind at 0x7f60a0fd49a0>)
    During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1849)
    
    
    File "numba/cpython/unicode.py", line 1849:
            def concat_impl(a, b):
                <source elided>
                new_length = a._length + b._length
                new_kind = _pick_kind(a._kind, b._kind)
                ^
    
        Traceback (most recent call last):
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
            constraint(typeinfer)
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
            self.resolve(typeinfer, typevars, fnty)
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
            sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
            return self.context.resolve_function_type(fnty, pos_args, kw_args)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
            raise last_exception
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
            res = self._resolve_user_function_type(func, args, kws)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
            return func.get_call_type(self, args, kws)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
            failures.raise_error()
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
            raise errors.TypingError(self.format())
        numba.core.errors.TypingError: No implementation of function Function(<function _pick_kind at 0x7f60a0fd49a0>) found for signature:
         
         >>> _pick_kind(int32, int32)
         
        There are 2 candidate implementations:
              - Of which 2 did not match due to:
              Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                With argument(s): '(int32, int32)':
               Rejected as the implementation raised a specific error:
                 TypingError: Failed in nopython mode pipeline (step: nopython frontend)
               NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                   Traceback (most recent call last):
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                       sig = temp.apply(nolitargs, nolitkws)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                       sig = generic(args, kws)
                             ^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                       disp, new_args = self._get_impl(args, kws)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                       impl, args = self._build_impl(cache_key, args, kws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                       disp_type.get_call_type(self.context, args, kws)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                       self.dispatcher.get_call_template(args, kws)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                       self.compile(tuple(args))
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                       cres = self._compiler.compile(args, return_type)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                       raise retval
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                       retval = self._compile_core(args, return_type)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                       cres = compiler.compile_extra(self.targetdescr.typing_context,
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                       return pipeline.compile_extra(func)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                       return self._compile_bytecode()
                              ^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                       return self._compile_core()
                              ^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                       raise e
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                       pm.run(self.state)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                       raise patched_exception
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                       self._runPass(idx, pass_inst, state)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                       return func(*args, **kwargs)
                              ^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                       mutated |= check(pss.run_pass, internal_state)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                       mangled = func(compiler_state)
                                 ^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                       typemap, return_type, calltypes, errs = type_inference_stage(
                                                               ^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                       infer.build_constraint()
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                       self.constrain_statement(inst)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                       self.typeof_assign(inst)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                       self.typeof_global(inst, inst.target, value)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                       typ = self.resolve_value_type(inst, gvar.value)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                       raise TypingError(msg, loc=inst.loc)
                   numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                   NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
          raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
        During: resolving callee type: Function(<function _pick_kind at 0x7f60a0fd49a0>)
        During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1849)
        The above exception was the direct cause of the following exception:
        Traceback (most recent call last):
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
            sig = temp.apply(nolitargs, nolitkws)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
            sig = generic(args, kws)
                  ^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
            disp, new_args = self._get_impl(args, kws)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
            impl, args = self._build_impl(cache_key, args, kws)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
            disp_type.get_call_type(self.context, args, kws)
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
            self.dispatcher.get_call_template(args, kws)
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
            self.compile(tuple(args))
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
            cres = self._compiler.compile(args, return_type)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
            raise retval
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
            retval = self._compile_core(args, return_type)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
            cres = compiler.compile_extra(self.targetdescr.typing_context,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
            return pipeline.compile_extra(func)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
            return self._compile_bytecode()
                   ^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
            return self._compile_core()
                   ^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
            raise e
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
            pm.run(self.state)
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
            raise patched_exception
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
            self._runPass(idx, pass_inst, state)
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
            return func(*args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
            mutated |= check(pss.run_pass, internal_state)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
            mangled = func(compiler_state)
                      ^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
            typemap, return_type, calltypes, errs = type_inference_stage(
                                                    ^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
            errs = infer.propagate(raise_errors=raise_errors)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
            raise errors[0]
        numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
        No implementation of function Function(<function _pick_kind at 0x7f60a0fd49a0>) found for signature:
         
         >>> _pick_kind(int32, int32)
         
        There are 2 candidate implementations:
              - Of which 2 did not match due to:
              Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                With argument(s): '(int32, int32)':
               Rejected as the implementation raised a specific error:
                 TypingError: Failed in nopython mode pipeline (step: nopython frontend)
               NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                   Traceback (most recent call last):
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                       sig = temp.apply(nolitargs, nolitkws)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                       sig = generic(args, kws)
                             ^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                       disp, new_args = self._get_impl(args, kws)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                       impl, args = self._build_impl(cache_key, args, kws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                       disp_type.get_call_type(self.context, args, kws)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                       self.dispatcher.get_call_template(args, kws)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                       self.compile(tuple(args))
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                       cres = self._compiler.compile(args, return_type)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                       raise retval
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                       retval = self._compile_core(args, return_type)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                       cres = compiler.compile_extra(self.targetdescr.typing_context,
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                       return pipeline.compile_extra(func)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                       return self._compile_bytecode()
                              ^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                       return self._compile_core()
                              ^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                       raise e
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                       pm.run(self.state)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                       raise patched_exception
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                       self._runPass(idx, pass_inst, state)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                       return func(*args, **kwargs)
                              ^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                       mutated |= check(pss.run_pass, internal_state)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                       mangled = func(compiler_state)
                                 ^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                       typemap, return_type, calltypes, errs = type_inference_stage(
                                                               ^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                       infer.build_constraint()
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                       self.constrain_statement(inst)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                       self.typeof_assign(inst)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                       self.typeof_global(inst, inst.target, value)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                       typ = self.resolve_value_type(inst, gvar.value)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                       raise TypingError(msg, loc=inst.loc)
                   numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                   NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
          raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
        During: resolving callee type: Function(<function _pick_kind at 0x7f60a0fd49a0>)
        During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1849)
        File "numba/cpython/unicode.py", line 1849:
                def concat_impl(a, b):
                    <source elided>
                    new_length = a._length + b._length
                    new_kind = _pick_kind(a._kind, b._kind)
                    ^
  raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086

During: typing of intrinsic-call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_unicode.py (325)

File "numba/tests/test_unicode.py", line 325:
def enumerated_iter_usecase(x):
    <source elided>
    for i, s in enumerate(x):
        buf += s
        ^


======================================================================
ERROR: test_unicode_iter (numba.tests.test_unicode.TestUnicodeIteration.test_unicode_iter)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_unicode.py", line 2558, in test_unicode_iter
    self.assertPreciseEqual(pyfunc(a), cfunc(a))
                                       ^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 468, in _compile_for_args
    error_rewrite(e, 'typing')
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 407, in error_rewrite
    raise e
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 420, in _compile_for_args
    return_val = self.compile(tuple(argtypes))
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
    cres = self._compiler.compile(args, return_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
    raise retval
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
    retval = self._compile_core(args, return_type)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
    cres = compiler.compile_extra(self.targetdescr.typing_context,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
    return pipeline.compile_extra(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
    return self._compile_bytecode()
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
    return self._compile_core()
           ^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
    raise e
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
    pm.run(self.state)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
    raise patched_exception
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
    self._runPass(idx, pass_inst, state)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
    mutated |= check(pss.run_pass, internal_state)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
    mangled = func(compiler_state)
              ^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 466, in run_pass
    lower.lower()
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 187, in lower
    self.lower_normal_function(self.fndesc)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 241, in lower_normal_function
    entry_block_tail = self.lower_function_body()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 271, in lower_function_body
    self.lower_block(block)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 285, in lower_block
    self.lower_inst(inst)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 463, in lower_inst
    val = self.lower_assign(ty, inst)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 675, in lower_assign
    return self.lower_expr(ty, value)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 1235, in lower_expr
    res = impl(self.builder, (castval,))
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/base.py", line 1187, in __call__
    res = self._imp(self._context, builder, self._sig, args, loc=loc)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/base.py", line 1217, in wrapper
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/imputils.py", line 336, in wrapper
    func(context, builder, sig, args,
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py", line 2608, in iternext_unicode
    getitem_sig = fnty.get_call_type(tyctx, (types.unicode_type, types.uintp),
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
    failures.raise_error()
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: Failed in nopython mode pipeline (step: native lowering)
No implementation of function Function(<built-in function getitem>) found for signature:
 
 >>> getitem(unicode_type, uint64)
 
There are 22 candidate implementations:
 - Of which 20 did not match due to:
 Overload of function 'getitem': File: <numerous>: Line N/A.
   With argument(s): '(unicode_type, uint64)':
  No match.
 - Of which 1 did not match due to:
 Overload in function 'unicode_getitem': File: numba/cpython/unicode.py: Line 1782.
   With argument(s): '(unicode_type, uint64)':
  Rejected as the implementation raised a specific error:
    TypingError: Failed in nopython mode pipeline (step: nopython frontend)
  No implementation of function Function(<function _empty_string at 0x7f60a0fd44a0>) found for signature:
   
   >>> _empty_string(int64, Literal[int](1), bool)
   
  There are 2 candidate implementations:
    - Of which 2 did not match due to:
    Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
      With argument(s): '(int64, int64, bool)':
     Rejected as the implementation raised a specific error:
       TypingError: Failed in nopython mode pipeline (step: nopython frontend)
     No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
      
      >>> _kind_to_byte_width(int64)
      
     There are 2 candidate implementations:
           - Of which 2 did not match due to:
           Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
             With argument(s): '(int64)':
            Rejected as the implementation raised a specific error:
              TypingError: Failed in nopython mode pipeline (step: nopython frontend)
            NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                Traceback (most recent call last):
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                    sig = temp.apply(nolitargs, nolitkws)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                    sig = generic(args, kws)
                          ^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                    disp, new_args = self._get_impl(args, kws)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                    impl, args = self._build_impl(cache_key, args, kws)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                    disp_type.get_call_type(self.context, args, kws)
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                    self.dispatcher.get_call_template(args, kws)
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                    self.compile(tuple(args))
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                    cres = self._compiler.compile(args, return_type)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                    raise retval
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                    retval = self._compile_core(args, return_type)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                    cres = compiler.compile_extra(self.targetdescr.typing_context,
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                    return pipeline.compile_extra(func)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                    return self._compile_bytecode()
                           ^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                    return self._compile_core()
                           ^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                    raise e
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                    pm.run(self.state)
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                    raise patched_exception
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                    self._runPass(idx, pass_inst, state)
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                    return func(*args, **kwargs)
                           ^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                    mutated |= check(pss.run_pass, internal_state)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                    mangled = func(compiler_state)
                              ^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                    typemap, return_type, calltypes, errs = type_inference_stage(
                                                            ^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                    infer.build_constraint()
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                    self.constrain_statement(inst)
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                    self.typeof_assign(inst)
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                    self.typeof_global(inst, inst.target, value)
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                    typ = self.resolve_value_type(inst, gvar.value)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                    raise TypingError(msg, loc=inst.loc)
                numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
       raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
     
     During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
     During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
     
     
     File "numba/cpython/unicode.py", line 278:
     def _empty_string(kind, length, is_ascii=0):
         char_width = _kind_to_byte_width(kind)
         ^
     
         Traceback (most recent call last):
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
             constraint(typeinfer)
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
             self.resolve(typeinfer, typevars, fnty)
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
             sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
             return self.context.resolve_function_type(fnty, pos_args, kw_args)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
             raise last_exception
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
             res = self._resolve_user_function_type(func, args, kws)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
             return func.get_call_type(self, args, kws)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
             failures.raise_error()
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
             raise errors.TypingError(self.format())
         numba.core.errors.TypingError: No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
          
          >>> _kind_to_byte_width(int64)
          
         There are 2 candidate implementations:
               - Of which 2 did not match due to:
               Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                 With argument(s): '(int64)':
                Rejected as the implementation raised a specific error:
                  TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                    Traceback (most recent call last):
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                        sig = temp.apply(nolitargs, nolitkws)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                        sig = generic(args, kws)
                              ^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                        disp, new_args = self._get_impl(args, kws)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                        impl, args = self._build_impl(cache_key, args, kws)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                        disp_type.get_call_type(self.context, args, kws)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                        self.dispatcher.get_call_template(args, kws)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                        self.compile(tuple(args))
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                        cres = self._compiler.compile(args, return_type)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                        raise retval
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                        retval = self._compile_core(args, return_type)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                        cres = compiler.compile_extra(self.targetdescr.typing_context,
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                        return pipeline.compile_extra(func)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                        return self._compile_bytecode()
                               ^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                        return self._compile_core()
                               ^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                        raise e
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                        pm.run(self.state)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                        raise patched_exception
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                        self._runPass(idx, pass_inst, state)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                        return func(*args, **kwargs)
                               ^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                        mutated |= check(pss.run_pass, internal_state)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                        mangled = func(compiler_state)
                                  ^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                        typemap, return_type, calltypes, errs = type_inference_stage(
                                                                ^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                        infer.build_constraint()
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                        self.constrain_statement(inst)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                        self.typeof_assign(inst)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                        self.typeof_global(inst, inst.target, value)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                        typ = self.resolve_value_type(inst, gvar.value)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                        raise TypingError(msg, loc=inst.loc)
                    numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                    NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
           raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
         During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
         During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
         The above exception was the direct cause of the following exception:
         Traceback (most recent call last):
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
             sig = temp.apply(nolitargs, nolitkws)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
             sig = generic(args, kws)
                   ^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
             disp, new_args = self._get_impl(args, kws)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
             impl, args = self._build_impl(cache_key, args, kws)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
             disp_type.get_call_type(self.context, args, kws)
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
             self.dispatcher.get_call_template(args, kws)
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
             self.compile(tuple(args))
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
             cres = self._compiler.compile(args, return_type)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
             raise retval
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
             retval = self._compile_core(args, return_type)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
             cres = compiler.compile_extra(self.targetdescr.typing_context,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
             return pipeline.compile_extra(func)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
             return self._compile_bytecode()
                    ^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
             return self._compile_core()
                    ^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
             raise e
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
             pm.run(self.state)
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
             raise patched_exception
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
             self._runPass(idx, pass_inst, state)
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
             return func(*args, **kwargs)
                    ^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
             mutated |= check(pss.run_pass, internal_state)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
             mangled = func(compiler_state)
                       ^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
             typemap, return_type, calltypes, errs = type_inference_stage(
                                                     ^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
             errs = infer.propagate(raise_errors=raise_errors)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
             raise errors[0]
         numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
         No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
          
          >>> _kind_to_byte_width(int64)
          
         There are 2 candidate implementations:
               - Of which 2 did not match due to:
               Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                 With argument(s): '(int64)':
                Rejected as the implementation raised a specific error:
                  TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                    Traceback (most recent call last):
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                        sig = temp.apply(nolitargs, nolitkws)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                        sig = generic(args, kws)
                              ^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                        disp, new_args = self._get_impl(args, kws)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                        impl, args = self._build_impl(cache_key, args, kws)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                        disp_type.get_call_type(self.context, args, kws)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                        self.dispatcher.get_call_template(args, kws)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                        self.compile(tuple(args))
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                        cres = self._compiler.compile(args, return_type)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                        raise retval
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                        retval = self._compile_core(args, return_type)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                        cres = compiler.compile_extra(self.targetdescr.typing_context,
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                        return pipeline.compile_extra(func)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                        return self._compile_bytecode()
                               ^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                        return self._compile_core()
                               ^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                        raise e
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                        pm.run(self.state)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                        raise patched_exception
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                        self._runPass(idx, pass_inst, state)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                        return func(*args, **kwargs)
                               ^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                        mutated |= check(pss.run_pass, internal_state)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                        mangled = func(compiler_state)
                                  ^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                        typemap, return_type, calltypes, errs = type_inference_stage(
                                                                ^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                        infer.build_constraint()
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                        self.constrain_statement(inst)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                        self.typeof_assign(inst)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                        self.typeof_global(inst, inst.target, value)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                        typ = self.resolve_value_type(inst, gvar.value)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                        raise TypingError(msg, loc=inst.loc)
                    numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                    NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
           raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
         During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
         During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
         File "numba/cpython/unicode.py", line 278:
         def _empty_string(kind, length, is_ascii=0):
             char_width = _kind_to_byte_width(kind)
             ^
    raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086
  
  During: resolving callee type: Function(<function _empty_string at 0x7f60a0fd44a0>)
  During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1794)
  
  
  File "numba/cpython/unicode.py", line 1794:
              def getitem_char(s, idx):
                  <source elided>
                      is_ascii = _codepoint_is_ascii(cp)
                      ret = _empty_string(kind, 1, is_ascii)
                      ^
  
      Traceback (most recent call last):
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
          constraint(typeinfer)
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
          self.resolve(typeinfer, typevars, fnty)
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
          sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
          return self.context.resolve_function_type(fnty, pos_args, kw_args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
          raise last_exception
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
          res = self._resolve_user_function_type(func, args, kws)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
          return func.get_call_type(self, args, kws)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
          failures.raise_error()
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
          raise errors.TypingError(self.format())
      numba.core.errors.TypingError: No implementation of function Function(<function _empty_string at 0x7f60a0fd44a0>) found for signature:
       
       >>> _empty_string(int64, Literal[int](1), bool)
       
      There are 2 candidate implementations:
        - Of which 2 did not match due to:
        Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
          With argument(s): '(int64, int64, bool)':
         Rejected as the implementation raised a specific error:
           TypingError: Failed in nopython mode pipeline (step: nopython frontend)
         No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
          
          >>> _kind_to_byte_width(int64)
          
         There are 2 candidate implementations:
               - Of which 2 did not match due to:
               Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                 With argument(s): '(int64)':
                Rejected as the implementation raised a specific error:
                  TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                    Traceback (most recent call last):
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                        sig = temp.apply(nolitargs, nolitkws)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                        sig = generic(args, kws)
                              ^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                        disp, new_args = self._get_impl(args, kws)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                        impl, args = self._build_impl(cache_key, args, kws)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                        disp_type.get_call_type(self.context, args, kws)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                        self.dispatcher.get_call_template(args, kws)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                        self.compile(tuple(args))
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                        cres = self._compiler.compile(args, return_type)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                        raise retval
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                        retval = self._compile_core(args, return_type)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                        cres = compiler.compile_extra(self.targetdescr.typing_context,
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                        return pipeline.compile_extra(func)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                        return self._compile_bytecode()
                               ^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                        return self._compile_core()
                               ^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                        raise e
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                        pm.run(self.state)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                        raise patched_exception
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                        self._runPass(idx, pass_inst, state)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                        return func(*args, **kwargs)
                               ^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                        mutated |= check(pss.run_pass, internal_state)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                        mangled = func(compiler_state)
                                  ^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                        typemap, return_type, calltypes, errs = type_inference_stage(
                                                                ^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                        infer.build_constraint()
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                        self.constrain_statement(inst)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                        self.typeof_assign(inst)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                        self.typeof_global(inst, inst.target, value)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                        typ = self.resolve_value_type(inst, gvar.value)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                        raise TypingError(msg, loc=inst.loc)
                    numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                    NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
           raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
         
         During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
         During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
         
         
         File "numba/cpython/unicode.py", line 278:
         def _empty_string(kind, length, is_ascii=0):
             char_width = _kind_to_byte_width(kind)
             ^
         
             Traceback (most recent call last):
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
                 constraint(typeinfer)
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
                 self.resolve(typeinfer, typevars, fnty)
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
                 sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
                 return self.context.resolve_function_type(fnty, pos_args, kw_args)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
                 raise last_exception
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
                 res = self._resolve_user_function_type(func, args, kws)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
                 return func.get_call_type(self, args, kws)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
                 failures.raise_error()
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
                 raise errors.TypingError(self.format())
             numba.core.errors.TypingError: No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
              
              >>> _kind_to_byte_width(int64)
              
             There are 2 candidate implementations:
                   - Of which 2 did not match due to:
                   Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                     With argument(s): '(int64)':
                    Rejected as the implementation raised a specific error:
                      TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                    NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                        Traceback (most recent call last):
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                            sig = temp.apply(nolitargs, nolitkws)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                            sig = generic(args, kws)
                                  ^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                            disp, new_args = self._get_impl(args, kws)
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                            impl, args = self._build_impl(cache_key, args, kws)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                            disp_type.get_call_type(self.context, args, kws)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                            self.dispatcher.get_call_template(args, kws)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                            self.compile(tuple(args))
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                            cres = self._compiler.compile(args, return_type)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                            raise retval
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                            retval = self._compile_core(args, return_type)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                            cres = compiler.compile_extra(self.targetdescr.typing_context,
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                            return pipeline.compile_extra(func)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                            return self._compile_bytecode()
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                            return self._compile_core()
                                   ^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                            raise e
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                            pm.run(self.state)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                            raise patched_exception
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                            self._runPass(idx, pass_inst, state)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                            return func(*args, **kwargs)
                                   ^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                            mutated |= check(pss.run_pass, internal_state)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                            mangled = func(compiler_state)
                                      ^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                            typemap, return_type, calltypes, errs = type_inference_stage(
                                                                    ^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                            infer.build_constraint()
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                            self.constrain_statement(inst)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                            self.typeof_assign(inst)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                            self.typeof_global(inst, inst.target, value)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                            typ = self.resolve_value_type(inst, gvar.value)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                            raise TypingError(msg, loc=inst.loc)
                        numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                        NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
               raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
             During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
             During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
             The above exception was the direct cause of the following exception:
             Traceback (most recent call last):
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                 sig = temp.apply(nolitargs, nolitkws)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                 sig = generic(args, kws)
                       ^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                 disp, new_args = self._get_impl(args, kws)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                 impl, args = self._build_impl(cache_key, args, kws)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                 disp_type.get_call_type(self.context, args, kws)
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                 self.dispatcher.get_call_template(args, kws)
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                 self.compile(tuple(args))
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                 cres = self._compiler.compile(args, return_type)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                 raise retval
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                 retval = self._compile_core(args, return_type)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                 cres = compiler.compile_extra(self.targetdescr.typing_context,
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                 return pipeline.compile_extra(func)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                 return self._compile_bytecode()
                        ^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                 return self._compile_core()
                        ^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                 raise e
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                 pm.run(self.state)
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                 raise patched_exception
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                 self._runPass(idx, pass_inst, state)
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                 return func(*args, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                 mutated |= check(pss.run_pass, internal_state)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                 mangled = func(compiler_state)
                           ^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                 typemap, return_type, calltypes, errs = type_inference_stage(
                                                         ^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
                 errs = infer.propagate(raise_errors=raise_errors)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
                 raise errors[0]
             numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
             No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
              
              >>> _kind_to_byte_width(int64)
              
             There are 2 candidate implementations:
                   - Of which 2 did not match due to:
                   Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                     With argument(s): '(int64)':
                    Rejected as the implementation raised a specific error:
                      TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                    NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                        Traceback (most recent call last):
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                            sig = temp.apply(nolitargs, nolitkws)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                            sig = generic(args, kws)
                                  ^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                            disp, new_args = self._get_impl(args, kws)
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                            impl, args = self._build_impl(cache_key, args, kws)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                            disp_type.get_call_type(self.context, args, kws)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                            self.dispatcher.get_call_template(args, kws)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                            self.compile(tuple(args))
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                            cres = self._compiler.compile(args, return_type)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                            raise retval
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                            retval = self._compile_core(args, return_type)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                            cres = compiler.compile_extra(self.targetdescr.typing_context,
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                            return pipeline.compile_extra(func)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                            return self._compile_bytecode()
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                            return self._compile_core()
                                   ^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                            raise e
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                            pm.run(self.state)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                            raise patched_exception
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                            self._runPass(idx, pass_inst, state)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                            return func(*args, **kwargs)
                                   ^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                            mutated |= check(pss.run_pass, internal_state)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                            mangled = func(compiler_state)
                                      ^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                            typemap, return_type, calltypes, errs = type_inference_stage(
                                                                    ^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                            infer.build_constraint()
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                            self.constrain_statement(inst)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                            self.typeof_assign(inst)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                            self.typeof_global(inst, inst.target, value)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                            typ = self.resolve_value_type(inst, gvar.value)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                            raise TypingError(msg, loc=inst.loc)
                        numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                        NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
               raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
             During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
             During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
             File "numba/cpython/unicode.py", line 278:
             def _empty_string(kind, length, is_ascii=0):
                 char_width = _kind_to_byte_width(kind)
                 ^
        raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086
      During: resolving callee type: Function(<function _empty_string at 0x7f60a0fd44a0>)
      During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1794)
      The above exception was the direct cause of the following exception:
      Traceback (most recent call last):
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
          sig = temp.apply(nolitargs, nolitkws)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
          sig = generic(args, kws)
                ^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
          disp, new_args = self._get_impl(args, kws)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
          impl, args = self._build_impl(cache_key, args, kws)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
          disp_type.get_call_type(self.context, args, kws)
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
          self.dispatcher.get_call_template(args, kws)
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
          self.compile(tuple(args))
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
          cres = self._compiler.compile(args, return_type)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
          raise retval
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
          retval = self._compile_core(args, return_type)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
          cres = compiler.compile_extra(self.targetdescr.typing_context,
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
          return pipeline.compile_extra(func)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
          return self._compile_bytecode()
                 ^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
          return self._compile_core()
                 ^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
          raise e
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
          pm.run(self.state)
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
          raise patched_exception
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
          self._runPass(idx, pass_inst, state)
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
          return func(*args, **kwargs)
                 ^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
          mutated |= check(pss.run_pass, internal_state)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
          mangled = func(compiler_state)
                    ^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
          typemap, return_type, calltypes, errs = type_inference_stage(
                                                  ^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
          errs = infer.propagate(raise_errors=raise_errors)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
          raise errors[0]
      numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
      No implementation of function Function(<function _empty_string at 0x7f60a0fd44a0>) found for signature:
       
       >>> _empty_string(int64, Literal[int](1), bool)
       
      There are 2 candidate implementations:
        - Of which 2 did not match due to:
        Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
          With argument(s): '(int64, int64, bool)':
         Rejected as the implementation raised a specific error:
           TypingError: Failed in nopython mode pipeline (step: nopython frontend)
         No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
          
          >>> _kind_to_byte_width(int64)
          
         There are 2 candidate implementations:
               - Of which 2 did not match due to:
               Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                 With argument(s): '(int64)':
                Rejected as the implementation raised a specific error:
                  TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                    Traceback (most recent call last):
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                        sig = temp.apply(nolitargs, nolitkws)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                        sig = generic(args, kws)
                              ^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                        disp, new_args = self._get_impl(args, kws)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                        impl, args = self._build_impl(cache_key, args, kws)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                        disp_type.get_call_type(self.context, args, kws)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                        self.dispatcher.get_call_template(args, kws)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                        self.compile(tuple(args))
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                        cres = self._compiler.compile(args, return_type)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                        raise retval
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                        retval = self._compile_core(args, return_type)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                        cres = compiler.compile_extra(self.targetdescr.typing_context,
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                        return pipeline.compile_extra(func)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                        return self._compile_bytecode()
                               ^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                        return self._compile_core()
                               ^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                        raise e
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                        pm.run(self.state)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                        raise patched_exception
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                        self._runPass(idx, pass_inst, state)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                        return func(*args, **kwargs)
                               ^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                        mutated |= check(pss.run_pass, internal_state)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                        mangled = func(compiler_state)
                                  ^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                        typemap, return_type, calltypes, errs = type_inference_stage(
                                                                ^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                        infer.build_constraint()
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                        self.constrain_statement(inst)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                        self.typeof_assign(inst)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                        self.typeof_global(inst, inst.target, value)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                        typ = self.resolve_value_type(inst, gvar.value)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                        raise TypingError(msg, loc=inst.loc)
                    numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                    NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
           raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
         
         During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
         During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
         
         
         File "numba/cpython/unicode.py", line 278:
         def _empty_string(kind, length, is_ascii=0):
             char_width = _kind_to_byte_width(kind)
             ^
         
             Traceback (most recent call last):
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
                 constraint(typeinfer)
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
                 self.resolve(typeinfer, typevars, fnty)
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
                 sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
                 return self.context.resolve_function_type(fnty, pos_args, kw_args)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
                 raise last_exception
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
                 res = self._resolve_user_function_type(func, args, kws)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
                 return func.get_call_type(self, args, kws)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
                 failures.raise_error()
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
                 raise errors.TypingError(self.format())
             numba.core.errors.TypingError: No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
              
              >>> _kind_to_byte_width(int64)
              
             There are 2 candidate implementations:
                   - Of which 2 did not match due to:
                   Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                     With argument(s): '(int64)':
                    Rejected as the implementation raised a specific error:
                      TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                    NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                        Traceback (most recent call last):
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                            sig = temp.apply(nolitargs, nolitkws)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                            sig = generic(args, kws)
                                  ^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                            disp, new_args = self._get_impl(args, kws)
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                            impl, args = self._build_impl(cache_key, args, kws)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                            disp_type.get_call_type(self.context, args, kws)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                            self.dispatcher.get_call_template(args, kws)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                            self.compile(tuple(args))
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                            cres = self._compiler.compile(args, return_type)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                            raise retval
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                            retval = self._compile_core(args, return_type)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                            cres = compiler.compile_extra(self.targetdescr.typing_context,
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                            return pipeline.compile_extra(func)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                            return self._compile_bytecode()
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                            return self._compile_core()
                                   ^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                            raise e
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                            pm.run(self.state)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                            raise patched_exception
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                            self._runPass(idx, pass_inst, state)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                            return func(*args, **kwargs)
                                   ^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                            mutated |= check(pss.run_pass, internal_state)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                            mangled = func(compiler_state)
                                      ^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                            typemap, return_type, calltypes, errs = type_inference_stage(
                                                                    ^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                            infer.build_constraint()
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                            self.constrain_statement(inst)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                            self.typeof_assign(inst)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                            self.typeof_global(inst, inst.target, value)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                            typ = self.resolve_value_type(inst, gvar.value)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                            raise TypingError(msg, loc=inst.loc)
                        numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                        NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
               raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
             During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
             During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
             The above exception was the direct cause of the following exception:
             Traceback (most recent call last):
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                 sig = temp.apply(nolitargs, nolitkws)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                 sig = generic(args, kws)
                       ^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                 disp, new_args = self._get_impl(args, kws)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                 impl, args = self._build_impl(cache_key, args, kws)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                 disp_type.get_call_type(self.context, args, kws)
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                 self.dispatcher.get_call_template(args, kws)
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                 self.compile(tuple(args))
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                 cres = self._compiler.compile(args, return_type)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                 raise retval
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                 retval = self._compile_core(args, return_type)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                 cres = compiler.compile_extra(self.targetdescr.typing_context,
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                 return pipeline.compile_extra(func)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                 return self._compile_bytecode()
                        ^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                 return self._compile_core()
                        ^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                 raise e
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                 pm.run(self.state)
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                 raise patched_exception
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                 self._runPass(idx, pass_inst, state)
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                 return func(*args, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                 mutated |= check(pss.run_pass, internal_state)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                 mangled = func(compiler_state)
                           ^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                 typemap, return_type, calltypes, errs = type_inference_stage(
                                                         ^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
                 errs = infer.propagate(raise_errors=raise_errors)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
                 raise errors[0]
             numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
             No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
              
              >>> _kind_to_byte_width(int64)
              
             There are 2 candidate implementations:
                   - Of which 2 did not match due to:
                   Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                     With argument(s): '(int64)':
                    Rejected as the implementation raised a specific error:
                      TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                    NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                        Traceback (most recent call last):
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                            sig = temp.apply(nolitargs, nolitkws)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                            sig = generic(args, kws)
                                  ^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                            disp, new_args = self._get_impl(args, kws)
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                            impl, args = self._build_impl(cache_key, args, kws)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                            disp_type.get_call_type(self.context, args, kws)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                            self.dispatcher.get_call_template(args, kws)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                            self.compile(tuple(args))
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                            cres = self._compiler.compile(args, return_type)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                            raise retval
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                            retval = self._compile_core(args, return_type)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                            cres = compiler.compile_extra(self.targetdescr.typing_context,
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                            return pipeline.compile_extra(func)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                            return self._compile_bytecode()
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                            return self._compile_core()
                                   ^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                            raise e
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                            pm.run(self.state)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                            raise patched_exception
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                            self._runPass(idx, pass_inst, state)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                            return func(*args, **kwargs)
                                   ^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                            mutated |= check(pss.run_pass, internal_state)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                            mangled = func(compiler_state)
                                      ^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                            typemap, return_type, calltypes, errs = type_inference_stage(
                                                                    ^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                            infer.build_constraint()
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                            self.constrain_statement(inst)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                            self.typeof_assign(inst)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                            self.typeof_global(inst, inst.target, value)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                            typ = self.resolve_value_type(inst, gvar.value)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                            raise TypingError(msg, loc=inst.loc)
                        numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                        NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
               raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
             During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
             During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
             File "numba/cpython/unicode.py", line 278:
             def _empty_string(kind, length, is_ascii=0):
                 char_width = _kind_to_byte_width(kind)
                 ^
        raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086
      During: resolving callee type: Function(<function _empty_string at 0x7f60a0fd44a0>)
      During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1794)
      File "numba/cpython/unicode.py", line 1794:
                  def getitem_char(s, idx):
                      <source elided>
                          is_ascii = _codepoint_is_ascii(cp)
                          ret = _empty_string(kind, 1, is_ascii)
                          ^
  raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086
 - Of which 1 did not match due to:
 Overload in function 'unicode_getitem': File: numba/cpython/unicode.py: Line 1782.
   With argument(s): '(unicode_type, uint64)':
  Rejected as the implementation raised a specific error:
    TypingError: Failed in nopython mode pipeline (step: nopython frontend)
  No implementation of function Function(<function _empty_string at 0x7f60a0fd44a0>) found for signature:
   
   >>> _empty_string(int64, Literal[int](1), bool)
   
  There are 2 candidate implementations:
      - Of which 2 did not match due to:
      Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
        With argument(s): '(int64, int64, bool)':
       Rejected as the implementation raised a specific error:
         TypingError: Failed in nopython mode pipeline (step: nopython frontend)
       No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
        
        >>> _kind_to_byte_width(int64)
        
       There are 2 candidate implementations:
             - Of which 2 did not match due to:
             Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
               With argument(s): '(int64)':
              Rejected as the implementation raised a specific error:
                TypingError: Failed in nopython mode pipeline (step: nopython frontend)
              NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                  Traceback (most recent call last):
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                      sig = temp.apply(nolitargs, nolitkws)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                      sig = generic(args, kws)
                            ^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                      disp, new_args = self._get_impl(args, kws)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                      impl, args = self._build_impl(cache_key, args, kws)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                      disp_type.get_call_type(self.context, args, kws)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                      self.dispatcher.get_call_template(args, kws)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                      self.compile(tuple(args))
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                      cres = self._compiler.compile(args, return_type)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                      raise retval
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                      retval = self._compile_core(args, return_type)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                      cres = compiler.compile_extra(self.targetdescr.typing_context,
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                      return pipeline.compile_extra(func)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                      return self._compile_bytecode()
                             ^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                      return self._compile_core()
                             ^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                      raise e
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                      pm.run(self.state)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                      raise patched_exception
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                      self._runPass(idx, pass_inst, state)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                      return func(*args, **kwargs)
                             ^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                      mutated |= check(pss.run_pass, internal_state)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                      mangled = func(compiler_state)
                                ^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                      typemap, return_type, calltypes, errs = type_inference_stage(
                                                              ^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                      infer.build_constraint()
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                      self.constrain_statement(inst)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                      self.typeof_assign(inst)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                      self.typeof_global(inst, inst.target, value)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                      typ = self.resolve_value_type(inst, gvar.value)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                      raise TypingError(msg, loc=inst.loc)
                  numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                  NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
         raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
       
       During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
       During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
       
       
       File "numba/cpython/unicode.py", line 278:
       def _empty_string(kind, length, is_ascii=0):
           char_width = _kind_to_byte_width(kind)
           ^
       
           Traceback (most recent call last):
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
               constraint(typeinfer)
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
               self.resolve(typeinfer, typevars, fnty)
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
               sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
               return self.context.resolve_function_type(fnty, pos_args, kw_args)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
               raise last_exception
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
               res = self._resolve_user_function_type(func, args, kws)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
               return func.get_call_type(self, args, kws)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
               failures.raise_error()
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
               raise errors.TypingError(self.format())
           numba.core.errors.TypingError: No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
            
            >>> _kind_to_byte_width(int64)
            
           There are 2 candidate implementations:
                 - Of which 2 did not match due to:
                 Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                   With argument(s): '(int64)':
                  Rejected as the implementation raised a specific error:
                    TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                  NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                      Traceback (most recent call last):
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                          sig = temp.apply(nolitargs, nolitkws)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                          sig = generic(args, kws)
                                ^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                          disp, new_args = self._get_impl(args, kws)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                          impl, args = self._build_impl(cache_key, args, kws)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                          disp_type.get_call_type(self.context, args, kws)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                          self.dispatcher.get_call_template(args, kws)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                          self.compile(tuple(args))
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                          cres = self._compiler.compile(args, return_type)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                          raise retval
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                          retval = self._compile_core(args, return_type)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                          cres = compiler.compile_extra(self.targetdescr.typing_context,
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                          return pipeline.compile_extra(func)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                          return self._compile_bytecode()
                                 ^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                          return self._compile_core()
                                 ^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                          raise e
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                          pm.run(self.state)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                          raise patched_exception
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                          self._runPass(idx, pass_inst, state)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                          return func(*args, **kwargs)
                                 ^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                          mutated |= check(pss.run_pass, internal_state)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                          mangled = func(compiler_state)
                                    ^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                          typemap, return_type, calltypes, errs = type_inference_stage(
                                                                  ^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                          infer.build_constraint()
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                          self.constrain_statement(inst)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                          self.typeof_assign(inst)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                          self.typeof_global(inst, inst.target, value)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                          typ = self.resolve_value_type(inst, gvar.value)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                          raise TypingError(msg, loc=inst.loc)
                      numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                      NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
             raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
           During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
           During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
           The above exception was the direct cause of the following exception:
           Traceback (most recent call last):
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
               sig = temp.apply(nolitargs, nolitkws)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
               sig = generic(args, kws)
                     ^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
               disp, new_args = self._get_impl(args, kws)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
               impl, args = self._build_impl(cache_key, args, kws)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
               disp_type.get_call_type(self.context, args, kws)
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
               self.dispatcher.get_call_template(args, kws)
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
               self.compile(tuple(args))
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
               cres = self._compiler.compile(args, return_type)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
               raise retval
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
               retval = self._compile_core(args, return_type)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
               cres = compiler.compile_extra(self.targetdescr.typing_context,
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
               return pipeline.compile_extra(func)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
               return self._compile_bytecode()
                      ^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
               return self._compile_core()
                      ^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
               raise e
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
               pm.run(self.state)
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
               raise patched_exception
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
               self._runPass(idx, pass_inst, state)
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
               return func(*args, **kwargs)
                      ^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
               mutated |= check(pss.run_pass, internal_state)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
               mangled = func(compiler_state)
                         ^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
               typemap, return_type, calltypes, errs = type_inference_stage(
                                                       ^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
               errs = infer.propagate(raise_errors=raise_errors)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
               raise errors[0]
           numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
           No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
            
            >>> _kind_to_byte_width(int64)
            
           There are 2 candidate implementations:
                 - Of which 2 did not match due to:
                 Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                   With argument(s): '(int64)':
                  Rejected as the implementation raised a specific error:
                    TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                  NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                      Traceback (most recent call last):
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                          sig = temp.apply(nolitargs, nolitkws)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                          sig = generic(args, kws)
                                ^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                          disp, new_args = self._get_impl(args, kws)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                          impl, args = self._build_impl(cache_key, args, kws)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                          disp_type.get_call_type(self.context, args, kws)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                          self.dispatcher.get_call_template(args, kws)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                          self.compile(tuple(args))
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                          cres = self._compiler.compile(args, return_type)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                          raise retval
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                          retval = self._compile_core(args, return_type)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                          cres = compiler.compile_extra(self.targetdescr.typing_context,
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                          return pipeline.compile_extra(func)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                          return self._compile_bytecode()
                                 ^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                          return self._compile_core()
                                 ^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                          raise e
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                          pm.run(self.state)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                          raise patched_exception
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                          self._runPass(idx, pass_inst, state)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                          return func(*args, **kwargs)
                                 ^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                          mutated |= check(pss.run_pass, internal_state)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                          mangled = func(compiler_state)
                                    ^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                          typemap, return_type, calltypes, errs = type_inference_stage(
                                                                  ^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                          infer.build_constraint()
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                          self.constrain_statement(inst)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                          self.typeof_assign(inst)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                          self.typeof_global(inst, inst.target, value)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                          typ = self.resolve_value_type(inst, gvar.value)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                          raise TypingError(msg, loc=inst.loc)
                      numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                      NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
             raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
           During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
           During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
           File "numba/cpython/unicode.py", line 278:
           def _empty_string(kind, length, is_ascii=0):
               char_width = _kind_to_byte_width(kind)
               ^
    raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086
  
  During: resolving callee type: Function(<function _empty_string at 0x7f60a0fd44a0>)
  During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1794)
  
  
  File "numba/cpython/unicode.py", line 1794:
              def getitem_char(s, idx):
                  <source elided>
                      is_ascii = _codepoint_is_ascii(cp)
                      ret = _empty_string(kind, 1, is_ascii)
                      ^
  
      Traceback (most recent call last):
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
          constraint(typeinfer)
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
          self.resolve(typeinfer, typevars, fnty)
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
          sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
          return self.context.resolve_function_type(fnty, pos_args, kw_args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
          raise last_exception
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
          res = self._resolve_user_function_type(func, args, kws)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
          return func.get_call_type(self, args, kws)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
          failures.raise_error()
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
          raise errors.TypingError(self.format())
      numba.core.errors.TypingError: No implementation of function Function(<function _empty_string at 0x7f60a0fd44a0>) found for signature:
       
       >>> _empty_string(int64, Literal[int](1), bool)
       
      There are 2 candidate implementations:
          - Of which 2 did not match due to:
          Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
            With argument(s): '(int64, int64, bool)':
           Rejected as the implementation raised a specific error:
             TypingError: Failed in nopython mode pipeline (step: nopython frontend)
           No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
            
            >>> _kind_to_byte_width(int64)
            
           There are 2 candidate implementations:
                 - Of which 2 did not match due to:
                 Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                   With argument(s): '(int64)':
                  Rejected as the implementation raised a specific error:
                    TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                  NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                      Traceback (most recent call last):
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                          sig = temp.apply(nolitargs, nolitkws)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                          sig = generic(args, kws)
                                ^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                          disp, new_args = self._get_impl(args, kws)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                          impl, args = self._build_impl(cache_key, args, kws)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                          disp_type.get_call_type(self.context, args, kws)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                          self.dispatcher.get_call_template(args, kws)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                          self.compile(tuple(args))
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                          cres = self._compiler.compile(args, return_type)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                          raise retval
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                          retval = self._compile_core(args, return_type)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                          cres = compiler.compile_extra(self.targetdescr.typing_context,
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                          return pipeline.compile_extra(func)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                          return self._compile_bytecode()
                                 ^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                          return self._compile_core()
                                 ^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                          raise e
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                          pm.run(self.state)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                          raise patched_exception
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                          self._runPass(idx, pass_inst, state)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                          return func(*args, **kwargs)
                                 ^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                          mutated |= check(pss.run_pass, internal_state)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                          mangled = func(compiler_state)
                                    ^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                          typemap, return_type, calltypes, errs = type_inference_stage(
                                                                  ^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                          infer.build_constraint()
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                          self.constrain_statement(inst)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                          self.typeof_assign(inst)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                          self.typeof_global(inst, inst.target, value)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                          typ = self.resolve_value_type(inst, gvar.value)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                          raise TypingError(msg, loc=inst.loc)
                      numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                      NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
             raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
           
           During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
           During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
           
           
           File "numba/cpython/unicode.py", line 278:
           def _empty_string(kind, length, is_ascii=0):
               char_width = _kind_to_byte_width(kind)
               ^
           
               Traceback (most recent call last):
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
                   constraint(typeinfer)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
                   self.resolve(typeinfer, typevars, fnty)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
                   sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
                   return self.context.resolve_function_type(fnty, pos_args, kw_args)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
                   raise last_exception
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
                   res = self._resolve_user_function_type(func, args, kws)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
                   return func.get_call_type(self, args, kws)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
                   failures.raise_error()
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
                   raise errors.TypingError(self.format())
               numba.core.errors.TypingError: No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
                
                >>> _kind_to_byte_width(int64)
                
               There are 2 candidate implementations:
                     - Of which 2 did not match due to:
                     Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                       With argument(s): '(int64)':
                      Rejected as the implementation raised a specific error:
                        TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                      NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                          Traceback (most recent call last):
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                              sig = temp.apply(nolitargs, nolitkws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                              sig = generic(args, kws)
                                    ^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                              disp, new_args = self._get_impl(args, kws)
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                              impl, args = self._build_impl(cache_key, args, kws)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                              disp_type.get_call_type(self.context, args, kws)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                              self.dispatcher.get_call_template(args, kws)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                              self.compile(tuple(args))
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                              cres = self._compiler.compile(args, return_type)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                              raise retval
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                              retval = self._compile_core(args, return_type)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                              cres = compiler.compile_extra(self.targetdescr.typing_context,
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                              return pipeline.compile_extra(func)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                              return self._compile_bytecode()
                                     ^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                              return self._compile_core()
                                     ^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                              raise e
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                              pm.run(self.state)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                              raise patched_exception
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                              self._runPass(idx, pass_inst, state)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                              return func(*args, **kwargs)
                                     ^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                              mutated |= check(pss.run_pass, internal_state)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                              mangled = func(compiler_state)
                                        ^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                              typemap, return_type, calltypes, errs = type_inference_stage(
                                                                      ^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                              infer.build_constraint()
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                              self.constrain_statement(inst)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                              self.typeof_assign(inst)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                              self.typeof_global(inst, inst.target, value)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                              typ = self.resolve_value_type(inst, gvar.value)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                              raise TypingError(msg, loc=inst.loc)
                          numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                          NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                 raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
               During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
               During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
               The above exception was the direct cause of the following exception:
               Traceback (most recent call last):
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                   sig = temp.apply(nolitargs, nolitkws)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                   sig = generic(args, kws)
                         ^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                   disp, new_args = self._get_impl(args, kws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                   impl, args = self._build_impl(cache_key, args, kws)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                   disp_type.get_call_type(self.context, args, kws)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                   self.dispatcher.get_call_template(args, kws)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                   self.compile(tuple(args))
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                   cres = self._compiler.compile(args, return_type)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                   raise retval
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                   retval = self._compile_core(args, return_type)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                   cres = compiler.compile_extra(self.targetdescr.typing_context,
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                   return pipeline.compile_extra(func)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                   return self._compile_bytecode()
                          ^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                   return self._compile_core()
                          ^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                   raise e
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                   pm.run(self.state)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                   raise patched_exception
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                   self._runPass(idx, pass_inst, state)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                   return func(*args, **kwargs)
                          ^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                   mutated |= check(pss.run_pass, internal_state)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                   mangled = func(compiler_state)
                             ^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                   typemap, return_type, calltypes, errs = type_inference_stage(
                                                           ^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
                   errs = infer.propagate(raise_errors=raise_errors)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
                   raise errors[0]
               numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
               No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
                
                >>> _kind_to_byte_width(int64)
                
               There are 2 candidate implementations:
                     - Of which 2 did not match due to:
                     Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                       With argument(s): '(int64)':
                      Rejected as the implementation raised a specific error:
                        TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                      NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                          Traceback (most recent call last):
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                              sig = temp.apply(nolitargs, nolitkws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                              sig = generic(args, kws)
                                    ^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                              disp, new_args = self._get_impl(args, kws)
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                              impl, args = self._build_impl(cache_key, args, kws)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                              disp_type.get_call_type(self.context, args, kws)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                              self.dispatcher.get_call_template(args, kws)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                              self.compile(tuple(args))
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                              cres = self._compiler.compile(args, return_type)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                              raise retval
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                              retval = self._compile_core(args, return_type)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                              cres = compiler.compile_extra(self.targetdescr.typing_context,
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                              return pipeline.compile_extra(func)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                              return self._compile_bytecode()
                                     ^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                              return self._compile_core()
                                     ^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                              raise e
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                              pm.run(self.state)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                              raise patched_exception
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                              self._runPass(idx, pass_inst, state)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                              return func(*args, **kwargs)
                                     ^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                              mutated |= check(pss.run_pass, internal_state)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                              mangled = func(compiler_state)
                                        ^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                              typemap, return_type, calltypes, errs = type_inference_stage(
                                                                      ^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                              infer.build_constraint()
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                              self.constrain_statement(inst)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                              self.typeof_assign(inst)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                              self.typeof_global(inst, inst.target, value)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                              typ = self.resolve_value_type(inst, gvar.value)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                              raise TypingError(msg, loc=inst.loc)
                          numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                          NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                 raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
               During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
               During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
               File "numba/cpython/unicode.py", line 278:
               def _empty_string(kind, length, is_ascii=0):
                   char_width = _kind_to_byte_width(kind)
                   ^
        raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086
      During: resolving callee type: Function(<function _empty_string at 0x7f60a0fd44a0>)
      During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1794)
      The above exception was the direct cause of the following exception:
      Traceback (most recent call last):
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 303, in get_call_type
          sig = temp.apply(args, kws)
                ^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
          sig = generic(args, kws)
                ^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
          disp, new_args = self._get_impl(args, kws)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
          impl, args = self._build_impl(cache_key, args, kws)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
          disp_type.get_call_type(self.context, args, kws)
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
          self.dispatcher.get_call_template(args, kws)
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
          self.compile(tuple(args))
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
          cres = self._compiler.compile(args, return_type)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
          raise retval
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
          retval = self._compile_core(args, return_type)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
          cres = compiler.compile_extra(self.targetdescr.typing_context,
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
          return pipeline.compile_extra(func)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
          return self._compile_bytecode()
                 ^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
          return self._compile_core()
                 ^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
          raise e
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
          pm.run(self.state)
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
          raise patched_exception
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
          self._runPass(idx, pass_inst, state)
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
          return func(*args, **kwargs)
                 ^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
          mutated |= check(pss.run_pass, internal_state)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
          mangled = func(compiler_state)
                    ^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
          typemap, return_type, calltypes, errs = type_inference_stage(
                                                  ^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
          errs = infer.propagate(raise_errors=raise_errors)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
          raise errors[0]
      numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
      No implementation of function Function(<function _empty_string at 0x7f60a0fd44a0>) found for signature:
       
       >>> _empty_string(int64, Literal[int](1), bool)
       
      There are 2 candidate implementations:
          - Of which 2 did not match due to:
          Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
            With argument(s): '(int64, int64, bool)':
           Rejected as the implementation raised a specific error:
             TypingError: Failed in nopython mode pipeline (step: nopython frontend)
           No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
            
            >>> _kind_to_byte_width(int64)
            
           There are 2 candidate implementations:
                 - Of which 2 did not match due to:
                 Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                   With argument(s): '(int64)':
                  Rejected as the implementation raised a specific error:
                    TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                  NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                      Traceback (most recent call last):
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                          sig = temp.apply(nolitargs, nolitkws)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                          sig = generic(args, kws)
                                ^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                          disp, new_args = self._get_impl(args, kws)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                          impl, args = self._build_impl(cache_key, args, kws)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                          disp_type.get_call_type(self.context, args, kws)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                          self.dispatcher.get_call_template(args, kws)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                          self.compile(tuple(args))
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                          cres = self._compiler.compile(args, return_type)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                          raise retval
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                          retval = self._compile_core(args, return_type)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                          cres = compiler.compile_extra(self.targetdescr.typing_context,
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                          return pipeline.compile_extra(func)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                          return self._compile_bytecode()
                                 ^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                          return self._compile_core()
                                 ^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                          raise e
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                          pm.run(self.state)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                          raise patched_exception
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                          self._runPass(idx, pass_inst, state)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                          return func(*args, **kwargs)
                                 ^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                          mutated |= check(pss.run_pass, internal_state)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                          mangled = func(compiler_state)
                                    ^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                          typemap, return_type, calltypes, errs = type_inference_stage(
                                                                  ^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                          infer.build_constraint()
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                          self.constrain_statement(inst)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                          self.typeof_assign(inst)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                          self.typeof_global(inst, inst.target, value)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                          typ = self.resolve_value_type(inst, gvar.value)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                          raise TypingError(msg, loc=inst.loc)
                      numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                      NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
             raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
           
           During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
           During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
           
           
           File "numba/cpython/unicode.py", line 278:
           def _empty_string(kind, length, is_ascii=0):
               char_width = _kind_to_byte_width(kind)
               ^
           
               Traceback (most recent call last):
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
                   constraint(typeinfer)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
                   self.resolve(typeinfer, typevars, fnty)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
                   sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
                   return self.context.resolve_function_type(fnty, pos_args, kw_args)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
                   raise last_exception
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
                   res = self._resolve_user_function_type(func, args, kws)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
                   return func.get_call_type(self, args, kws)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
                   failures.raise_error()
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
                   raise errors.TypingError(self.format())
               numba.core.errors.TypingError: No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
                
                >>> _kind_to_byte_width(int64)
                
               There are 2 candidate implementations:
                     - Of which 2 did not match due to:
                     Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                       With argument(s): '(int64)':
                      Rejected as the implementation raised a specific error:
                        TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                      NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                          Traceback (most recent call last):
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                              sig = temp.apply(nolitargs, nolitkws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                              sig = generic(args, kws)
                                    ^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                              disp, new_args = self._get_impl(args, kws)
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                              impl, args = self._build_impl(cache_key, args, kws)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                              disp_type.get_call_type(self.context, args, kws)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                              self.dispatcher.get_call_template(args, kws)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                              self.compile(tuple(args))
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                              cres = self._compiler.compile(args, return_type)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                              raise retval
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                              retval = self._compile_core(args, return_type)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                              cres = compiler.compile_extra(self.targetdescr.typing_context,
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                              return pipeline.compile_extra(func)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                              return self._compile_bytecode()
                                     ^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                              return self._compile_core()
                                     ^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                              raise e
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                              pm.run(self.state)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                              raise patched_exception
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                              self._runPass(idx, pass_inst, state)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                              return func(*args, **kwargs)
                                     ^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                              mutated |= check(pss.run_pass, internal_state)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                              mangled = func(compiler_state)
                                        ^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                              typemap, return_type, calltypes, errs = type_inference_stage(
                                                                      ^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                              infer.build_constraint()
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                              self.constrain_statement(inst)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                              self.typeof_assign(inst)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                              self.typeof_global(inst, inst.target, value)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                              typ = self.resolve_value_type(inst, gvar.value)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                              raise TypingError(msg, loc=inst.loc)
                          numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                          NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                 raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
               During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
               During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
               The above exception was the direct cause of the following exception:
               Traceback (most recent call last):
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                   sig = temp.apply(nolitargs, nolitkws)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                   sig = generic(args, kws)
                         ^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                   disp, new_args = self._get_impl(args, kws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                   impl, args = self._build_impl(cache_key, args, kws)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                   disp_type.get_call_type(self.context, args, kws)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                   self.dispatcher.get_call_template(args, kws)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                   self.compile(tuple(args))
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                   cres = self._compiler.compile(args, return_type)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                   raise retval
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                   retval = self._compile_core(args, return_type)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                   cres = compiler.compile_extra(self.targetdescr.typing_context,
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                   return pipeline.compile_extra(func)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                   return self._compile_bytecode()
                          ^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                   return self._compile_core()
                          ^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                   raise e
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                   pm.run(self.state)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                   raise patched_exception
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                   self._runPass(idx, pass_inst, state)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                   return func(*args, **kwargs)
                          ^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                   mutated |= check(pss.run_pass, internal_state)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                   mangled = func(compiler_state)
                             ^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                   typemap, return_type, calltypes, errs = type_inference_stage(
                                                           ^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
                   errs = infer.propagate(raise_errors=raise_errors)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
                   raise errors[0]
               numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
               No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
                
                >>> _kind_to_byte_width(int64)
                
               There are 2 candidate implementations:
                     - Of which 2 did not match due to:
                     Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                       With argument(s): '(int64)':
                      Rejected as the implementation raised a specific error:
                        TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                      NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                          Traceback (most recent call last):
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                              sig = temp.apply(nolitargs, nolitkws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                              sig = generic(args, kws)
                                    ^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                              disp, new_args = self._get_impl(args, kws)
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                              impl, args = self._build_impl(cache_key, args, kws)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                              disp_type.get_call_type(self.context, args, kws)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                              self.dispatcher.get_call_template(args, kws)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                              self.compile(tuple(args))
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                              cres = self._compiler.compile(args, return_type)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                              raise retval
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                              retval = self._compile_core(args, return_type)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                              cres = compiler.compile_extra(self.targetdescr.typing_context,
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                              return pipeline.compile_extra(func)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                              return self._compile_bytecode()
                                     ^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                              return self._compile_core()
                                     ^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                              raise e
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                              pm.run(self.state)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                              raise patched_exception
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                              self._runPass(idx, pass_inst, state)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                              return func(*args, **kwargs)
                                     ^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                              mutated |= check(pss.run_pass, internal_state)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                              mangled = func(compiler_state)
                                        ^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                              typemap, return_type, calltypes, errs = type_inference_stage(
                                                                      ^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                              infer.build_constraint()
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                              self.constrain_statement(inst)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                              self.typeof_assign(inst)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                              self.typeof_global(inst, inst.target, value)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                              typ = self.resolve_value_type(inst, gvar.value)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                              raise TypingError(msg, loc=inst.loc)
                          numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                          NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                 raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
               During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
               During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
               File "numba/cpython/unicode.py", line 278:
               def _empty_string(kind, length, is_ascii=0):
                   char_width = _kind_to_byte_width(kind)
                   ^
        raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086
      During: resolving callee type: Function(<function _empty_string at 0x7f60a0fd44a0>)
      During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1794)
      File "numba/cpython/unicode.py", line 1794:
                  def getitem_char(s, idx):
                      <source elided>
                          is_ascii = _codepoint_is_ascii(cp)
                          ret = _empty_string(kind, 1, is_ascii)
                          ^
  raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086

During: lowering "$12for_iter.1 = iternext(value=$phi12.0)" at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_unicode.py (305)

======================================================================
ERROR: test_unicode_literal_iter (numba.tests.test_unicode.TestUnicodeIteration.test_unicode_literal_iter)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_unicode.py", line 2563, in test_unicode_literal_iter
    self.assertPreciseEqual(pyfunc(), cfunc())
                                      ^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 468, in _compile_for_args
    error_rewrite(e, 'typing')
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 407, in error_rewrite
    raise e
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 420, in _compile_for_args
    return_val = self.compile(tuple(argtypes))
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
    cres = self._compiler.compile(args, return_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
    raise retval
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
    retval = self._compile_core(args, return_type)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
    cres = compiler.compile_extra(self.targetdescr.typing_context,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
    return pipeline.compile_extra(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
    return self._compile_bytecode()
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
    return self._compile_core()
           ^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
    raise e
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
    pm.run(self.state)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
    raise patched_exception
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
    self._runPass(idx, pass_inst, state)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
    mutated |= check(pss.run_pass, internal_state)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
    mangled = func(compiler_state)
              ^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 466, in run_pass
    lower.lower()
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 187, in lower
    self.lower_normal_function(self.fndesc)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 241, in lower_normal_function
    entry_block_tail = self.lower_function_body()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 271, in lower_function_body
    self.lower_block(block)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 285, in lower_block
    self.lower_inst(inst)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 463, in lower_inst
    val = self.lower_assign(ty, inst)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 675, in lower_assign
    return self.lower_expr(ty, value)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 1235, in lower_expr
    res = impl(self.builder, (castval,))
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/base.py", line 1187, in __call__
    res = self._imp(self._context, builder, self._sig, args, loc=loc)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/base.py", line 1217, in wrapper
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/imputils.py", line 336, in wrapper
    func(context, builder, sig, args,
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py", line 2608, in iternext_unicode
    getitem_sig = fnty.get_call_type(tyctx, (types.unicode_type, types.uintp),
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
    failures.raise_error()
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: Failed in nopython mode pipeline (step: native lowering)
No implementation of function Function(<built-in function getitem>) found for signature:
 
 >>> getitem(unicode_type, uint64)
 
There are 22 candidate implementations:
  - Of which 20 did not match due to:
  Overload of function 'getitem': File: <numerous>: Line N/A.
    With argument(s): '(unicode_type, uint64)':
   No match.
  - Of which 2 did not match due to:
  Overload in function 'unicode_getitem': File: numba/cpython/unicode.py: Line 1782.
    With argument(s): '(unicode_type, uint64)':
   Rejected as the implementation raised a specific error:
     TypingError: Failed in nopython mode pipeline (step: nopython frontend)
   No implementation of function Function(<function _empty_string at 0x7f60a0fd44a0>) found for signature:
    
    >>> _empty_string(int64, Literal[int](1), bool)
    
   There are 2 candidate implementations:
         - Of which 2 did not match due to:
         Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
           With argument(s): '(int64, int64, bool)':
          Rejected as the implementation raised a specific error:
            TypingError: Failed in nopython mode pipeline (step: nopython frontend)
          No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
           
           >>> _kind_to_byte_width(int64)
           
          There are 2 candidate implementations:
                - Of which 2 did not match due to:
                Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                  With argument(s): '(int64)':
                 Rejected as the implementation raised a specific error:
                   TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                 NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                     Traceback (most recent call last):
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                         sig = temp.apply(nolitargs, nolitkws)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                         sig = generic(args, kws)
                               ^^^^^^^^^^^^^^^^^^
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                         disp, new_args = self._get_impl(args, kws)
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                         impl, args = self._build_impl(cache_key, args, kws)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                         disp_type.get_call_type(self.context, args, kws)
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                         self.dispatcher.get_call_template(args, kws)
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                         self.compile(tuple(args))
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                         cres = self._compiler.compile(args, return_type)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                         raise retval
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                         retval = self._compile_core(args, return_type)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                         cres = compiler.compile_extra(self.targetdescr.typing_context,
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                         return pipeline.compile_extra(func)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                         return self._compile_bytecode()
                                ^^^^^^^^^^^^^^^^^^^^^^^^
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                         return self._compile_core()
                                ^^^^^^^^^^^^^^^^^^^^
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                         raise e
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                         pm.run(self.state)
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                         raise patched_exception
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                         self._runPass(idx, pass_inst, state)
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                         return func(*args, **kwargs)
                                ^^^^^^^^^^^^^^^^^^^^^
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                         mutated |= check(pss.run_pass, internal_state)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                         mangled = func(compiler_state)
                                   ^^^^^^^^^^^^^^^^^^^^
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                         typemap, return_type, calltypes, errs = type_inference_stage(
                                                                 ^^^^^^^^^^^^^^^^^^^^^
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                         infer.build_constraint()
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                         self.constrain_statement(inst)
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                         self.typeof_assign(inst)
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                         self.typeof_global(inst, inst.target, value)
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                         typ = self.resolve_value_type(inst, gvar.value)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                       File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                         raise TypingError(msg, loc=inst.loc)
                     numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                     NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
            raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
          
          During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
          During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
          
          
          File "numba/cpython/unicode.py", line 278:
          def _empty_string(kind, length, is_ascii=0):
              char_width = _kind_to_byte_width(kind)
              ^
          
              Traceback (most recent call last):
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
                  constraint(typeinfer)
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
                  self.resolve(typeinfer, typevars, fnty)
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
                  sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
                  return self.context.resolve_function_type(fnty, pos_args, kw_args)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
                  raise last_exception
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
                  res = self._resolve_user_function_type(func, args, kws)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
                  return func.get_call_type(self, args, kws)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
                  failures.raise_error()
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
                  raise errors.TypingError(self.format())
              numba.core.errors.TypingError: No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
               
               >>> _kind_to_byte_width(int64)
               
              There are 2 candidate implementations:
                    - Of which 2 did not match due to:
                    Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                      With argument(s): '(int64)':
                     Rejected as the implementation raised a specific error:
                       TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                     NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                         Traceback (most recent call last):
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                             sig = temp.apply(nolitargs, nolitkws)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                             sig = generic(args, kws)
                                   ^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                             disp, new_args = self._get_impl(args, kws)
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                             impl, args = self._build_impl(cache_key, args, kws)
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                             disp_type.get_call_type(self.context, args, kws)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                             self.dispatcher.get_call_template(args, kws)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                             self.compile(tuple(args))
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                             cres = self._compiler.compile(args, return_type)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                             raise retval
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                             retval = self._compile_core(args, return_type)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                             cres = compiler.compile_extra(self.targetdescr.typing_context,
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                             return pipeline.compile_extra(func)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                             return self._compile_bytecode()
                                    ^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                             return self._compile_core()
                                    ^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                             raise e
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                             pm.run(self.state)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                             raise patched_exception
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                             self._runPass(idx, pass_inst, state)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                             return func(*args, **kwargs)
                                    ^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                             mutated |= check(pss.run_pass, internal_state)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                             mangled = func(compiler_state)
                                       ^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                             typemap, return_type, calltypes, errs = type_inference_stage(
                                                                     ^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                             infer.build_constraint()
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                             self.constrain_statement(inst)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                             self.typeof_assign(inst)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                             self.typeof_global(inst, inst.target, value)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                             typ = self.resolve_value_type(inst, gvar.value)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                             raise TypingError(msg, loc=inst.loc)
                         numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                         NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
              During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
              During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
              The above exception was the direct cause of the following exception:
              Traceback (most recent call last):
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                  sig = temp.apply(nolitargs, nolitkws)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                  sig = generic(args, kws)
                        ^^^^^^^^^^^^^^^^^^
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                  disp, new_args = self._get_impl(args, kws)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                  impl, args = self._build_impl(cache_key, args, kws)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                  disp_type.get_call_type(self.context, args, kws)
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                  self.dispatcher.get_call_template(args, kws)
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                  self.compile(tuple(args))
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                  cres = self._compiler.compile(args, return_type)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                  raise retval
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                  retval = self._compile_core(args, return_type)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                  cres = compiler.compile_extra(self.targetdescr.typing_context,
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                  return pipeline.compile_extra(func)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                  return self._compile_bytecode()
                         ^^^^^^^^^^^^^^^^^^^^^^^^
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                  return self._compile_core()
                         ^^^^^^^^^^^^^^^^^^^^
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                  raise e
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                  pm.run(self.state)
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                  raise patched_exception
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                  self._runPass(idx, pass_inst, state)
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                  return func(*args, **kwargs)
                         ^^^^^^^^^^^^^^^^^^^^^
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                  mutated |= check(pss.run_pass, internal_state)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                  mangled = func(compiler_state)
                            ^^^^^^^^^^^^^^^^^^^^
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                  typemap, return_type, calltypes, errs = type_inference_stage(
                                                          ^^^^^^^^^^^^^^^^^^^^^
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
                  errs = infer.propagate(raise_errors=raise_errors)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
                  raise errors[0]
              numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
              No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
               
               >>> _kind_to_byte_width(int64)
               
              There are 2 candidate implementations:
                    - Of which 2 did not match due to:
                    Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                      With argument(s): '(int64)':
                     Rejected as the implementation raised a specific error:
                       TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                     NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                         Traceback (most recent call last):
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                             sig = temp.apply(nolitargs, nolitkws)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                             sig = generic(args, kws)
                                   ^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                             disp, new_args = self._get_impl(args, kws)
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                             impl, args = self._build_impl(cache_key, args, kws)
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                             disp_type.get_call_type(self.context, args, kws)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                             self.dispatcher.get_call_template(args, kws)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                             self.compile(tuple(args))
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                             cres = self._compiler.compile(args, return_type)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                             raise retval
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                             retval = self._compile_core(args, return_type)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                             cres = compiler.compile_extra(self.targetdescr.typing_context,
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                             return pipeline.compile_extra(func)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                             return self._compile_bytecode()
                                    ^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                             return self._compile_core()
                                    ^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                             raise e
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                             pm.run(self.state)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                             raise patched_exception
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                             self._runPass(idx, pass_inst, state)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                             return func(*args, **kwargs)
                                    ^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                             mutated |= check(pss.run_pass, internal_state)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                             mangled = func(compiler_state)
                                       ^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                             typemap, return_type, calltypes, errs = type_inference_stage(
                                                                     ^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                             infer.build_constraint()
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                             self.constrain_statement(inst)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                             self.typeof_assign(inst)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                             self.typeof_global(inst, inst.target, value)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                             typ = self.resolve_value_type(inst, gvar.value)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                             raise TypingError(msg, loc=inst.loc)
                         numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                         NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
              During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
              During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
              File "numba/cpython/unicode.py", line 278:
              def _empty_string(kind, length, is_ascii=0):
                  char_width = _kind_to_byte_width(kind)
                  ^
     raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086
   
   During: resolving callee type: Function(<function _empty_string at 0x7f60a0fd44a0>)
   During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1794)
   
   
   File "numba/cpython/unicode.py", line 1794:
               def getitem_char(s, idx):
                   <source elided>
                       is_ascii = _codepoint_is_ascii(cp)
                       ret = _empty_string(kind, 1, is_ascii)
                       ^
   
       Traceback (most recent call last):
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
           constraint(typeinfer)
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
           self.resolve(typeinfer, typevars, fnty)
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
           sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
           return self.context.resolve_function_type(fnty, pos_args, kw_args)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
           raise last_exception
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
           res = self._resolve_user_function_type(func, args, kws)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
           return func.get_call_type(self, args, kws)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
           failures.raise_error()
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
           raise errors.TypingError(self.format())
       numba.core.errors.TypingError: No implementation of function Function(<function _empty_string at 0x7f60a0fd44a0>) found for signature:
        
        >>> _empty_string(int64, Literal[int](1), bool)
        
       There are 2 candidate implementations:
             - Of which 2 did not match due to:
             Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
               With argument(s): '(int64, int64, bool)':
              Rejected as the implementation raised a specific error:
                TypingError: Failed in nopython mode pipeline (step: nopython frontend)
              No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
               
               >>> _kind_to_byte_width(int64)
               
              There are 2 candidate implementations:
                    - Of which 2 did not match due to:
                    Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                      With argument(s): '(int64)':
                     Rejected as the implementation raised a specific error:
                       TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                     NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                         Traceback (most recent call last):
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                             sig = temp.apply(nolitargs, nolitkws)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                             sig = generic(args, kws)
                                   ^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                             disp, new_args = self._get_impl(args, kws)
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                             impl, args = self._build_impl(cache_key, args, kws)
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                             disp_type.get_call_type(self.context, args, kws)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                             self.dispatcher.get_call_template(args, kws)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                             self.compile(tuple(args))
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                             cres = self._compiler.compile(args, return_type)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                             raise retval
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                             retval = self._compile_core(args, return_type)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                             cres = compiler.compile_extra(self.targetdescr.typing_context,
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                             return pipeline.compile_extra(func)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                             return self._compile_bytecode()
                                    ^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                             return self._compile_core()
                                    ^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                             raise e
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                             pm.run(self.state)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                             raise patched_exception
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                             self._runPass(idx, pass_inst, state)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                             return func(*args, **kwargs)
                                    ^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                             mutated |= check(pss.run_pass, internal_state)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                             mangled = func(compiler_state)
                                       ^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                             typemap, return_type, calltypes, errs = type_inference_stage(
                                                                     ^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                             infer.build_constraint()
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                             self.constrain_statement(inst)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                             self.typeof_assign(inst)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                             self.typeof_global(inst, inst.target, value)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                             typ = self.resolve_value_type(inst, gvar.value)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                             raise TypingError(msg, loc=inst.loc)
                         numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                         NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
              
              During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
              During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
              
              
              File "numba/cpython/unicode.py", line 278:
              def _empty_string(kind, length, is_ascii=0):
                  char_width = _kind_to_byte_width(kind)
                  ^
              
                  Traceback (most recent call last):
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
                      constraint(typeinfer)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
                      self.resolve(typeinfer, typevars, fnty)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
                      sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
                      return self.context.resolve_function_type(fnty, pos_args, kw_args)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
                      raise last_exception
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
                      res = self._resolve_user_function_type(func, args, kws)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
                      return func.get_call_type(self, args, kws)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
                      failures.raise_error()
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
                      raise errors.TypingError(self.format())
                  numba.core.errors.TypingError: No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
                   
                   >>> _kind_to_byte_width(int64)
                   
                  There are 2 candidate implementations:
                        - Of which 2 did not match due to:
                        Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                          With argument(s): '(int64)':
                         Rejected as the implementation raised a specific error:
                           TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                         NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                             Traceback (most recent call last):
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                                 sig = temp.apply(nolitargs, nolitkws)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                                 sig = generic(args, kws)
                                       ^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                                 disp, new_args = self._get_impl(args, kws)
                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                                 impl, args = self._build_impl(cache_key, args, kws)
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                                 disp_type.get_call_type(self.context, args, kws)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                                 self.dispatcher.get_call_template(args, kws)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                                 self.compile(tuple(args))
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                                 cres = self._compiler.compile(args, return_type)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                                 raise retval
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                                 retval = self._compile_core(args, return_type)
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                                 cres = compiler.compile_extra(self.targetdescr.typing_context,
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                                 return pipeline.compile_extra(func)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                                 return self._compile_bytecode()
                                        ^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                                 return self._compile_core()
                                        ^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                                 raise e
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                                 pm.run(self.state)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                                 raise patched_exception
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                                 self._runPass(idx, pass_inst, state)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                                 return func(*args, **kwargs)
                                        ^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                                 mutated |= check(pss.run_pass, internal_state)
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                                 mangled = func(compiler_state)
                                           ^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                                 typemap, return_type, calltypes, errs = type_inference_stage(
                                                                         ^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                                 infer.build_constraint()
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                                 self.constrain_statement(inst)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                                 self.typeof_assign(inst)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                                 self.typeof_global(inst, inst.target, value)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                                 typ = self.resolve_value_type(inst, gvar.value)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                                 raise TypingError(msg, loc=inst.loc)
                             numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                             NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                    raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
                  During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
                  During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
                  The above exception was the direct cause of the following exception:
                  Traceback (most recent call last):
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                      sig = temp.apply(nolitargs, nolitkws)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                      sig = generic(args, kws)
                            ^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                      disp, new_args = self._get_impl(args, kws)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                      impl, args = self._build_impl(cache_key, args, kws)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                      disp_type.get_call_type(self.context, args, kws)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                      self.dispatcher.get_call_template(args, kws)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                      self.compile(tuple(args))
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                      cres = self._compiler.compile(args, return_type)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                      raise retval
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                      retval = self._compile_core(args, return_type)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                      cres = compiler.compile_extra(self.targetdescr.typing_context,
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                      return pipeline.compile_extra(func)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                      return self._compile_bytecode()
                             ^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                      return self._compile_core()
                             ^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                      raise e
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                      pm.run(self.state)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                      raise patched_exception
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                      self._runPass(idx, pass_inst, state)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                      return func(*args, **kwargs)
                             ^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                      mutated |= check(pss.run_pass, internal_state)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                      mangled = func(compiler_state)
                                ^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                      typemap, return_type, calltypes, errs = type_inference_stage(
                                                              ^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
                      errs = infer.propagate(raise_errors=raise_errors)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
                      raise errors[0]
                  numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                  No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
                   
                   >>> _kind_to_byte_width(int64)
                   
                  There are 2 candidate implementations:
                        - Of which 2 did not match due to:
                        Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                          With argument(s): '(int64)':
                         Rejected as the implementation raised a specific error:
                           TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                         NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                             Traceback (most recent call last):
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                                 sig = temp.apply(nolitargs, nolitkws)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                                 sig = generic(args, kws)
                                       ^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                                 disp, new_args = self._get_impl(args, kws)
                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                                 impl, args = self._build_impl(cache_key, args, kws)
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                                 disp_type.get_call_type(self.context, args, kws)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                                 self.dispatcher.get_call_template(args, kws)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                                 self.compile(tuple(args))
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                                 cres = self._compiler.compile(args, return_type)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                                 raise retval
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                                 retval = self._compile_core(args, return_type)
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                                 cres = compiler.compile_extra(self.targetdescr.typing_context,
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                                 return pipeline.compile_extra(func)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                                 return self._compile_bytecode()
                                        ^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                                 return self._compile_core()
                                        ^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                                 raise e
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                                 pm.run(self.state)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                                 raise patched_exception
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                                 self._runPass(idx, pass_inst, state)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                                 return func(*args, **kwargs)
                                        ^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                                 mutated |= check(pss.run_pass, internal_state)
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                                 mangled = func(compiler_state)
                                           ^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                                 typemap, return_type, calltypes, errs = type_inference_stage(
                                                                         ^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                                 infer.build_constraint()
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                                 self.constrain_statement(inst)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                                 self.typeof_assign(inst)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                                 self.typeof_global(inst, inst.target, value)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                                 typ = self.resolve_value_type(inst, gvar.value)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                                 raise TypingError(msg, loc=inst.loc)
                             numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                             NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                    raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
                  During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
                  During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
                  File "numba/cpython/unicode.py", line 278:
                  def _empty_string(kind, length, is_ascii=0):
                      char_width = _kind_to_byte_width(kind)
                      ^
         raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086
       During: resolving callee type: Function(<function _empty_string at 0x7f60a0fd44a0>)
       During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1794)
       The above exception was the direct cause of the following exception:
       Traceback (most recent call last):
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
           sig = temp.apply(nolitargs, nolitkws)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
           sig = generic(args, kws)
                 ^^^^^^^^^^^^^^^^^^
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
           disp, new_args = self._get_impl(args, kws)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
           impl, args = self._build_impl(cache_key, args, kws)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
           disp_type.get_call_type(self.context, args, kws)
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
           self.dispatcher.get_call_template(args, kws)
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
           self.compile(tuple(args))
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
           cres = self._compiler.compile(args, return_type)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
           raise retval
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
           retval = self._compile_core(args, return_type)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
           cres = compiler.compile_extra(self.targetdescr.typing_context,
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
           return pipeline.compile_extra(func)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
           return self._compile_bytecode()
                  ^^^^^^^^^^^^^^^^^^^^^^^^
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
           return self._compile_core()
                  ^^^^^^^^^^^^^^^^^^^^
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
           raise e
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
           pm.run(self.state)
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
           raise patched_exception
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
           self._runPass(idx, pass_inst, state)
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
           return func(*args, **kwargs)
                  ^^^^^^^^^^^^^^^^^^^^^
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
           mutated |= check(pss.run_pass, internal_state)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
           mangled = func(compiler_state)
                     ^^^^^^^^^^^^^^^^^^^^
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
           typemap, return_type, calltypes, errs = type_inference_stage(
                                                   ^^^^^^^^^^^^^^^^^^^^^
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
           errs = infer.propagate(raise_errors=raise_errors)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
           raise errors[0]
       numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
       No implementation of function Function(<function _empty_string at 0x7f60a0fd44a0>) found for signature:
        
        >>> _empty_string(int64, Literal[int](1), bool)
        
       There are 2 candidate implementations:
             - Of which 2 did not match due to:
             Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
               With argument(s): '(int64, int64, bool)':
              Rejected as the implementation raised a specific error:
                TypingError: Failed in nopython mode pipeline (step: nopython frontend)
              No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
               
               >>> _kind_to_byte_width(int64)
               
              There are 2 candidate implementations:
                    - Of which 2 did not match due to:
                    Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                      With argument(s): '(int64)':
                     Rejected as the implementation raised a specific error:
                       TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                     NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                         Traceback (most recent call last):
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                             sig = temp.apply(nolitargs, nolitkws)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                             sig = generic(args, kws)
                                   ^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                             disp, new_args = self._get_impl(args, kws)
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                             impl, args = self._build_impl(cache_key, args, kws)
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                             disp_type.get_call_type(self.context, args, kws)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                             self.dispatcher.get_call_template(args, kws)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                             self.compile(tuple(args))
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                             cres = self._compiler.compile(args, return_type)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                             raise retval
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                             retval = self._compile_core(args, return_type)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                             cres = compiler.compile_extra(self.targetdescr.typing_context,
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                             return pipeline.compile_extra(func)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                             return self._compile_bytecode()
                                    ^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                             return self._compile_core()
                                    ^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                             raise e
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                             pm.run(self.state)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                             raise patched_exception
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                             self._runPass(idx, pass_inst, state)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                             return func(*args, **kwargs)
                                    ^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                             mutated |= check(pss.run_pass, internal_state)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                             mangled = func(compiler_state)
                                       ^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                             typemap, return_type, calltypes, errs = type_inference_stage(
                                                                     ^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                             infer.build_constraint()
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                             self.constrain_statement(inst)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                             self.typeof_assign(inst)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                             self.typeof_global(inst, inst.target, value)
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                             typ = self.resolve_value_type(inst, gvar.value)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                             raise TypingError(msg, loc=inst.loc)
                         numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                         NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
              
              During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
              During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
              
              
              File "numba/cpython/unicode.py", line 278:
              def _empty_string(kind, length, is_ascii=0):
                  char_width = _kind_to_byte_width(kind)
                  ^
              
                  Traceback (most recent call last):
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
                      constraint(typeinfer)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
                      self.resolve(typeinfer, typevars, fnty)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
                      sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
                      return self.context.resolve_function_type(fnty, pos_args, kw_args)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
                      raise last_exception
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
                      res = self._resolve_user_function_type(func, args, kws)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
                      return func.get_call_type(self, args, kws)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
                      failures.raise_error()
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
                      raise errors.TypingError(self.format())
                  numba.core.errors.TypingError: No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
                   
                   >>> _kind_to_byte_width(int64)
                   
                  There are 2 candidate implementations:
                        - Of which 2 did not match due to:
                        Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                          With argument(s): '(int64)':
                         Rejected as the implementation raised a specific error:
                           TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                         NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                             Traceback (most recent call last):
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                                 sig = temp.apply(nolitargs, nolitkws)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                                 sig = generic(args, kws)
                                       ^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                                 disp, new_args = self._get_impl(args, kws)
                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                                 impl, args = self._build_impl(cache_key, args, kws)
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                                 disp_type.get_call_type(self.context, args, kws)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                                 self.dispatcher.get_call_template(args, kws)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                                 self.compile(tuple(args))
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                                 cres = self._compiler.compile(args, return_type)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                                 raise retval
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                                 retval = self._compile_core(args, return_type)
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                                 cres = compiler.compile_extra(self.targetdescr.typing_context,
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                                 return pipeline.compile_extra(func)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                                 return self._compile_bytecode()
                                        ^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                                 return self._compile_core()
                                        ^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                                 raise e
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                                 pm.run(self.state)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                                 raise patched_exception
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                                 self._runPass(idx, pass_inst, state)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                                 return func(*args, **kwargs)
                                        ^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                                 mutated |= check(pss.run_pass, internal_state)
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                                 mangled = func(compiler_state)
                                           ^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                                 typemap, return_type, calltypes, errs = type_inference_stage(
                                                                         ^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                                 infer.build_constraint()
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                                 self.constrain_statement(inst)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                                 self.typeof_assign(inst)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                                 self.typeof_global(inst, inst.target, value)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                                 typ = self.resolve_value_type(inst, gvar.value)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                                 raise TypingError(msg, loc=inst.loc)
                             numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                             NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                    raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
                  During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
                  During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
                  The above exception was the direct cause of the following exception:
                  Traceback (most recent call last):
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                      sig = temp.apply(nolitargs, nolitkws)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                      sig = generic(args, kws)
                            ^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                      disp, new_args = self._get_impl(args, kws)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                      impl, args = self._build_impl(cache_key, args, kws)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                      disp_type.get_call_type(self.context, args, kws)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                      self.dispatcher.get_call_template(args, kws)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                      self.compile(tuple(args))
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                      cres = self._compiler.compile(args, return_type)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                      raise retval
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                      retval = self._compile_core(args, return_type)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                      cres = compiler.compile_extra(self.targetdescr.typing_context,
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                      return pipeline.compile_extra(func)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                      return self._compile_bytecode()
                             ^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                      return self._compile_core()
                             ^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                      raise e
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                      pm.run(self.state)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                      raise patched_exception
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                      self._runPass(idx, pass_inst, state)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                      return func(*args, **kwargs)
                             ^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                      mutated |= check(pss.run_pass, internal_state)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                      mangled = func(compiler_state)
                                ^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                      typemap, return_type, calltypes, errs = type_inference_stage(
                                                              ^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
                      errs = infer.propagate(raise_errors=raise_errors)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
                      raise errors[0]
                  numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                  No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
                   
                   >>> _kind_to_byte_width(int64)
                   
                  There are 2 candidate implementations:
                        - Of which 2 did not match due to:
                        Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                          With argument(s): '(int64)':
                         Rejected as the implementation raised a specific error:
                           TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                         NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                             Traceback (most recent call last):
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                                 sig = temp.apply(nolitargs, nolitkws)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                                 sig = generic(args, kws)
                                       ^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                                 disp, new_args = self._get_impl(args, kws)
                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                                 impl, args = self._build_impl(cache_key, args, kws)
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                                 disp_type.get_call_type(self.context, args, kws)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                                 self.dispatcher.get_call_template(args, kws)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                                 self.compile(tuple(args))
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                                 cres = self._compiler.compile(args, return_type)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                                 raise retval
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                                 retval = self._compile_core(args, return_type)
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                                 cres = compiler.compile_extra(self.targetdescr.typing_context,
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                                 return pipeline.compile_extra(func)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                                 return self._compile_bytecode()
                                        ^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                                 return self._compile_core()
                                        ^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                                 raise e
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                                 pm.run(self.state)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                                 raise patched_exception
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                                 self._runPass(idx, pass_inst, state)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                                 return func(*args, **kwargs)
                                        ^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                                 mutated |= check(pss.run_pass, internal_state)
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                                 mangled = func(compiler_state)
                                           ^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                                 typemap, return_type, calltypes, errs = type_inference_stage(
                                                                         ^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                                 infer.build_constraint()
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                                 self.constrain_statement(inst)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                                 self.typeof_assign(inst)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                                 self.typeof_global(inst, inst.target, value)
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                                 typ = self.resolve_value_type(inst, gvar.value)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                                 raise TypingError(msg, loc=inst.loc)
                             numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                             NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                    raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
                  During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
                  During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
                  File "numba/cpython/unicode.py", line 278:
                  def _empty_string(kind, length, is_ascii=0):
                      char_width = _kind_to_byte_width(kind)
                      ^
         raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086
       During: resolving callee type: Function(<function _empty_string at 0x7f60a0fd44a0>)
       During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1794)
       File "numba/cpython/unicode.py", line 1794:
                   def getitem_char(s, idx):
                       <source elided>
                           is_ascii = _codepoint_is_ascii(cp)
                           ret = _empty_string(kind, 1, is_ascii)
                           ^
  raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086

During: lowering "$12for_iter.1 = iternext(value=$phi12.0)" at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_unicode.py (316)

======================================================================
ERROR: test_unicode_literal_stopiteration_iter (numba.tests.test_unicode.TestUnicodeIteration.test_unicode_literal_stopiteration_iter)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_unicode.py", line 2585, in test_unicode_literal_stopiteration_iter
    f()
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 468, in _compile_for_args
    error_rewrite(e, 'typing')
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 407, in error_rewrite
    raise e
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 420, in _compile_for_args
    return_val = self.compile(tuple(argtypes))
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
    cres = self._compiler.compile(args, return_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
    raise retval
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
    retval = self._compile_core(args, return_type)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
    cres = compiler.compile_extra(self.targetdescr.typing_context,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
    return pipeline.compile_extra(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
    return self._compile_bytecode()
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
    return self._compile_core()
           ^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
    raise e
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
    pm.run(self.state)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
    raise patched_exception
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
    self._runPass(idx, pass_inst, state)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
    mutated |= check(pss.run_pass, internal_state)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
    mangled = func(compiler_state)
              ^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 466, in run_pass
    lower.lower()
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 187, in lower
    self.lower_normal_function(self.fndesc)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 241, in lower_normal_function
    entry_block_tail = self.lower_function_body()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 271, in lower_function_body
    self.lower_block(block)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 285, in lower_block
    self.lower_inst(inst)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 463, in lower_inst
    val = self.lower_assign(ty, inst)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 675, in lower_assign
    return self.lower_expr(ty, value)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 1211, in lower_expr
    res = self.lower_call(resty, expr)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 940, in lower_call
    res = self._lower_call_normal(fnty, expr, signature)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 1182, in _lower_call_normal
    res = impl(self.builder, argvals, self.loc)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/base.py", line 1187, in __call__
    res = self._imp(self._context, builder, self._sig, args, loc=loc)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/base.py", line 1217, in wrapper
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/builtins.py", line 395, in next_impl
    res = call_iternext(context, builder, iterty, iterval)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/imputils.py", line 372, in call_iternext
    val = iternext_impl(builder, (val,))
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/base.py", line 1187, in __call__
    res = self._imp(self._context, builder, self._sig, args, loc=loc)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/base.py", line 1217, in wrapper
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/imputils.py", line 336, in wrapper
    func(context, builder, sig, args,
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py", line 2608, in iternext_unicode
    getitem_sig = fnty.get_call_type(tyctx, (types.unicode_type, types.uintp),
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
    failures.raise_error()
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: Failed in nopython mode pipeline (step: native lowering)
No implementation of function Function(<built-in function getitem>) found for signature:
 
 >>> getitem(unicode_type, uint64)
 
There are 22 candidate implementations:
   - Of which 20 did not match due to:
   Overload of function 'getitem': File: <numerous>: Line N/A.
     With argument(s): '(unicode_type, uint64)':
    No match.
   - Of which 2 did not match due to:
   Overload in function 'unicode_getitem': File: numba/cpython/unicode.py: Line 1782.
     With argument(s): '(unicode_type, uint64)':
    Rejected as the implementation raised a specific error:
      TypingError: Failed in nopython mode pipeline (step: nopython frontend)
    No implementation of function Function(<function _empty_string at 0x7f60a0fd44a0>) found for signature:
     
     >>> _empty_string(int64, Literal[int](1), bool)
     
    There are 2 candidate implementations:
          - Of which 2 did not match due to:
          Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
            With argument(s): '(int64, int64, bool)':
           Rejected as the implementation raised a specific error:
             TypingError: Failed in nopython mode pipeline (step: nopython frontend)
           No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
            
            >>> _kind_to_byte_width(int64)
            
           There are 2 candidate implementations:
                 - Of which 2 did not match due to:
                 Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                   With argument(s): '(int64)':
                  Rejected as the implementation raised a specific error:
                    TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                  NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                      Traceback (most recent call last):
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                          sig = temp.apply(nolitargs, nolitkws)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                          sig = generic(args, kws)
                                ^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                          disp, new_args = self._get_impl(args, kws)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                          impl, args = self._build_impl(cache_key, args, kws)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                          disp_type.get_call_type(self.context, args, kws)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                          self.dispatcher.get_call_template(args, kws)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                          self.compile(tuple(args))
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                          cres = self._compiler.compile(args, return_type)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                          raise retval
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                          retval = self._compile_core(args, return_type)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                          cres = compiler.compile_extra(self.targetdescr.typing_context,
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                          return pipeline.compile_extra(func)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                          return self._compile_bytecode()
                                 ^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                          return self._compile_core()
                                 ^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                          raise e
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                          pm.run(self.state)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                          raise patched_exception
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                          self._runPass(idx, pass_inst, state)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                          return func(*args, **kwargs)
                                 ^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                          mutated |= check(pss.run_pass, internal_state)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                          mangled = func(compiler_state)
                                    ^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                          typemap, return_type, calltypes, errs = type_inference_stage(
                                                                  ^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                          infer.build_constraint()
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                          self.constrain_statement(inst)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                          self.typeof_assign(inst)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                          self.typeof_global(inst, inst.target, value)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                          typ = self.resolve_value_type(inst, gvar.value)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                          raise TypingError(msg, loc=inst.loc)
                      numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                      NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
             raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
           
           During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
           During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
           
           
           File "numba/cpython/unicode.py", line 278:
           def _empty_string(kind, length, is_ascii=0):
               char_width = _kind_to_byte_width(kind)
               ^
           
               Traceback (most recent call last):
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
                   constraint(typeinfer)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
                   self.resolve(typeinfer, typevars, fnty)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
                   sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
                   return self.context.resolve_function_type(fnty, pos_args, kw_args)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
                   raise last_exception
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
                   res = self._resolve_user_function_type(func, args, kws)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
                   return func.get_call_type(self, args, kws)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
                   failures.raise_error()
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
                   raise errors.TypingError(self.format())
               numba.core.errors.TypingError: No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
                
                >>> _kind_to_byte_width(int64)
                
               There are 2 candidate implementations:
                     - Of which 2 did not match due to:
                     Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                       With argument(s): '(int64)':
                      Rejected as the implementation raised a specific error:
                        TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                      NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                          Traceback (most recent call last):
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                              sig = temp.apply(nolitargs, nolitkws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                              sig = generic(args, kws)
                                    ^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                              disp, new_args = self._get_impl(args, kws)
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                              impl, args = self._build_impl(cache_key, args, kws)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                              disp_type.get_call_type(self.context, args, kws)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                              self.dispatcher.get_call_template(args, kws)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                              self.compile(tuple(args))
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                              cres = self._compiler.compile(args, return_type)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                              raise retval
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                              retval = self._compile_core(args, return_type)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                              cres = compiler.compile_extra(self.targetdescr.typing_context,
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                              return pipeline.compile_extra(func)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                              return self._compile_bytecode()
                                     ^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                              return self._compile_core()
                                     ^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                              raise e
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                              pm.run(self.state)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                              raise patched_exception
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                              self._runPass(idx, pass_inst, state)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                              return func(*args, **kwargs)
                                     ^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                              mutated |= check(pss.run_pass, internal_state)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                              mangled = func(compiler_state)
                                        ^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                              typemap, return_type, calltypes, errs = type_inference_stage(
                                                                      ^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                              infer.build_constraint()
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                              self.constrain_statement(inst)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                              self.typeof_assign(inst)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                              self.typeof_global(inst, inst.target, value)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                              typ = self.resolve_value_type(inst, gvar.value)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                              raise TypingError(msg, loc=inst.loc)
                          numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                          NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                 raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
               During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
               During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
               The above exception was the direct cause of the following exception:
               Traceback (most recent call last):
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                   sig = temp.apply(nolitargs, nolitkws)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                   sig = generic(args, kws)
                         ^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                   disp, new_args = self._get_impl(args, kws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                   impl, args = self._build_impl(cache_key, args, kws)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                   disp_type.get_call_type(self.context, args, kws)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                   self.dispatcher.get_call_template(args, kws)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                   self.compile(tuple(args))
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                   cres = self._compiler.compile(args, return_type)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                   raise retval
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                   retval = self._compile_core(args, return_type)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                   cres = compiler.compile_extra(self.targetdescr.typing_context,
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                   return pipeline.compile_extra(func)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                   return self._compile_bytecode()
                          ^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                   return self._compile_core()
                          ^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                   raise e
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                   pm.run(self.state)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                   raise patched_exception
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                   self._runPass(idx, pass_inst, state)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                   return func(*args, **kwargs)
                          ^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                   mutated |= check(pss.run_pass, internal_state)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                   mangled = func(compiler_state)
                             ^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                   typemap, return_type, calltypes, errs = type_inference_stage(
                                                           ^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
                   errs = infer.propagate(raise_errors=raise_errors)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
                   raise errors[0]
               numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
               No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
                
                >>> _kind_to_byte_width(int64)
                
               There are 2 candidate implementations:
                     - Of which 2 did not match due to:
                     Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                       With argument(s): '(int64)':
                      Rejected as the implementation raised a specific error:
                        TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                      NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                          Traceback (most recent call last):
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                              sig = temp.apply(nolitargs, nolitkws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                              sig = generic(args, kws)
                                    ^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                              disp, new_args = self._get_impl(args, kws)
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                              impl, args = self._build_impl(cache_key, args, kws)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                              disp_type.get_call_type(self.context, args, kws)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                              self.dispatcher.get_call_template(args, kws)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                              self.compile(tuple(args))
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                              cres = self._compiler.compile(args, return_type)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                              raise retval
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                              retval = self._compile_core(args, return_type)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                              cres = compiler.compile_extra(self.targetdescr.typing_context,
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                              return pipeline.compile_extra(func)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                              return self._compile_bytecode()
                                     ^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                              return self._compile_core()
                                     ^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                              raise e
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                              pm.run(self.state)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                              raise patched_exception
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                              self._runPass(idx, pass_inst, state)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                              return func(*args, **kwargs)
                                     ^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                              mutated |= check(pss.run_pass, internal_state)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                              mangled = func(compiler_state)
                                        ^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                              typemap, return_type, calltypes, errs = type_inference_stage(
                                                                      ^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                              infer.build_constraint()
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                              self.constrain_statement(inst)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                              self.typeof_assign(inst)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                              self.typeof_global(inst, inst.target, value)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                              typ = self.resolve_value_type(inst, gvar.value)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                              raise TypingError(msg, loc=inst.loc)
                          numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                          NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                 raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
               During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
               During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
               File "numba/cpython/unicode.py", line 278:
               def _empty_string(kind, length, is_ascii=0):
                   char_width = _kind_to_byte_width(kind)
                   ^
      raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086
    
    During: resolving callee type: Function(<function _empty_string at 0x7f60a0fd44a0>)
    During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1794)
    
    
    File "numba/cpython/unicode.py", line 1794:
                def getitem_char(s, idx):
                    <source elided>
                        is_ascii = _codepoint_is_ascii(cp)
                        ret = _empty_string(kind, 1, is_ascii)
                        ^
    
        Traceback (most recent call last):
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
            constraint(typeinfer)
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
            self.resolve(typeinfer, typevars, fnty)
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
            sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
            return self.context.resolve_function_type(fnty, pos_args, kw_args)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
            raise last_exception
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
            res = self._resolve_user_function_type(func, args, kws)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
            return func.get_call_type(self, args, kws)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
            failures.raise_error()
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
            raise errors.TypingError(self.format())
        numba.core.errors.TypingError: No implementation of function Function(<function _empty_string at 0x7f60a0fd44a0>) found for signature:
         
         >>> _empty_string(int64, Literal[int](1), bool)
         
        There are 2 candidate implementations:
              - Of which 2 did not match due to:
              Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                With argument(s): '(int64, int64, bool)':
               Rejected as the implementation raised a specific error:
                 TypingError: Failed in nopython mode pipeline (step: nopython frontend)
               No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
                
                >>> _kind_to_byte_width(int64)
                
               There are 2 candidate implementations:
                     - Of which 2 did not match due to:
                     Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                       With argument(s): '(int64)':
                      Rejected as the implementation raised a specific error:
                        TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                      NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                          Traceback (most recent call last):
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                              sig = temp.apply(nolitargs, nolitkws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                              sig = generic(args, kws)
                                    ^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                              disp, new_args = self._get_impl(args, kws)
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                              impl, args = self._build_impl(cache_key, args, kws)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                              disp_type.get_call_type(self.context, args, kws)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                              self.dispatcher.get_call_template(args, kws)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                              self.compile(tuple(args))
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                              cres = self._compiler.compile(args, return_type)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                              raise retval
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                              retval = self._compile_core(args, return_type)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                              cres = compiler.compile_extra(self.targetdescr.typing_context,
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                              return pipeline.compile_extra(func)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                              return self._compile_bytecode()
                                     ^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                              return self._compile_core()
                                     ^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                              raise e
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                              pm.run(self.state)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                              raise patched_exception
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                              self._runPass(idx, pass_inst, state)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                              return func(*args, **kwargs)
                                     ^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                              mutated |= check(pss.run_pass, internal_state)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                              mangled = func(compiler_state)
                                        ^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                              typemap, return_type, calltypes, errs = type_inference_stage(
                                                                      ^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                              infer.build_constraint()
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                              self.constrain_statement(inst)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                              self.typeof_assign(inst)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                              self.typeof_global(inst, inst.target, value)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                              typ = self.resolve_value_type(inst, gvar.value)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                              raise TypingError(msg, loc=inst.loc)
                          numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                          NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                 raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
               
               During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
               During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
               
               
               File "numba/cpython/unicode.py", line 278:
               def _empty_string(kind, length, is_ascii=0):
                   char_width = _kind_to_byte_width(kind)
                   ^
               
                   Traceback (most recent call last):
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
                       constraint(typeinfer)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
                       self.resolve(typeinfer, typevars, fnty)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
                       sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
                       return self.context.resolve_function_type(fnty, pos_args, kw_args)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
                       raise last_exception
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
                       res = self._resolve_user_function_type(func, args, kws)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
                       return func.get_call_type(self, args, kws)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
                       failures.raise_error()
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
                       raise errors.TypingError(self.format())
                   numba.core.errors.TypingError: No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
                    
                    >>> _kind_to_byte_width(int64)
                    
                   There are 2 candidate implementations:
                         - Of which 2 did not match due to:
                         Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                           With argument(s): '(int64)':
                          Rejected as the implementation raised a specific error:
                            TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                          NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                              Traceback (most recent call last):
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                                  sig = temp.apply(nolitargs, nolitkws)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                                  sig = generic(args, kws)
                                        ^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                                  disp, new_args = self._get_impl(args, kws)
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                                  impl, args = self._build_impl(cache_key, args, kws)
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                                  disp_type.get_call_type(self.context, args, kws)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                                  self.dispatcher.get_call_template(args, kws)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                                  self.compile(tuple(args))
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                                  cres = self._compiler.compile(args, return_type)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                                  raise retval
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                                  retval = self._compile_core(args, return_type)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                                  cres = compiler.compile_extra(self.targetdescr.typing_context,
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                                  return pipeline.compile_extra(func)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                                  return self._compile_bytecode()
                                         ^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                                  return self._compile_core()
                                         ^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                                  raise e
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                                  pm.run(self.state)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                                  raise patched_exception
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                                  self._runPass(idx, pass_inst, state)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                                  return func(*args, **kwargs)
                                         ^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                                  mutated |= check(pss.run_pass, internal_state)
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                                  mangled = func(compiler_state)
                                            ^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                                  typemap, return_type, calltypes, errs = type_inference_stage(
                                                                          ^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                                  infer.build_constraint()
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                                  self.constrain_statement(inst)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                                  self.typeof_assign(inst)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                                  self.typeof_global(inst, inst.target, value)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                                  typ = self.resolve_value_type(inst, gvar.value)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                                  raise TypingError(msg, loc=inst.loc)
                              numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                              NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                     raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
                   During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
                   During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
                   The above exception was the direct cause of the following exception:
                   Traceback (most recent call last):
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                       sig = temp.apply(nolitargs, nolitkws)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                       sig = generic(args, kws)
                             ^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                       disp, new_args = self._get_impl(args, kws)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                       impl, args = self._build_impl(cache_key, args, kws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                       disp_type.get_call_type(self.context, args, kws)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                       self.dispatcher.get_call_template(args, kws)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                       self.compile(tuple(args))
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                       cres = self._compiler.compile(args, return_type)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                       raise retval
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                       retval = self._compile_core(args, return_type)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                       cres = compiler.compile_extra(self.targetdescr.typing_context,
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                       return pipeline.compile_extra(func)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                       return self._compile_bytecode()
                              ^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                       return self._compile_core()
                              ^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                       raise e
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                       pm.run(self.state)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                       raise patched_exception
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                       self._runPass(idx, pass_inst, state)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                       return func(*args, **kwargs)
                              ^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                       mutated |= check(pss.run_pass, internal_state)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                       mangled = func(compiler_state)
                                 ^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                       typemap, return_type, calltypes, errs = type_inference_stage(
                                                               ^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
                       errs = infer.propagate(raise_errors=raise_errors)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
                       raise errors[0]
                   numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                   No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
                    
                    >>> _kind_to_byte_width(int64)
                    
                   There are 2 candidate implementations:
                         - Of which 2 did not match due to:
                         Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                           With argument(s): '(int64)':
                          Rejected as the implementation raised a specific error:
                            TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                          NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                              Traceback (most recent call last):
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                                  sig = temp.apply(nolitargs, nolitkws)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                                  sig = generic(args, kws)
                                        ^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                                  disp, new_args = self._get_impl(args, kws)
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                                  impl, args = self._build_impl(cache_key, args, kws)
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                                  disp_type.get_call_type(self.context, args, kws)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                                  self.dispatcher.get_call_template(args, kws)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                                  self.compile(tuple(args))
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                                  cres = self._compiler.compile(args, return_type)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                                  raise retval
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                                  retval = self._compile_core(args, return_type)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                                  cres = compiler.compile_extra(self.targetdescr.typing_context,
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                                  return pipeline.compile_extra(func)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                                  return self._compile_bytecode()
                                         ^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                                  return self._compile_core()
                                         ^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                                  raise e
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                                  pm.run(self.state)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                                  raise patched_exception
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                                  self._runPass(idx, pass_inst, state)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                                  return func(*args, **kwargs)
                                         ^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                                  mutated |= check(pss.run_pass, internal_state)
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                                  mangled = func(compiler_state)
                                            ^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                                  typemap, return_type, calltypes, errs = type_inference_stage(
                                                                          ^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                                  infer.build_constraint()
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                                  self.constrain_statement(inst)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                                  self.typeof_assign(inst)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                                  self.typeof_global(inst, inst.target, value)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                                  typ = self.resolve_value_type(inst, gvar.value)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                                  raise TypingError(msg, loc=inst.loc)
                              numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                              NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                     raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
                   During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
                   During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
                   File "numba/cpython/unicode.py", line 278:
                   def _empty_string(kind, length, is_ascii=0):
                       char_width = _kind_to_byte_width(kind)
                       ^
          raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086
        During: resolving callee type: Function(<function _empty_string at 0x7f60a0fd44a0>)
        During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1794)
        The above exception was the direct cause of the following exception:
        Traceback (most recent call last):
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
            sig = temp.apply(nolitargs, nolitkws)
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
            sig = generic(args, kws)
                  ^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
            disp, new_args = self._get_impl(args, kws)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
            impl, args = self._build_impl(cache_key, args, kws)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
            disp_type.get_call_type(self.context, args, kws)
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
            self.dispatcher.get_call_template(args, kws)
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
            self.compile(tuple(args))
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
            cres = self._compiler.compile(args, return_type)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
            raise retval
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
            retval = self._compile_core(args, return_type)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
            cres = compiler.compile_extra(self.targetdescr.typing_context,
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
            return pipeline.compile_extra(func)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
            return self._compile_bytecode()
                   ^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
            return self._compile_core()
                   ^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
            raise e
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
            pm.run(self.state)
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
            raise patched_exception
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
            self._runPass(idx, pass_inst, state)
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
            return func(*args, **kwargs)
                   ^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
            mutated |= check(pss.run_pass, internal_state)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
            mangled = func(compiler_state)
                      ^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
            typemap, return_type, calltypes, errs = type_inference_stage(
                                                    ^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
            errs = infer.propagate(raise_errors=raise_errors)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
            raise errors[0]
        numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
        No implementation of function Function(<function _empty_string at 0x7f60a0fd44a0>) found for signature:
         
         >>> _empty_string(int64, Literal[int](1), bool)
         
        There are 2 candidate implementations:
              - Of which 2 did not match due to:
              Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                With argument(s): '(int64, int64, bool)':
               Rejected as the implementation raised a specific error:
                 TypingError: Failed in nopython mode pipeline (step: nopython frontend)
               No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
                
                >>> _kind_to_byte_width(int64)
                
               There are 2 candidate implementations:
                     - Of which 2 did not match due to:
                     Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                       With argument(s): '(int64)':
                      Rejected as the implementation raised a specific error:
                        TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                      NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                          Traceback (most recent call last):
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                              sig = temp.apply(nolitargs, nolitkws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                              sig = generic(args, kws)
                                    ^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                              disp, new_args = self._get_impl(args, kws)
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                              impl, args = self._build_impl(cache_key, args, kws)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                              disp_type.get_call_type(self.context, args, kws)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                              self.dispatcher.get_call_template(args, kws)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                              self.compile(tuple(args))
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                              cres = self._compiler.compile(args, return_type)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                              raise retval
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                              retval = self._compile_core(args, return_type)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                              cres = compiler.compile_extra(self.targetdescr.typing_context,
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                              return pipeline.compile_extra(func)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                              return self._compile_bytecode()
                                     ^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                              return self._compile_core()
                                     ^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                              raise e
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                              pm.run(self.state)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                              raise patched_exception
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                              self._runPass(idx, pass_inst, state)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                              return func(*args, **kwargs)
                                     ^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                              mutated |= check(pss.run_pass, internal_state)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                              mangled = func(compiler_state)
                                        ^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                              typemap, return_type, calltypes, errs = type_inference_stage(
                                                                      ^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                              infer.build_constraint()
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                              self.constrain_statement(inst)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                              self.typeof_assign(inst)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                              self.typeof_global(inst, inst.target, value)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                              typ = self.resolve_value_type(inst, gvar.value)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                              raise TypingError(msg, loc=inst.loc)
                          numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                          NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                 raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
               
               During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
               During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
               
               
               File "numba/cpython/unicode.py", line 278:
               def _empty_string(kind, length, is_ascii=0):
                   char_width = _kind_to_byte_width(kind)
                   ^
               
                   Traceback (most recent call last):
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
                       constraint(typeinfer)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
                       self.resolve(typeinfer, typevars, fnty)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
                       sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
                       return self.context.resolve_function_type(fnty, pos_args, kw_args)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
                       raise last_exception
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
                       res = self._resolve_user_function_type(func, args, kws)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
                       return func.get_call_type(self, args, kws)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
                       failures.raise_error()
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
                       raise errors.TypingError(self.format())
                   numba.core.errors.TypingError: No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
                    
                    >>> _kind_to_byte_width(int64)
                    
                   There are 2 candidate implementations:
                         - Of which 2 did not match due to:
                         Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                           With argument(s): '(int64)':
                          Rejected as the implementation raised a specific error:
                            TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                          NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                              Traceback (most recent call last):
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                                  sig = temp.apply(nolitargs, nolitkws)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                                  sig = generic(args, kws)
                                        ^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                                  disp, new_args = self._get_impl(args, kws)
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                                  impl, args = self._build_impl(cache_key, args, kws)
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                                  disp_type.get_call_type(self.context, args, kws)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                                  self.dispatcher.get_call_template(args, kws)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                                  self.compile(tuple(args))
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                                  cres = self._compiler.compile(args, return_type)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                                  raise retval
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                                  retval = self._compile_core(args, return_type)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                                  cres = compiler.compile_extra(self.targetdescr.typing_context,
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                                  return pipeline.compile_extra(func)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                                  return self._compile_bytecode()
                                         ^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                                  return self._compile_core()
                                         ^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                                  raise e
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                                  pm.run(self.state)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                                  raise patched_exception
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                                  self._runPass(idx, pass_inst, state)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                                  return func(*args, **kwargs)
                                         ^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                                  mutated |= check(pss.run_pass, internal_state)
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                                  mangled = func(compiler_state)
                                            ^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                                  typemap, return_type, calltypes, errs = type_inference_stage(
                                                                          ^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                                  infer.build_constraint()
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                                  self.constrain_statement(inst)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                                  self.typeof_assign(inst)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                                  self.typeof_global(inst, inst.target, value)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                                  typ = self.resolve_value_type(inst, gvar.value)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                                  raise TypingError(msg, loc=inst.loc)
                              numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                              NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                     raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
                   During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
                   During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
                   The above exception was the direct cause of the following exception:
                   Traceback (most recent call last):
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                       sig = temp.apply(nolitargs, nolitkws)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                       sig = generic(args, kws)
                             ^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                       disp, new_args = self._get_impl(args, kws)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                       impl, args = self._build_impl(cache_key, args, kws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                       disp_type.get_call_type(self.context, args, kws)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                       self.dispatcher.get_call_template(args, kws)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                       self.compile(tuple(args))
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                       cres = self._compiler.compile(args, return_type)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                       raise retval
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                       retval = self._compile_core(args, return_type)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                       cres = compiler.compile_extra(self.targetdescr.typing_context,
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                       return pipeline.compile_extra(func)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                       return self._compile_bytecode()
                              ^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                       return self._compile_core()
                              ^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                       raise e
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                       pm.run(self.state)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                       raise patched_exception
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                       self._runPass(idx, pass_inst, state)
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                       return func(*args, **kwargs)
                              ^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                       mutated |= check(pss.run_pass, internal_state)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                       mangled = func(compiler_state)
                                 ^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                       typemap, return_type, calltypes, errs = type_inference_stage(
                                                               ^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
                       errs = infer.propagate(raise_errors=raise_errors)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                     File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
                       raise errors[0]
                   numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                   No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
                    
                    >>> _kind_to_byte_width(int64)
                    
                   There are 2 candidate implementations:
                         - Of which 2 did not match due to:
                         Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                           With argument(s): '(int64)':
                          Rejected as the implementation raised a specific error:
                            TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                          NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                              Traceback (most recent call last):
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                                  sig = temp.apply(nolitargs, nolitkws)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                                  sig = generic(args, kws)
                                        ^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                                  disp, new_args = self._get_impl(args, kws)
                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                                  impl, args = self._build_impl(cache_key, args, kws)
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                                  disp_type.get_call_type(self.context, args, kws)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                                  self.dispatcher.get_call_template(args, kws)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                                  self.compile(tuple(args))
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                                  cres = self._compiler.compile(args, return_type)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                                  raise retval
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                                  retval = self._compile_core(args, return_type)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                                  cres = compiler.compile_extra(self.targetdescr.typing_context,
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                                  return pipeline.compile_extra(func)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                                  return self._compile_bytecode()
                                         ^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                                  return self._compile_core()
                                         ^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                                  raise e
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                                  pm.run(self.state)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                                  raise patched_exception
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                                  self._runPass(idx, pass_inst, state)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                                  return func(*args, **kwargs)
                                         ^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                                  mutated |= check(pss.run_pass, internal_state)
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                                  mangled = func(compiler_state)
                                            ^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                                  typemap, return_type, calltypes, errs = type_inference_stage(
                                                                          ^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                                  infer.build_constraint()
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                                  self.constrain_statement(inst)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                                  self.typeof_assign(inst)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                                  self.typeof_global(inst, inst.target, value)
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                                  typ = self.resolve_value_type(inst, gvar.value)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                                  raise TypingError(msg, loc=inst.loc)
                              numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                              NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                     raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
                   During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
                   During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
                   File "numba/cpython/unicode.py", line 278:
                   def _empty_string(kind, length, is_ascii=0):
                       char_width = _kind_to_byte_width(kind)
                       ^
          raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086
        During: resolving callee type: Function(<function _empty_string at 0x7f60a0fd44a0>)
        During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1794)
        File "numba/cpython/unicode.py", line 1794:
                    def getitem_char(s, idx):
                        <source elided>
                            is_ascii = _codepoint_is_ascii(cp)
                            ret = _empty_string(kind, 1, is_ascii)
                            ^
  raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086

During: lowering "$98call.5 = call $86load_global.2(i, func=$86load_global.2, args=[Var(i, test_unicode.py:339)], kws=(), vararg=None, varkwarg=None, target=None)" at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_unicode.py (342)

======================================================================
ERROR: test_unicode_stopiteration_iter (numba.tests.test_unicode.TestUnicodeIteration.test_unicode_stopiteration_iter)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_unicode.py", line 2578, in test_unicode_stopiteration_iter
    f(a)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 468, in _compile_for_args
    error_rewrite(e, 'typing')
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 407, in error_rewrite
    raise e
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 420, in _compile_for_args
    return_val = self.compile(tuple(argtypes))
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
    cres = self._compiler.compile(args, return_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
    raise retval
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
    retval = self._compile_core(args, return_type)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
    cres = compiler.compile_extra(self.targetdescr.typing_context,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
    return pipeline.compile_extra(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
    return self._compile_bytecode()
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
    return self._compile_core()
           ^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
    raise e
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
    pm.run(self.state)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
    raise patched_exception
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
    self._runPass(idx, pass_inst, state)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
    mutated |= check(pss.run_pass, internal_state)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
    mangled = func(compiler_state)
              ^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 466, in run_pass
    lower.lower()
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 187, in lower
    self.lower_normal_function(self.fndesc)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 241, in lower_normal_function
    entry_block_tail = self.lower_function_body()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 271, in lower_function_body
    self.lower_block(block)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 285, in lower_block
    self.lower_inst(inst)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 463, in lower_inst
    val = self.lower_assign(ty, inst)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 675, in lower_assign
    return self.lower_expr(ty, value)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 1211, in lower_expr
    res = self.lower_call(resty, expr)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 940, in lower_call
    res = self._lower_call_normal(fnty, expr, signature)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 1182, in _lower_call_normal
    res = impl(self.builder, argvals, self.loc)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/base.py", line 1187, in __call__
    res = self._imp(self._context, builder, self._sig, args, loc=loc)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/base.py", line 1217, in wrapper
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/builtins.py", line 395, in next_impl
    res = call_iternext(context, builder, iterty, iterval)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/imputils.py", line 372, in call_iternext
    val = iternext_impl(builder, (val,))
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/base.py", line 1187, in __call__
    res = self._imp(self._context, builder, self._sig, args, loc=loc)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/base.py", line 1217, in wrapper
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/imputils.py", line 336, in wrapper
    func(context, builder, sig, args,
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py", line 2608, in iternext_unicode
    getitem_sig = fnty.get_call_type(tyctx, (types.unicode_type, types.uintp),
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
    failures.raise_error()
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: Failed in nopython mode pipeline (step: native lowering)
No implementation of function Function(<built-in function getitem>) found for signature:
 
 >>> getitem(unicode_type, uint64)
 
There are 22 candidate implementations:
    - Of which 20 did not match due to:
    Overload of function 'getitem': File: <numerous>: Line N/A.
      With argument(s): '(unicode_type, uint64)':
     No match.
    - Of which 2 did not match due to:
    Overload in function 'unicode_getitem': File: numba/cpython/unicode.py: Line 1782.
      With argument(s): '(unicode_type, uint64)':
     Rejected as the implementation raised a specific error:
       TypingError: Failed in nopython mode pipeline (step: nopython frontend)
     No implementation of function Function(<function _empty_string at 0x7f60a0fd44a0>) found for signature:
      
      >>> _empty_string(int64, Literal[int](1), bool)
      
     There are 2 candidate implementations:
           - Of which 2 did not match due to:
           Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
             With argument(s): '(int64, int64, bool)':
            Rejected as the implementation raised a specific error:
              TypingError: Failed in nopython mode pipeline (step: nopython frontend)
            No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
             
             >>> _kind_to_byte_width(int64)
             
            There are 2 candidate implementations:
                  - Of which 2 did not match due to:
                  Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                    With argument(s): '(int64)':
                   Rejected as the implementation raised a specific error:
                     TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                   NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                       Traceback (most recent call last):
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                           sig = temp.apply(nolitargs, nolitkws)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                           sig = generic(args, kws)
                                 ^^^^^^^^^^^^^^^^^^
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                           disp, new_args = self._get_impl(args, kws)
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                           impl, args = self._build_impl(cache_key, args, kws)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                           disp_type.get_call_type(self.context, args, kws)
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                           self.dispatcher.get_call_template(args, kws)
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                           self.compile(tuple(args))
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                           cres = self._compiler.compile(args, return_type)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                           raise retval
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                           retval = self._compile_core(args, return_type)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                           cres = compiler.compile_extra(self.targetdescr.typing_context,
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                           return pipeline.compile_extra(func)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                           return self._compile_bytecode()
                                  ^^^^^^^^^^^^^^^^^^^^^^^^
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                           return self._compile_core()
                                  ^^^^^^^^^^^^^^^^^^^^
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                           raise e
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                           pm.run(self.state)
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                           raise patched_exception
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                           self._runPass(idx, pass_inst, state)
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                           return func(*args, **kwargs)
                                  ^^^^^^^^^^^^^^^^^^^^^
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                           mutated |= check(pss.run_pass, internal_state)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                           mangled = func(compiler_state)
                                     ^^^^^^^^^^^^^^^^^^^^
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                           typemap, return_type, calltypes, errs = type_inference_stage(
                                                                   ^^^^^^^^^^^^^^^^^^^^^
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                           infer.build_constraint()
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                           self.constrain_statement(inst)
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                           self.typeof_assign(inst)
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                           self.typeof_global(inst, inst.target, value)
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                           typ = self.resolve_value_type(inst, gvar.value)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                         File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                           raise TypingError(msg, loc=inst.loc)
                       numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                       NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
              raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
            
            During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
            During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
            
            
            File "numba/cpython/unicode.py", line 278:
            def _empty_string(kind, length, is_ascii=0):
                char_width = _kind_to_byte_width(kind)
                ^
            
                Traceback (most recent call last):
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
                    constraint(typeinfer)
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
                    self.resolve(typeinfer, typevars, fnty)
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
                    sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
                    return self.context.resolve_function_type(fnty, pos_args, kw_args)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
                    raise last_exception
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
                    res = self._resolve_user_function_type(func, args, kws)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
                    return func.get_call_type(self, args, kws)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
                    failures.raise_error()
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
                    raise errors.TypingError(self.format())
                numba.core.errors.TypingError: No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
                 
                 >>> _kind_to_byte_width(int64)
                 
                There are 2 candidate implementations:
                      - Of which 2 did not match due to:
                      Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                        With argument(s): '(int64)':
                       Rejected as the implementation raised a specific error:
                         TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                       NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                           Traceback (most recent call last):
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                               sig = temp.apply(nolitargs, nolitkws)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                               sig = generic(args, kws)
                                     ^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                               disp, new_args = self._get_impl(args, kws)
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                               impl, args = self._build_impl(cache_key, args, kws)
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                               disp_type.get_call_type(self.context, args, kws)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                               self.dispatcher.get_call_template(args, kws)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                               self.compile(tuple(args))
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                               cres = self._compiler.compile(args, return_type)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                               raise retval
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                               retval = self._compile_core(args, return_type)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                               cres = compiler.compile_extra(self.targetdescr.typing_context,
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                               return pipeline.compile_extra(func)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                               return self._compile_bytecode()
                                      ^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                               return self._compile_core()
                                      ^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                               raise e
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                               pm.run(self.state)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                               raise patched_exception
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                               self._runPass(idx, pass_inst, state)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                               return func(*args, **kwargs)
                                      ^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                               mutated |= check(pss.run_pass, internal_state)
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                               mangled = func(compiler_state)
                                         ^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                               typemap, return_type, calltypes, errs = type_inference_stage(
                                                                       ^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                               infer.build_constraint()
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                               self.constrain_statement(inst)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                               self.typeof_assign(inst)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                               self.typeof_global(inst, inst.target, value)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                               typ = self.resolve_value_type(inst, gvar.value)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                               raise TypingError(msg, loc=inst.loc)
                           numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                           NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                  raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
                During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
                During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
                The above exception was the direct cause of the following exception:
                Traceback (most recent call last):
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                    sig = temp.apply(nolitargs, nolitkws)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                    sig = generic(args, kws)
                          ^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                    disp, new_args = self._get_impl(args, kws)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                    impl, args = self._build_impl(cache_key, args, kws)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                    disp_type.get_call_type(self.context, args, kws)
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                    self.dispatcher.get_call_template(args, kws)
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                    self.compile(tuple(args))
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                    cres = self._compiler.compile(args, return_type)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                    raise retval
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                    retval = self._compile_core(args, return_type)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                    cres = compiler.compile_extra(self.targetdescr.typing_context,
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                    return pipeline.compile_extra(func)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                    return self._compile_bytecode()
                           ^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                    return self._compile_core()
                           ^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                    raise e
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                    pm.run(self.state)
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                    raise patched_exception
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                    self._runPass(idx, pass_inst, state)
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                    return func(*args, **kwargs)
                           ^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                    mutated |= check(pss.run_pass, internal_state)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                    mangled = func(compiler_state)
                              ^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                    typemap, return_type, calltypes, errs = type_inference_stage(
                                                            ^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
                    errs = infer.propagate(raise_errors=raise_errors)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
                    raise errors[0]
                numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
                 
                 >>> _kind_to_byte_width(int64)
                 
                There are 2 candidate implementations:
                      - Of which 2 did not match due to:
                      Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                        With argument(s): '(int64)':
                       Rejected as the implementation raised a specific error:
                         TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                       NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                           Traceback (most recent call last):
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                               sig = temp.apply(nolitargs, nolitkws)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                               sig = generic(args, kws)
                                     ^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                               disp, new_args = self._get_impl(args, kws)
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                               impl, args = self._build_impl(cache_key, args, kws)
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                               disp_type.get_call_type(self.context, args, kws)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                               self.dispatcher.get_call_template(args, kws)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                               self.compile(tuple(args))
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                               cres = self._compiler.compile(args, return_type)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                               raise retval
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                               retval = self._compile_core(args, return_type)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                               cres = compiler.compile_extra(self.targetdescr.typing_context,
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                               return pipeline.compile_extra(func)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                               return self._compile_bytecode()
                                      ^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                               return self._compile_core()
                                      ^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                               raise e
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                               pm.run(self.state)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                               raise patched_exception
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                               self._runPass(idx, pass_inst, state)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                               return func(*args, **kwargs)
                                      ^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                               mutated |= check(pss.run_pass, internal_state)
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                               mangled = func(compiler_state)
                                         ^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                               typemap, return_type, calltypes, errs = type_inference_stage(
                                                                       ^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                               infer.build_constraint()
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                               self.constrain_statement(inst)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                               self.typeof_assign(inst)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                               self.typeof_global(inst, inst.target, value)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                               typ = self.resolve_value_type(inst, gvar.value)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                               raise TypingError(msg, loc=inst.loc)
                           numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                           NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                  raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
                During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
                During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
                File "numba/cpython/unicode.py", line 278:
                def _empty_string(kind, length, is_ascii=0):
                    char_width = _kind_to_byte_width(kind)
                    ^
       raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086
     
     During: resolving callee type: Function(<function _empty_string at 0x7f60a0fd44a0>)
     During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1794)
     
     
     File "numba/cpython/unicode.py", line 1794:
                 def getitem_char(s, idx):
                     <source elided>
                         is_ascii = _codepoint_is_ascii(cp)
                         ret = _empty_string(kind, 1, is_ascii)
                         ^
     
         Traceback (most recent call last):
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
             constraint(typeinfer)
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
             self.resolve(typeinfer, typevars, fnty)
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
             sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
             return self.context.resolve_function_type(fnty, pos_args, kw_args)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
             raise last_exception
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
             res = self._resolve_user_function_type(func, args, kws)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
             return func.get_call_type(self, args, kws)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
             failures.raise_error()
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
             raise errors.TypingError(self.format())
         numba.core.errors.TypingError: No implementation of function Function(<function _empty_string at 0x7f60a0fd44a0>) found for signature:
          
          >>> _empty_string(int64, Literal[int](1), bool)
          
         There are 2 candidate implementations:
               - Of which 2 did not match due to:
               Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                 With argument(s): '(int64, int64, bool)':
                Rejected as the implementation raised a specific error:
                  TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
                 
                 >>> _kind_to_byte_width(int64)
                 
                There are 2 candidate implementations:
                      - Of which 2 did not match due to:
                      Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                        With argument(s): '(int64)':
                       Rejected as the implementation raised a specific error:
                         TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                       NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                           Traceback (most recent call last):
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                               sig = temp.apply(nolitargs, nolitkws)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                               sig = generic(args, kws)
                                     ^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                               disp, new_args = self._get_impl(args, kws)
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                               impl, args = self._build_impl(cache_key, args, kws)
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                               disp_type.get_call_type(self.context, args, kws)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                               self.dispatcher.get_call_template(args, kws)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                               self.compile(tuple(args))
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                               cres = self._compiler.compile(args, return_type)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                               raise retval
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                               retval = self._compile_core(args, return_type)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                               cres = compiler.compile_extra(self.targetdescr.typing_context,
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                               return pipeline.compile_extra(func)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                               return self._compile_bytecode()
                                      ^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                               return self._compile_core()
                                      ^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                               raise e
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                               pm.run(self.state)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                               raise patched_exception
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                               self._runPass(idx, pass_inst, state)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                               return func(*args, **kwargs)
                                      ^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                               mutated |= check(pss.run_pass, internal_state)
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                               mangled = func(compiler_state)
                                         ^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                               typemap, return_type, calltypes, errs = type_inference_stage(
                                                                       ^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                               infer.build_constraint()
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                               self.constrain_statement(inst)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                               self.typeof_assign(inst)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                               self.typeof_global(inst, inst.target, value)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                               typ = self.resolve_value_type(inst, gvar.value)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                               raise TypingError(msg, loc=inst.loc)
                           numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                           NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                  raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
                
                During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
                During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
                
                
                File "numba/cpython/unicode.py", line 278:
                def _empty_string(kind, length, is_ascii=0):
                    char_width = _kind_to_byte_width(kind)
                    ^
                
                    Traceback (most recent call last):
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
                        constraint(typeinfer)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
                        self.resolve(typeinfer, typevars, fnty)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
                        sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
                        return self.context.resolve_function_type(fnty, pos_args, kw_args)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
                        raise last_exception
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
                        res = self._resolve_user_function_type(func, args, kws)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
                        return func.get_call_type(self, args, kws)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
                        failures.raise_error()
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
                        raise errors.TypingError(self.format())
                    numba.core.errors.TypingError: No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
                     
                     >>> _kind_to_byte_width(int64)
                     
                    There are 2 candidate implementations:
                          - Of which 2 did not match due to:
                          Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                            With argument(s): '(int64)':
                           Rejected as the implementation raised a specific error:
                             TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                           NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                               Traceback (most recent call last):
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                                   sig = temp.apply(nolitargs, nolitkws)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                                   sig = generic(args, kws)
                                         ^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                                   disp, new_args = self._get_impl(args, kws)
                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                                   impl, args = self._build_impl(cache_key, args, kws)
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                                   disp_type.get_call_type(self.context, args, kws)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                                   self.dispatcher.get_call_template(args, kws)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                                   self.compile(tuple(args))
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                                   cres = self._compiler.compile(args, return_type)
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                                   raise retval
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                                   retval = self._compile_core(args, return_type)
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                                   cres = compiler.compile_extra(self.targetdescr.typing_context,
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                                   return pipeline.compile_extra(func)
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                                   return self._compile_bytecode()
                                          ^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                                   return self._compile_core()
                                          ^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                                   raise e
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                                   pm.run(self.state)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                                   raise patched_exception
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                                   self._runPass(idx, pass_inst, state)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                                   return func(*args, **kwargs)
                                          ^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                                   mutated |= check(pss.run_pass, internal_state)
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                                   mangled = func(compiler_state)
                                             ^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                                   typemap, return_type, calltypes, errs = type_inference_stage(
                                                                           ^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                                   infer.build_constraint()
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                                   self.constrain_statement(inst)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                                   self.typeof_assign(inst)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                                   self.typeof_global(inst, inst.target, value)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                                   typ = self.resolve_value_type(inst, gvar.value)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                                   raise TypingError(msg, loc=inst.loc)
                               numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                               NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                      raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
                    During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
                    During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
                    The above exception was the direct cause of the following exception:
                    Traceback (most recent call last):
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                        sig = temp.apply(nolitargs, nolitkws)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                        sig = generic(args, kws)
                              ^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                        disp, new_args = self._get_impl(args, kws)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                        impl, args = self._build_impl(cache_key, args, kws)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                        disp_type.get_call_type(self.context, args, kws)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                        self.dispatcher.get_call_template(args, kws)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                        self.compile(tuple(args))
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                        cres = self._compiler.compile(args, return_type)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                        raise retval
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                        retval = self._compile_core(args, return_type)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                        cres = compiler.compile_extra(self.targetdescr.typing_context,
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                        return pipeline.compile_extra(func)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                        return self._compile_bytecode()
                               ^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                        return self._compile_core()
                               ^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                        raise e
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                        pm.run(self.state)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                        raise patched_exception
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                        self._runPass(idx, pass_inst, state)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                        return func(*args, **kwargs)
                               ^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                        mutated |= check(pss.run_pass, internal_state)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                        mangled = func(compiler_state)
                                  ^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                        typemap, return_type, calltypes, errs = type_inference_stage(
                                                                ^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
                        errs = infer.propagate(raise_errors=raise_errors)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
                        raise errors[0]
                    numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                    No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
                     
                     >>> _kind_to_byte_width(int64)
                     
                    There are 2 candidate implementations:
                          - Of which 2 did not match due to:
                          Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                            With argument(s): '(int64)':
                           Rejected as the implementation raised a specific error:
                             TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                           NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                               Traceback (most recent call last):
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                                   sig = temp.apply(nolitargs, nolitkws)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                                   sig = generic(args, kws)
                                         ^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                                   disp, new_args = self._get_impl(args, kws)
                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                                   impl, args = self._build_impl(cache_key, args, kws)
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                                   disp_type.get_call_type(self.context, args, kws)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                                   self.dispatcher.get_call_template(args, kws)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                                   self.compile(tuple(args))
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                                   cres = self._compiler.compile(args, return_type)
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                                   raise retval
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                                   retval = self._compile_core(args, return_type)
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                                   cres = compiler.compile_extra(self.targetdescr.typing_context,
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                                   return pipeline.compile_extra(func)
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                                   return self._compile_bytecode()
                                          ^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                                   return self._compile_core()
                                          ^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                                   raise e
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                                   pm.run(self.state)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                                   raise patched_exception
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                                   self._runPass(idx, pass_inst, state)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                                   return func(*args, **kwargs)
                                          ^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                                   mutated |= check(pss.run_pass, internal_state)
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                                   mangled = func(compiler_state)
                                             ^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                                   typemap, return_type, calltypes, errs = type_inference_stage(
                                                                           ^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                                   infer.build_constraint()
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                                   self.constrain_statement(inst)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                                   self.typeof_assign(inst)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                                   self.typeof_global(inst, inst.target, value)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                                   typ = self.resolve_value_type(inst, gvar.value)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                                   raise TypingError(msg, loc=inst.loc)
                               numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                               NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                      raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
                    During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
                    During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
                    File "numba/cpython/unicode.py", line 278:
                    def _empty_string(kind, length, is_ascii=0):
                        char_width = _kind_to_byte_width(kind)
                        ^
           raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086
         During: resolving callee type: Function(<function _empty_string at 0x7f60a0fd44a0>)
         During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1794)
         The above exception was the direct cause of the following exception:
         Traceback (most recent call last):
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
             sig = temp.apply(nolitargs, nolitkws)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
             sig = generic(args, kws)
                   ^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
             disp, new_args = self._get_impl(args, kws)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
             impl, args = self._build_impl(cache_key, args, kws)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
             disp_type.get_call_type(self.context, args, kws)
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
             self.dispatcher.get_call_template(args, kws)
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
             self.compile(tuple(args))
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
             cres = self._compiler.compile(args, return_type)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
             raise retval
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
             retval = self._compile_core(args, return_type)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
             cres = compiler.compile_extra(self.targetdescr.typing_context,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
             return pipeline.compile_extra(func)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
             return self._compile_bytecode()
                    ^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
             return self._compile_core()
                    ^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
             raise e
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
             pm.run(self.state)
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
             raise patched_exception
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
             self._runPass(idx, pass_inst, state)
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
             return func(*args, **kwargs)
                    ^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
             mutated |= check(pss.run_pass, internal_state)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
             mangled = func(compiler_state)
                       ^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
             typemap, return_type, calltypes, errs = type_inference_stage(
                                                     ^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
             errs = infer.propagate(raise_errors=raise_errors)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
             raise errors[0]
         numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
         No implementation of function Function(<function _empty_string at 0x7f60a0fd44a0>) found for signature:
          
          >>> _empty_string(int64, Literal[int](1), bool)
          
         There are 2 candidate implementations:
               - Of which 2 did not match due to:
               Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                 With argument(s): '(int64, int64, bool)':
                Rejected as the implementation raised a specific error:
                  TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
                 
                 >>> _kind_to_byte_width(int64)
                 
                There are 2 candidate implementations:
                      - Of which 2 did not match due to:
                      Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                        With argument(s): '(int64)':
                       Rejected as the implementation raised a specific error:
                         TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                       NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                           Traceback (most recent call last):
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                               sig = temp.apply(nolitargs, nolitkws)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                               sig = generic(args, kws)
                                     ^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                               disp, new_args = self._get_impl(args, kws)
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                               impl, args = self._build_impl(cache_key, args, kws)
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                               disp_type.get_call_type(self.context, args, kws)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                               self.dispatcher.get_call_template(args, kws)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                               self.compile(tuple(args))
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                               cres = self._compiler.compile(args, return_type)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                               raise retval
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                               retval = self._compile_core(args, return_type)
                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                               cres = compiler.compile_extra(self.targetdescr.typing_context,
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                               return pipeline.compile_extra(func)
                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                               return self._compile_bytecode()
                                      ^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                               return self._compile_core()
                                      ^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                               raise e
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                               pm.run(self.state)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                               raise patched_exception
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                               self._runPass(idx, pass_inst, state)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                               return func(*args, **kwargs)
                                      ^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                               mutated |= check(pss.run_pass, internal_state)
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                               mangled = func(compiler_state)
                                         ^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                               typemap, return_type, calltypes, errs = type_inference_stage(
                                                                       ^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                               infer.build_constraint()
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                               self.constrain_statement(inst)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                               self.typeof_assign(inst)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                               self.typeof_global(inst, inst.target, value)
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                               typ = self.resolve_value_type(inst, gvar.value)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                               raise TypingError(msg, loc=inst.loc)
                           numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                           NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                  raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
                
                During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
                During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
                
                
                File "numba/cpython/unicode.py", line 278:
                def _empty_string(kind, length, is_ascii=0):
                    char_width = _kind_to_byte_width(kind)
                    ^
                
                    Traceback (most recent call last):
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
                        constraint(typeinfer)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
                        self.resolve(typeinfer, typevars, fnty)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
                        sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
                        return self.context.resolve_function_type(fnty, pos_args, kw_args)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
                        raise last_exception
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
                        res = self._resolve_user_function_type(func, args, kws)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
                        return func.get_call_type(self, args, kws)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
                        failures.raise_error()
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
                        raise errors.TypingError(self.format())
                    numba.core.errors.TypingError: No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
                     
                     >>> _kind_to_byte_width(int64)
                     
                    There are 2 candidate implementations:
                          - Of which 2 did not match due to:
                          Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                            With argument(s): '(int64)':
                           Rejected as the implementation raised a specific error:
                             TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                           NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                               Traceback (most recent call last):
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                                   sig = temp.apply(nolitargs, nolitkws)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                                   sig = generic(args, kws)
                                         ^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                                   disp, new_args = self._get_impl(args, kws)
                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                                   impl, args = self._build_impl(cache_key, args, kws)
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                                   disp_type.get_call_type(self.context, args, kws)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                                   self.dispatcher.get_call_template(args, kws)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                                   self.compile(tuple(args))
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                                   cres = self._compiler.compile(args, return_type)
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                                   raise retval
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                                   retval = self._compile_core(args, return_type)
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                                   cres = compiler.compile_extra(self.targetdescr.typing_context,
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                                   return pipeline.compile_extra(func)
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                                   return self._compile_bytecode()
                                          ^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                                   return self._compile_core()
                                          ^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                                   raise e
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                                   pm.run(self.state)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                                   raise patched_exception
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                                   self._runPass(idx, pass_inst, state)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                                   return func(*args, **kwargs)
                                          ^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                                   mutated |= check(pss.run_pass, internal_state)
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                                   mangled = func(compiler_state)
                                             ^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                                   typemap, return_type, calltypes, errs = type_inference_stage(
                                                                           ^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                                   infer.build_constraint()
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                                   self.constrain_statement(inst)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                                   self.typeof_assign(inst)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                                   self.typeof_global(inst, inst.target, value)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                                   typ = self.resolve_value_type(inst, gvar.value)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                                   raise TypingError(msg, loc=inst.loc)
                               numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                               NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                      raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
                    During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
                    During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
                    The above exception was the direct cause of the following exception:
                    Traceback (most recent call last):
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                        sig = temp.apply(nolitargs, nolitkws)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                        sig = generic(args, kws)
                              ^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                        disp, new_args = self._get_impl(args, kws)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                        impl, args = self._build_impl(cache_key, args, kws)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                        disp_type.get_call_type(self.context, args, kws)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                        self.dispatcher.get_call_template(args, kws)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                        self.compile(tuple(args))
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                        cres = self._compiler.compile(args, return_type)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                        raise retval
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                        retval = self._compile_core(args, return_type)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                        cres = compiler.compile_extra(self.targetdescr.typing_context,
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                        return pipeline.compile_extra(func)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                        return self._compile_bytecode()
                               ^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                        return self._compile_core()
                               ^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                        raise e
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                        pm.run(self.state)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                        raise patched_exception
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                        self._runPass(idx, pass_inst, state)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                        return func(*args, **kwargs)
                               ^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                        mutated |= check(pss.run_pass, internal_state)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                        mangled = func(compiler_state)
                                  ^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                        typemap, return_type, calltypes, errs = type_inference_stage(
                                                                ^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
                        errs = infer.propagate(raise_errors=raise_errors)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
                        raise errors[0]
                    numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                    No implementation of function Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>) found for signature:
                     
                     >>> _kind_to_byte_width(int64)
                     
                    There are 2 candidate implementations:
                          - Of which 2 did not match due to:
                          Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                            With argument(s): '(int64)':
                           Rejected as the implementation raised a specific error:
                             TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                           NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                               Traceback (most recent call last):
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                                   sig = temp.apply(nolitargs, nolitkws)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                                   sig = generic(args, kws)
                                         ^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                                   disp, new_args = self._get_impl(args, kws)
                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                                   impl, args = self._build_impl(cache_key, args, kws)
                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                                   disp_type.get_call_type(self.context, args, kws)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                                   self.dispatcher.get_call_template(args, kws)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                                   self.compile(tuple(args))
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                                   cres = self._compiler.compile(args, return_type)
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                                   raise retval
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                                   retval = self._compile_core(args, return_type)
                                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                                   cres = compiler.compile_extra(self.targetdescr.typing_context,
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                                   return pipeline.compile_extra(func)
                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                                   return self._compile_bytecode()
                                          ^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                                   return self._compile_core()
                                          ^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                                   raise e
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                                   pm.run(self.state)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                                   raise patched_exception
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                                   self._runPass(idx, pass_inst, state)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                                   return func(*args, **kwargs)
                                          ^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                                   mutated |= check(pss.run_pass, internal_state)
                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                                   mangled = func(compiler_state)
                                             ^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                                   typemap, return_type, calltypes, errs = type_inference_stage(
                                                                           ^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                                   infer.build_constraint()
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                                   self.constrain_statement(inst)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                                   self.typeof_assign(inst)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                                   self.typeof_global(inst, inst.target, value)
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                                   typ = self.resolve_value_type(inst, gvar.value)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                                   raise TypingError(msg, loc=inst.loc)
                               numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                               NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                      raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
                    During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f60a0fd4c20>)
                    During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
                    File "numba/cpython/unicode.py", line 278:
                    def _empty_string(kind, length, is_ascii=0):
                        char_width = _kind_to_byte_width(kind)
                        ^
           raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086
         During: resolving callee type: Function(<function _empty_string at 0x7f60a0fd44a0>)
         During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1794)
         File "numba/cpython/unicode.py", line 1794:
                     def getitem_char(s, idx):
                         <source elided>
                             is_ascii = _codepoint_is_ascii(cp)
                             ret = _empty_string(kind, 1, is_ascii)
                             ^
  raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086

During: lowering "$94call.5 = call $82load_global.2(i, func=$82load_global.2, args=[Var(i, test_unicode.py:332)], kws=(), vararg=None, varkwarg=None, target=None)" at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_unicode.py (334)

----------------------------------------------------------------------
Ran 5 tests in 5.567s

FAILED (errors=5)
