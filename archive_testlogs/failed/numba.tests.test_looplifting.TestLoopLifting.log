Parallel: 11. Serial: 0
test_lift1 (numba.tests.test_looplifting.TestLoopLifting.test_lift1) ... ok
test_lift2 (numba.tests.test_looplifting.TestLoopLifting.test_lift2) ... ok
test_lift3 (numba.tests.test_looplifting.TestLoopLifting.test_lift3) ... ok
test_lift4 (numba.tests.test_looplifting.TestLoopLifting.test_lift4) ... ok
test_lift5 (numba.tests.test_looplifting.TestLoopLifting.test_lift5) ... ok

Stderr:
/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_looplifting.py:80: NumbaWarning: 
Compilation is falling back to object mode WITH looplifting enabled because Function "lift_gen1" failed type inference due to: No implementation of function Function(<built-in function empty>) found for signature:
 
 >>> empty(Literal[int](3))
 
There are 2 candidate implementations:
      - Of which 2 did not match due to:
      Overload in function 'ol_np_empty': File: numba/np/arrayobj.py: Line 4355.
        With argument(s): '(int64)':
       Rejected as the implementation raised a specific error:
         NumbaTypeError: Failed in nopython mode pipeline (step: nopython frontend)
       Only accept returning of array passed into the function as argument
           Traceback (most recent call last):
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
               sig = temp.apply(nolitargs, nolitkws)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
               sig = generic(args, kws)
                     ^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
               disp, new_args = self._get_impl(args, kws)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
               impl, args = self._build_impl(cache_key, args, kws)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
               disp_type.get_call_type(self.context, args, kws)
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
               self.dispatcher.get_call_template(args, kws)
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
               self.compile(tuple(args))
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
               cres = self._compiler.compile(args, return_type)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
               raise retval
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
               retval = self._compile_core(args, return_type)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
               cres = compiler.compile_extra(self.targetdescr.typing_context,
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
               return pipeline.compile_extra(func)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
               return self._compile_bytecode()
                      ^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
               return self._compile_core()
                      ^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
               raise e
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
               pm.run(self.state)
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
               raise patched_exception
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
               self._runPass(idx, pass_inst, state)
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
               return func(*args, **kwargs)
                      ^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
               mutated |= check(pss.run_pass, internal_state)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
               mangled = func(compiler_state)
                         ^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 165, in run_pass
               legalize_return_type(state.return_type, state.func_ir,
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 155, in legalize_return_type
               raise errors.NumbaTypeError(msg)
           numba.core.errors.NumbaTypeError: Failed in nopython mode pipeline (step: nopython frontend)
           Only accept returning of array passed into the function as argument
  raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py:155

During: resolving callee type: Function(<built-in function empty>)
During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_looplifting.py (82)


File "numba/tests/test_looplifting.py", line 82:
def lift_gen1(x):
    <source elided>
    # Outer needs object mode because of np.empty()
    a = np.empty(3)
    ^

  def lift_gen1(x):
/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/utils.py:213: NumbaPendingDeprecationWarning: Code using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors
Exception origin:
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/transforms.py", line 902, in _fix_multi_exit_blocks
    [jump_target] = remain[-1].get_targets()
    ^^^^^^^^^^^^^

  warnings.warn(msg,
test_lift_gen1 (numba.tests.test_looplifting.TestLoopLifting.test_lift_gen1) ... ERROR
test_lift_issue2561 (numba.tests.test_looplifting.TestLoopLifting.test_lift_issue2561) ... ok
test_reject1 (numba.tests.test_looplifting.TestLoopLifting.test_reject1) ... ok

Stderr:
/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_looplifting.py:104: NumbaWarning: 
Compilation is falling back to object mode WITH looplifting enabled because Function "reject_gen1" failed type inference due to: Untyped global name 'object': Cannot determine Numba type of <class 'type'>

File "numba/tests/test_looplifting.py", line 105:
def reject_gen1(x):
    _ = object()
    ^

  def reject_gen1(x):
/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/utils.py:213: NumbaPendingDeprecationWarning: Code using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors
Exception origin:
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/transforms.py", line 902, in _fix_multi_exit_blocks
    [jump_target] = remain[-1].get_targets()
    ^^^^^^^^^^^^^

  warnings.warn(msg,
test_reject_gen1 (numba.tests.test_looplifting.TestLoopLifting.test_reject_gen1) ... ERROR

Stderr:
/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_looplifting.py:111: NumbaWarning: 
Compilation is falling back to object mode WITH looplifting enabled because Function "reject_gen2" failed type inference due to: Untyped global name 'object': Cannot determine Numba type of <class 'type'>

File "numba/tests/test_looplifting.py", line 112:
def reject_gen2(x):
    _ = object()
    ^

  def reject_gen2(x):
test_reject_gen2 (numba.tests.test_looplifting.TestLoopLifting.test_reject_gen2) ... ERROR
test_reject_npm1 (numba.tests.test_looplifting.TestLoopLifting.test_reject_npm1) ... ok

======================================================================
ERROR: test_lift_gen1 (numba.tests.test_looplifting.TestLoopLifting.test_lift_gen1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_looplifting.py", line 236, in test_lift_gen1
    self.check_lift_generator_ok(lift_gen1, (types.intp,), (123,))
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_looplifting.py", line 170, in check_lift_generator_ok
    cres = self.try_lift(pyfunc, argtypes)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_looplifting.py", line 138, in try_lift
    cres = compile_extra(
           ^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
    return pipeline.compile_extra(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
    return self._compile_bytecode()
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
    return self._compile_core()
           ^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
    raise e
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
    pm.run(self.state)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
    raise patched_exception
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
    self._runPass(idx, pass_inst, state)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
    mutated |= check(pss.run_pass, internal_state)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
    mangled = func(compiler_state)
              ^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/object_mode_passes.py", line 53, in run_pass
    cres = self._frontend_looplift(state)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/object_mode_passes.py", line 29, in _frontend_looplift
    main, loops = transforms.loop_lifting(state.func_ir,
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/transforms.py", line 263, in loop_lifting
    func_ir = _pre_looplift_transform(func_ir)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/transforms.py", line 247, in _pre_looplift_transform
    func_ir, _common_key = _fix_multi_exit_blocks(
                           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/transforms.py", line 902, in _fix_multi_exit_blocks
    [jump_target] = remain[-1].get_targets()
    ^^^^^^^^^^^^^
ValueError: Failed in object mode pipeline (step: object mode frontend)
too many values to unpack (expected 1)

Stderr:
/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_looplifting.py:80: NumbaWarning: 
Compilation is falling back to object mode WITH looplifting enabled because Function "lift_gen1" failed type inference due to: No implementation of function Function(<built-in function empty>) found for signature:
 
 >>> empty(Literal[int](3))
 
There are 2 candidate implementations:
      - Of which 2 did not match due to:
      Overload in function 'ol_np_empty': File: numba/np/arrayobj.py: Line 4355.
        With argument(s): '(int64)':
       Rejected as the implementation raised a specific error:
         NumbaTypeError: Failed in nopython mode pipeline (step: nopython frontend)
       Only accept returning of array passed into the function as argument
           Traceback (most recent call last):
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
               sig = temp.apply(nolitargs, nolitkws)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
               sig = generic(args, kws)
                     ^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
               disp, new_args = self._get_impl(args, kws)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
               impl, args = self._build_impl(cache_key, args, kws)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
               disp_type.get_call_type(self.context, args, kws)
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
               self.dispatcher.get_call_template(args, kws)
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
               self.compile(tuple(args))
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
               cres = self._compiler.compile(args, return_type)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
               raise retval
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
               retval = self._compile_core(args, return_type)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
               cres = compiler.compile_extra(self.targetdescr.typing_context,
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
               return pipeline.compile_extra(func)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
               return self._compile_bytecode()
                      ^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
               return self._compile_core()
                      ^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
               raise e
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
               pm.run(self.state)
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
               raise patched_exception
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
               self._runPass(idx, pass_inst, state)
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
               return func(*args, **kwargs)
                      ^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
               mutated |= check(pss.run_pass, internal_state)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
               mangled = func(compiler_state)
                         ^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 165, in run_pass
               legalize_return_type(state.return_type, state.func_ir,
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 155, in legalize_return_type
               raise errors.NumbaTypeError(msg)
           numba.core.errors.NumbaTypeError: Failed in nopython mode pipeline (step: nopython frontend)
           Only accept returning of array passed into the function as argument
  raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py:155

During: resolving callee type: Function(<built-in function empty>)
During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_looplifting.py (82)


File "numba/tests/test_looplifting.py", line 82:
def lift_gen1(x):
    <source elided>
    # Outer needs object mode because of np.empty()
    a = np.empty(3)
    ^

  def lift_gen1(x):
/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/utils.py:213: NumbaPendingDeprecationWarning: Code using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors
Exception origin:
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/transforms.py", line 902, in _fix_multi_exit_blocks
    [jump_target] = remain[-1].get_targets()
    ^^^^^^^^^^^^^

  warnings.warn(msg,

======================================================================
ERROR: test_reject_gen1 (numba.tests.test_looplifting.TestLoopLifting.test_reject_gen1)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_looplifting.py", line 242, in test_reject_gen1
    self.check_no_lift_generator(reject_gen1, (types.intp,), (123,))
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_looplifting.py", line 193, in check_no_lift_generator
    cres = compile_isolated(pyfunc, argtypes,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_looplifting.py", line 23, in compile_isolated
    return compile_extra(
           ^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
    return pipeline.compile_extra(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
    return self._compile_bytecode()
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
    return self._compile_core()
           ^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
    raise e
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
    pm.run(self.state)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
    raise patched_exception
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
    self._runPass(idx, pass_inst, state)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
    mutated |= check(pss.run_pass, internal_state)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
    mangled = func(compiler_state)
              ^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/object_mode_passes.py", line 53, in run_pass
    cres = self._frontend_looplift(state)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/object_mode_passes.py", line 29, in _frontend_looplift
    main, loops = transforms.loop_lifting(state.func_ir,
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/transforms.py", line 263, in loop_lifting
    func_ir = _pre_looplift_transform(func_ir)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/transforms.py", line 247, in _pre_looplift_transform
    func_ir, _common_key = _fix_multi_exit_blocks(
                           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/transforms.py", line 902, in _fix_multi_exit_blocks
    [jump_target] = remain[-1].get_targets()
    ^^^^^^^^^^^^^
ValueError: Failed in object mode pipeline (step: object mode frontend)
too many values to unpack (expected 1)

Stderr:
/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_looplifting.py:104: NumbaWarning: 
Compilation is falling back to object mode WITH looplifting enabled because Function "reject_gen1" failed type inference due to: Untyped global name 'object': Cannot determine Numba type of <class 'type'>

File "numba/tests/test_looplifting.py", line 105:
def reject_gen1(x):
    _ = object()
    ^

  def reject_gen1(x):
/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/utils.py:213: NumbaPendingDeprecationWarning: Code using Numba extension API maybe depending on 'old_style' error-capturing, which is deprecated and will be replaced by 'new_style' in a future release. See details at https://numba.readthedocs.io/en/latest/reference/deprecation.html#deprecation-of-old-style-numba-captured-errors
Exception origin:
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/transforms.py", line 902, in _fix_multi_exit_blocks
    [jump_target] = remain[-1].get_targets()
    ^^^^^^^^^^^^^

  warnings.warn(msg,

======================================================================
ERROR: test_reject_gen2 (numba.tests.test_looplifting.TestLoopLifting.test_reject_gen2)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_looplifting.py", line 245, in test_reject_gen2
    self.check_no_lift_generator(reject_gen2, (types.intp,), (123,))
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_looplifting.py", line 193, in check_no_lift_generator
    cres = compile_isolated(pyfunc, argtypes,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_looplifting.py", line 23, in compile_isolated
    return compile_extra(
           ^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
    return pipeline.compile_extra(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
    return self._compile_bytecode()
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
    return self._compile_core()
           ^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
    raise e
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
    pm.run(self.state)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
    raise patched_exception
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
    self._runPass(idx, pass_inst, state)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
    mutated |= check(pss.run_pass, internal_state)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
    mangled = func(compiler_state)
              ^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/object_mode_passes.py", line 53, in run_pass
    cres = self._frontend_looplift(state)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/object_mode_passes.py", line 29, in _frontend_looplift
    main, loops = transforms.loop_lifting(state.func_ir,
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/transforms.py", line 263, in loop_lifting
    func_ir = _pre_looplift_transform(func_ir)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/transforms.py", line 247, in _pre_looplift_transform
    func_ir, _common_key = _fix_multi_exit_blocks(
                           ^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/transforms.py", line 902, in _fix_multi_exit_blocks
    [jump_target] = remain[-1].get_targets()
    ^^^^^^^^^^^^^
ValueError: Failed in object mode pipeline (step: object mode frontend)
too many values to unpack (expected 1)

Stderr:
/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_looplifting.py:111: NumbaWarning: 
Compilation is falling back to object mode WITH looplifting enabled because Function "reject_gen2" failed type inference due to: Untyped global name 'object': Cannot determine Numba type of <class 'type'>

File "numba/tests/test_looplifting.py", line 112:
def reject_gen2(x):
    _ = object()
    ^

  def reject_gen2(x):

----------------------------------------------------------------------
Ran 11 tests in 6.328s

FAILED (errors=3)
