Parallel: 14. Serial: 0
test_ctor_iterable_tuple (numba.tests.test_dicts.TestCompiledDict.test_ctor_iterable_tuple) ... ERROR
test_curlybraces_init_with_coercion (numba.tests.test_dicts.TestCompiledDict.test_curlybraces_init_with_coercion) ... ok
test_dict_use_with_none_key (numba.tests.test_dicts.TestCompiledDict.test_dict_use_with_none_key) ... ok
test_dict_use_with_none_value (numba.tests.test_dicts.TestCompiledDict.test_dict_use_with_none_value) ... ok
test_dict_use_with_optional_key (numba.tests.test_dicts.TestCompiledDict.test_dict_use_with_optional_key) ... ok
test_dict_use_with_optional_value (numba.tests.test_dicts.TestCompiledDict.test_dict_use_with_optional_value) ... ok
test_mixed_curlybraces_and_dict (numba.tests.test_dicts.TestCompiledDict.test_mixed_curlybraces_and_dict) ... ok
test_unsupported_dict_usage (numba.tests.test_dicts.TestCompiledDict.test_unsupported_dict_usage) ... ok
test_use_curlybraces (numba.tests.test_dicts.TestCompiledDict.test_use_curlybraces) ... ok
test_use_curlybraces_with_init1 (numba.tests.test_dicts.TestCompiledDict.test_use_curlybraces_with_init1) ... ok
test_use_curlybraces_with_initmany (numba.tests.test_dicts.TestCompiledDict.test_use_curlybraces_with_initmany) ... ok
test_use_curlybraces_with_manyvar (numba.tests.test_dicts.TestCompiledDict.test_use_curlybraces_with_manyvar) ... ok
test_use_dict (numba.tests.test_dicts.TestCompiledDict.test_use_dict) ... ok

Stderr:
/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/ir_utils.py:2174: NumbaPendingDeprecationWarning: 
Encountered the use of a type that is scheduled for deprecation: type 'reflected list' found for argument 'a' of function 'TestCompiledDict.test_use_dict_iterable_args.<locals>.dict_iterable_1'.

For more information visit https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-reflection-for-list-and-set-types

File "numba/tests/test_dicts.py", line 44:
        @njit
        def dict_iterable_1(a, b):
        ^

  warnings.warn(NumbaPendingDeprecationWarning(msg, loc=loc))
/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/ir_utils.py:2174: NumbaPendingDeprecationWarning: 
Encountered the use of a type that is scheduled for deprecation: type 'reflected list' found for argument 'b' of function 'TestCompiledDict.test_use_dict_iterable_args.<locals>.dict_iterable_1'.

For more information visit https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-reflection-for-list-and-set-types

File "numba/tests/test_dicts.py", line 44:
        @njit
        def dict_iterable_1(a, b):
        ^

  warnings.warn(NumbaPendingDeprecationWarning(msg, loc=loc))
/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/ir_utils.py:2174: NumbaPendingDeprecationWarning: 
Encountered the use of a type that is scheduled for deprecation: type 'reflected list' found for argument 'a' of function 'TestCompiledDict.test_use_dict_iterable_args.<locals>.dict_iterable_1'.

For more information visit https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-reflection-for-list-and-set-types

File "numba/tests/test_dicts.py", line 44:
        @njit
        def dict_iterable_1(a, b):
        ^

  warnings.warn(NumbaPendingDeprecationWarning(msg, loc=loc))
test_use_dict_iterable_args (numba.tests.test_dicts.TestCompiledDict.test_use_dict_iterable_args) ... ERROR

======================================================================
ERROR: test_ctor_iterable_tuple (numba.tests.test_dicts.TestCompiledDict.test_ctor_iterable_tuple)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_dicts.py", line 72, in test_ctor_iterable_tuple
    self.assertEquals(expected, got)
    ^^^^^^^^^^^^^^^^^
AttributeError: 'TestCompiledDict' object has no attribute 'assertEquals'. Did you mean: 'assertEqual'?

======================================================================
ERROR: test_use_dict_iterable_args (numba.tests.test_dicts.TestCompiledDict.test_use_dict_iterable_args)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_dicts.py", line 60, in test_use_dict_iterable_args
    d = dict_iterable_1(a, b)
        ^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 468, in _compile_for_args
    error_rewrite(e, 'typing')
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 407, in error_rewrite
    raise e
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 420, in _compile_for_args
    return_val = self.compile(tuple(argtypes))
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
    cres = self._compiler.compile(args, return_type)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
    raise retval
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
    retval = self._compile_core(args, return_type)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
    cres = compiler.compile_extra(self.targetdescr.typing_context,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
    return pipeline.compile_extra(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
    return self._compile_bytecode()
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
    return self._compile_core()
           ^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
    raise e
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
    pm.run(self.state)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
    raise patched_exception
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
    self._runPass(idx, pass_inst, state)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
    mutated |= check(pss.run_pass, internal_state)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
    mangled = func(compiler_state)
              ^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 466, in run_pass
    lower.lower()
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 187, in lower
    self.lower_normal_function(self.fndesc)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 241, in lower_normal_function
    entry_block_tail = self.lower_function_body()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 271, in lower_function_body
    self.lower_block(block)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 285, in lower_block
    self.lower_inst(inst)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 463, in lower_inst
    val = self.lower_assign(ty, inst)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 675, in lower_assign
    return self.lower_expr(ty, value)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 1211, in lower_expr
    res = self.lower_call(resty, expr)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 940, in lower_call
    res = self._lower_call_normal(fnty, expr, signature)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 1182, in _lower_call_normal
    res = impl(self.builder, argvals, self.loc)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/base.py", line 1187, in __call__
    res = self._imp(self._context, builder, self._sig, args, loc=loc)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/base.py", line 1217, in wrapper
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/typed/dictimpl.py", line 27, in dict_constructor
    return context.compile_internal(builder, dict_impl, sig, args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/base.py", line 878, in compile_internal
    cres = self.compile_subroutine(builder, impl, sig, locals)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/base.py", line 863, in compile_subroutine
    cres = self._compile_subroutine_no_cache(builder, impl, sig,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/base.py", line 834, in _compile_subroutine_no_cache
    cres = compiler.compile_internal(self.typing_context, self,
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 844, in compile_internal
    return pipeline.compile_extra(func)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
    return self._compile_bytecode()
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
    return self._compile_core()
           ^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
    raise e
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
    pm.run(self.state)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
    raise patched_exception
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
    self._runPass(idx, pass_inst, state)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
    mutated |= check(pss.run_pass, internal_state)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
    mangled = func(compiler_state)
              ^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 466, in run_pass
    lower.lower()
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 187, in lower
    self.lower_normal_function(self.fndesc)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 241, in lower_normal_function
    entry_block_tail = self.lower_function_body()
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 271, in lower_function_body
    self.lower_block(block)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 285, in lower_block
    self.lower_inst(inst)
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 463, in lower_inst
    val = self.lower_assign(ty, inst)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 675, in lower_assign
    return self.lower_expr(ty, value)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/lowering.py", line 1235, in lower_expr
    res = impl(self.builder, (castval,))
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/base.py", line 1187, in __call__
    res = self._imp(self._context, builder, self._sig, args, loc=loc)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/base.py", line 1217, in wrapper
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/imputils.py", line 336, in wrapper
    func(context, builder, sig, args,
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/iterators.py", line 106, in iternext_zip
    srcres = call_iternext(context, builder, srcty, iterobj)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/imputils.py", line 372, in call_iternext
    val = iternext_impl(builder, (val,))
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/base.py", line 1187, in __call__
    res = self._imp(self._context, builder, self._sig, args, loc=loc)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/base.py", line 1217, in wrapper
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/imputils.py", line 336, in wrapper
    func(context, builder, sig, args,
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py", line 2608, in iternext_unicode
    getitem_sig = fnty.get_call_type(tyctx, (types.unicode_type, types.uintp),
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
    failures.raise_error()
  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
    raise errors.TypingError(self.format())
numba.core.errors.TypingError: Failed in nopython mode pipeline (step: native lowering)
Failed in nopython mode pipeline (step: native lowering)
No implementation of function Function(<built-in function getitem>) found for signature:
 
 >>> getitem(unicode_type, uint64)
 
There are 22 candidate implementations:
 - Of which 20 did not match due to:
 Overload of function 'getitem': File: <numerous>: Line N/A.
   With argument(s): '(unicode_type, uint64)':
  No match.
 - Of which 1 did not match due to:
 Overload in function 'unicode_getitem': File: numba/cpython/unicode.py: Line 1782.
   With argument(s): '(unicode_type, uint64)':
  Rejected as the implementation raised a specific error:
    TypingError: Failed in nopython mode pipeline (step: nopython frontend)
  No implementation of function Function(<function _empty_string at 0x7f279ddb5580>) found for signature:
   
   >>> _empty_string(int64, Literal[int](1), bool)
   
  There are 2 candidate implementations:
    - Of which 2 did not match due to:
    Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
      With argument(s): '(int64, int64, bool)':
     Rejected as the implementation raised a specific error:
       TypingError: Failed in nopython mode pipeline (step: nopython frontend)
     No implementation of function Function(<function _kind_to_byte_width at 0x7f279ddb5d00>) found for signature:
      
      >>> _kind_to_byte_width(int64)
      
     There are 2 candidate implementations:
           - Of which 2 did not match due to:
           Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
             With argument(s): '(int64)':
            Rejected as the implementation raised a specific error:
              TypingError: Failed in nopython mode pipeline (step: nopython frontend)
            NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                Traceback (most recent call last):
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                    sig = temp.apply(nolitargs, nolitkws)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                    sig = generic(args, kws)
                          ^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                    disp, new_args = self._get_impl(args, kws)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                    impl, args = self._build_impl(cache_key, args, kws)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                    disp_type.get_call_type(self.context, args, kws)
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                    self.dispatcher.get_call_template(args, kws)
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                    self.compile(tuple(args))
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                    cres = self._compiler.compile(args, return_type)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                    raise retval
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                    retval = self._compile_core(args, return_type)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                    cres = compiler.compile_extra(self.targetdescr.typing_context,
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                    return pipeline.compile_extra(func)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                    return self._compile_bytecode()
                           ^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                    return self._compile_core()
                           ^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                    raise e
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                    pm.run(self.state)
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                    raise patched_exception
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                    self._runPass(idx, pass_inst, state)
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                    return func(*args, **kwargs)
                           ^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                    mutated |= check(pss.run_pass, internal_state)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                    mangled = func(compiler_state)
                              ^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                    typemap, return_type, calltypes, errs = type_inference_stage(
                                                            ^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                    infer.build_constraint()
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                    self.constrain_statement(inst)
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                    self.typeof_assign(inst)
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                    self.typeof_global(inst, inst.target, value)
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                    typ = self.resolve_value_type(inst, gvar.value)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                  File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                    raise TypingError(msg, loc=inst.loc)
                numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
       raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
     
     During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f279ddb5d00>)
     During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
     
     
     File "numba/cpython/unicode.py", line 278:
     def _empty_string(kind, length, is_ascii=0):
         char_width = _kind_to_byte_width(kind)
         ^
     
         Traceback (most recent call last):
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
             constraint(typeinfer)
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
             self.resolve(typeinfer, typevars, fnty)
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
             sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
             return self.context.resolve_function_type(fnty, pos_args, kw_args)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
             raise last_exception
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
             res = self._resolve_user_function_type(func, args, kws)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
             return func.get_call_type(self, args, kws)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
             failures.raise_error()
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
             raise errors.TypingError(self.format())
         numba.core.errors.TypingError: No implementation of function Function(<function _kind_to_byte_width at 0x7f279ddb5d00>) found for signature:
          
          >>> _kind_to_byte_width(int64)
          
         There are 2 candidate implementations:
               - Of which 2 did not match due to:
               Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                 With argument(s): '(int64)':
                Rejected as the implementation raised a specific error:
                  TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                    Traceback (most recent call last):
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                        sig = temp.apply(nolitargs, nolitkws)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                        sig = generic(args, kws)
                              ^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                        disp, new_args = self._get_impl(args, kws)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                        impl, args = self._build_impl(cache_key, args, kws)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                        disp_type.get_call_type(self.context, args, kws)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                        self.dispatcher.get_call_template(args, kws)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                        self.compile(tuple(args))
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                        cres = self._compiler.compile(args, return_type)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                        raise retval
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                        retval = self._compile_core(args, return_type)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                        cres = compiler.compile_extra(self.targetdescr.typing_context,
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                        return pipeline.compile_extra(func)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                        return self._compile_bytecode()
                               ^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                        return self._compile_core()
                               ^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                        raise e
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                        pm.run(self.state)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                        raise patched_exception
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                        self._runPass(idx, pass_inst, state)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                        return func(*args, **kwargs)
                               ^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                        mutated |= check(pss.run_pass, internal_state)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                        mangled = func(compiler_state)
                                  ^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                        typemap, return_type, calltypes, errs = type_inference_stage(
                                                                ^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                        infer.build_constraint()
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                        self.constrain_statement(inst)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                        self.typeof_assign(inst)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                        self.typeof_global(inst, inst.target, value)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                        typ = self.resolve_value_type(inst, gvar.value)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                        raise TypingError(msg, loc=inst.loc)
                    numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                    NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
           raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
         During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f279ddb5d00>)
         During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
         The above exception was the direct cause of the following exception:
         Traceback (most recent call last):
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
             sig = temp.apply(nolitargs, nolitkws)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
             sig = generic(args, kws)
                   ^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
             disp, new_args = self._get_impl(args, kws)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
             impl, args = self._build_impl(cache_key, args, kws)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
             disp_type.get_call_type(self.context, args, kws)
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
             self.dispatcher.get_call_template(args, kws)
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
             self.compile(tuple(args))
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
             cres = self._compiler.compile(args, return_type)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
             raise retval
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
             retval = self._compile_core(args, return_type)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
             cres = compiler.compile_extra(self.targetdescr.typing_context,
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
             return pipeline.compile_extra(func)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
             return self._compile_bytecode()
                    ^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
             return self._compile_core()
                    ^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
             raise e
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
             pm.run(self.state)
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
             raise patched_exception
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
             self._runPass(idx, pass_inst, state)
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
             return func(*args, **kwargs)
                    ^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
             mutated |= check(pss.run_pass, internal_state)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
             mangled = func(compiler_state)
                       ^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
             typemap, return_type, calltypes, errs = type_inference_stage(
                                                     ^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
             errs = infer.propagate(raise_errors=raise_errors)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
           File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
             raise errors[0]
         numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
         No implementation of function Function(<function _kind_to_byte_width at 0x7f279ddb5d00>) found for signature:
          
          >>> _kind_to_byte_width(int64)
          
         There are 2 candidate implementations:
               - Of which 2 did not match due to:
               Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                 With argument(s): '(int64)':
                Rejected as the implementation raised a specific error:
                  TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                    Traceback (most recent call last):
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                        sig = temp.apply(nolitargs, nolitkws)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                        sig = generic(args, kws)
                              ^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                        disp, new_args = self._get_impl(args, kws)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                        impl, args = self._build_impl(cache_key, args, kws)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                        disp_type.get_call_type(self.context, args, kws)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                        self.dispatcher.get_call_template(args, kws)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                        self.compile(tuple(args))
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                        cres = self._compiler.compile(args, return_type)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                        raise retval
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                        retval = self._compile_core(args, return_type)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                        cres = compiler.compile_extra(self.targetdescr.typing_context,
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                        return pipeline.compile_extra(func)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                        return self._compile_bytecode()
                               ^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                        return self._compile_core()
                               ^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                        raise e
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                        pm.run(self.state)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                        raise patched_exception
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                        self._runPass(idx, pass_inst, state)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                        return func(*args, **kwargs)
                               ^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                        mutated |= check(pss.run_pass, internal_state)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                        mangled = func(compiler_state)
                                  ^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                        typemap, return_type, calltypes, errs = type_inference_stage(
                                                                ^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                        infer.build_constraint()
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                        self.constrain_statement(inst)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                        self.typeof_assign(inst)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                        self.typeof_global(inst, inst.target, value)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                        typ = self.resolve_value_type(inst, gvar.value)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                        raise TypingError(msg, loc=inst.loc)
                    numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                    NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
           raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
         During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f279ddb5d00>)
         During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
         File "numba/cpython/unicode.py", line 278:
         def _empty_string(kind, length, is_ascii=0):
             char_width = _kind_to_byte_width(kind)
             ^
    raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086
  
  During: resolving callee type: Function(<function _empty_string at 0x7f279ddb5580>)
  During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1794)
  
  
  File "numba/cpython/unicode.py", line 1794:
              def getitem_char(s, idx):
                  <source elided>
                      is_ascii = _codepoint_is_ascii(cp)
                      ret = _empty_string(kind, 1, is_ascii)
                      ^
  
      Traceback (most recent call last):
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
          constraint(typeinfer)
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
          self.resolve(typeinfer, typevars, fnty)
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
          sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
          return self.context.resolve_function_type(fnty, pos_args, kw_args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
          raise last_exception
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
          res = self._resolve_user_function_type(func, args, kws)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
          return func.get_call_type(self, args, kws)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
          failures.raise_error()
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
          raise errors.TypingError(self.format())
      numba.core.errors.TypingError: No implementation of function Function(<function _empty_string at 0x7f279ddb5580>) found for signature:
       
       >>> _empty_string(int64, Literal[int](1), bool)
       
      There are 2 candidate implementations:
        - Of which 2 did not match due to:
        Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
          With argument(s): '(int64, int64, bool)':
         Rejected as the implementation raised a specific error:
           TypingError: Failed in nopython mode pipeline (step: nopython frontend)
         No implementation of function Function(<function _kind_to_byte_width at 0x7f279ddb5d00>) found for signature:
          
          >>> _kind_to_byte_width(int64)
          
         There are 2 candidate implementations:
               - Of which 2 did not match due to:
               Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                 With argument(s): '(int64)':
                Rejected as the implementation raised a specific error:
                  TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                    Traceback (most recent call last):
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                        sig = temp.apply(nolitargs, nolitkws)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                        sig = generic(args, kws)
                              ^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                        disp, new_args = self._get_impl(args, kws)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                        impl, args = self._build_impl(cache_key, args, kws)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                        disp_type.get_call_type(self.context, args, kws)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                        self.dispatcher.get_call_template(args, kws)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                        self.compile(tuple(args))
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                        cres = self._compiler.compile(args, return_type)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                        raise retval
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                        retval = self._compile_core(args, return_type)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                        cres = compiler.compile_extra(self.targetdescr.typing_context,
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                        return pipeline.compile_extra(func)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                        return self._compile_bytecode()
                               ^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                        return self._compile_core()
                               ^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                        raise e
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                        pm.run(self.state)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                        raise patched_exception
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                        self._runPass(idx, pass_inst, state)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                        return func(*args, **kwargs)
                               ^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                        mutated |= check(pss.run_pass, internal_state)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                        mangled = func(compiler_state)
                                  ^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                        typemap, return_type, calltypes, errs = type_inference_stage(
                                                                ^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                        infer.build_constraint()
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                        self.constrain_statement(inst)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                        self.typeof_assign(inst)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                        self.typeof_global(inst, inst.target, value)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                        typ = self.resolve_value_type(inst, gvar.value)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                        raise TypingError(msg, loc=inst.loc)
                    numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                    NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
           raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
         
         During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f279ddb5d00>)
         During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
         
         
         File "numba/cpython/unicode.py", line 278:
         def _empty_string(kind, length, is_ascii=0):
             char_width = _kind_to_byte_width(kind)
             ^
         
             Traceback (most recent call last):
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
                 constraint(typeinfer)
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
                 self.resolve(typeinfer, typevars, fnty)
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
                 sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
                 return self.context.resolve_function_type(fnty, pos_args, kw_args)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
                 raise last_exception
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
                 res = self._resolve_user_function_type(func, args, kws)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
                 return func.get_call_type(self, args, kws)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
                 failures.raise_error()
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
                 raise errors.TypingError(self.format())
             numba.core.errors.TypingError: No implementation of function Function(<function _kind_to_byte_width at 0x7f279ddb5d00>) found for signature:
              
              >>> _kind_to_byte_width(int64)
              
             There are 2 candidate implementations:
                   - Of which 2 did not match due to:
                   Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                     With argument(s): '(int64)':
                    Rejected as the implementation raised a specific error:
                      TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                    NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                        Traceback (most recent call last):
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                            sig = temp.apply(nolitargs, nolitkws)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                            sig = generic(args, kws)
                                  ^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                            disp, new_args = self._get_impl(args, kws)
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                            impl, args = self._build_impl(cache_key, args, kws)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                            disp_type.get_call_type(self.context, args, kws)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                            self.dispatcher.get_call_template(args, kws)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                            self.compile(tuple(args))
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                            cres = self._compiler.compile(args, return_type)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                            raise retval
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                            retval = self._compile_core(args, return_type)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                            cres = compiler.compile_extra(self.targetdescr.typing_context,
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                            return pipeline.compile_extra(func)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                            return self._compile_bytecode()
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                            return self._compile_core()
                                   ^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                            raise e
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                            pm.run(self.state)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                            raise patched_exception
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                            self._runPass(idx, pass_inst, state)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                            return func(*args, **kwargs)
                                   ^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                            mutated |= check(pss.run_pass, internal_state)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                            mangled = func(compiler_state)
                                      ^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                            typemap, return_type, calltypes, errs = type_inference_stage(
                                                                    ^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                            infer.build_constraint()
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                            self.constrain_statement(inst)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                            self.typeof_assign(inst)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                            self.typeof_global(inst, inst.target, value)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                            typ = self.resolve_value_type(inst, gvar.value)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                            raise TypingError(msg, loc=inst.loc)
                        numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                        NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
               raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
             During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f279ddb5d00>)
             During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
             The above exception was the direct cause of the following exception:
             Traceback (most recent call last):
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                 sig = temp.apply(nolitargs, nolitkws)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                 sig = generic(args, kws)
                       ^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                 disp, new_args = self._get_impl(args, kws)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                 impl, args = self._build_impl(cache_key, args, kws)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                 disp_type.get_call_type(self.context, args, kws)
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                 self.dispatcher.get_call_template(args, kws)
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                 self.compile(tuple(args))
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                 cres = self._compiler.compile(args, return_type)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                 raise retval
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                 retval = self._compile_core(args, return_type)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                 cres = compiler.compile_extra(self.targetdescr.typing_context,
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                 return pipeline.compile_extra(func)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                 return self._compile_bytecode()
                        ^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                 return self._compile_core()
                        ^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                 raise e
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                 pm.run(self.state)
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                 raise patched_exception
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                 self._runPass(idx, pass_inst, state)
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                 return func(*args, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                 mutated |= check(pss.run_pass, internal_state)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                 mangled = func(compiler_state)
                           ^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                 typemap, return_type, calltypes, errs = type_inference_stage(
                                                         ^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
                 errs = infer.propagate(raise_errors=raise_errors)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
                 raise errors[0]
             numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
             No implementation of function Function(<function _kind_to_byte_width at 0x7f279ddb5d00>) found for signature:
              
              >>> _kind_to_byte_width(int64)
              
             There are 2 candidate implementations:
                   - Of which 2 did not match due to:
                   Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                     With argument(s): '(int64)':
                    Rejected as the implementation raised a specific error:
                      TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                    NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                        Traceback (most recent call last):
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                            sig = temp.apply(nolitargs, nolitkws)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                            sig = generic(args, kws)
                                  ^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                            disp, new_args = self._get_impl(args, kws)
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                            impl, args = self._build_impl(cache_key, args, kws)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                            disp_type.get_call_type(self.context, args, kws)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                            self.dispatcher.get_call_template(args, kws)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                            self.compile(tuple(args))
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                            cres = self._compiler.compile(args, return_type)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                            raise retval
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                            retval = self._compile_core(args, return_type)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                            cres = compiler.compile_extra(self.targetdescr.typing_context,
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                            return pipeline.compile_extra(func)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                            return self._compile_bytecode()
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                            return self._compile_core()
                                   ^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                            raise e
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                            pm.run(self.state)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                            raise patched_exception
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                            self._runPass(idx, pass_inst, state)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                            return func(*args, **kwargs)
                                   ^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                            mutated |= check(pss.run_pass, internal_state)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                            mangled = func(compiler_state)
                                      ^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                            typemap, return_type, calltypes, errs = type_inference_stage(
                                                                    ^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                            infer.build_constraint()
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                            self.constrain_statement(inst)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                            self.typeof_assign(inst)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                            self.typeof_global(inst, inst.target, value)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                            typ = self.resolve_value_type(inst, gvar.value)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                            raise TypingError(msg, loc=inst.loc)
                        numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                        NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
               raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
             During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f279ddb5d00>)
             During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
             File "numba/cpython/unicode.py", line 278:
             def _empty_string(kind, length, is_ascii=0):
                 char_width = _kind_to_byte_width(kind)
                 ^
        raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086
      During: resolving callee type: Function(<function _empty_string at 0x7f279ddb5580>)
      During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1794)
      The above exception was the direct cause of the following exception:
      Traceback (most recent call last):
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
          sig = temp.apply(nolitargs, nolitkws)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
          sig = generic(args, kws)
                ^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
          disp, new_args = self._get_impl(args, kws)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
          impl, args = self._build_impl(cache_key, args, kws)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
          disp_type.get_call_type(self.context, args, kws)
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
          self.dispatcher.get_call_template(args, kws)
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
          self.compile(tuple(args))
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
          cres = self._compiler.compile(args, return_type)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
          raise retval
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
          retval = self._compile_core(args, return_type)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
          cres = compiler.compile_extra(self.targetdescr.typing_context,
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
          return pipeline.compile_extra(func)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
          return self._compile_bytecode()
                 ^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
          return self._compile_core()
                 ^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
          raise e
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
          pm.run(self.state)
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
          raise patched_exception
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
          self._runPass(idx, pass_inst, state)
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
          return func(*args, **kwargs)
                 ^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
          mutated |= check(pss.run_pass, internal_state)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
          mangled = func(compiler_state)
                    ^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
          typemap, return_type, calltypes, errs = type_inference_stage(
                                                  ^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
          errs = infer.propagate(raise_errors=raise_errors)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
          raise errors[0]
      numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
      No implementation of function Function(<function _empty_string at 0x7f279ddb5580>) found for signature:
       
       >>> _empty_string(int64, Literal[int](1), bool)
       
      There are 2 candidate implementations:
        - Of which 2 did not match due to:
        Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
          With argument(s): '(int64, int64, bool)':
         Rejected as the implementation raised a specific error:
           TypingError: Failed in nopython mode pipeline (step: nopython frontend)
         No implementation of function Function(<function _kind_to_byte_width at 0x7f279ddb5d00>) found for signature:
          
          >>> _kind_to_byte_width(int64)
          
         There are 2 candidate implementations:
               - Of which 2 did not match due to:
               Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                 With argument(s): '(int64)':
                Rejected as the implementation raised a specific error:
                  TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                    Traceback (most recent call last):
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                        sig = temp.apply(nolitargs, nolitkws)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                        sig = generic(args, kws)
                              ^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                        disp, new_args = self._get_impl(args, kws)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                        impl, args = self._build_impl(cache_key, args, kws)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                        disp_type.get_call_type(self.context, args, kws)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                        self.dispatcher.get_call_template(args, kws)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                        self.compile(tuple(args))
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                        cres = self._compiler.compile(args, return_type)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                        raise retval
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                        retval = self._compile_core(args, return_type)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                        cres = compiler.compile_extra(self.targetdescr.typing_context,
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                        return pipeline.compile_extra(func)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                        return self._compile_bytecode()
                               ^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                        return self._compile_core()
                               ^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                        raise e
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                        pm.run(self.state)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                        raise patched_exception
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                        self._runPass(idx, pass_inst, state)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                        return func(*args, **kwargs)
                               ^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                        mutated |= check(pss.run_pass, internal_state)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                        mangled = func(compiler_state)
                                  ^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                        typemap, return_type, calltypes, errs = type_inference_stage(
                                                                ^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                        infer.build_constraint()
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                        self.constrain_statement(inst)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                        self.typeof_assign(inst)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                        self.typeof_global(inst, inst.target, value)
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                        typ = self.resolve_value_type(inst, gvar.value)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                      File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                        raise TypingError(msg, loc=inst.loc)
                    numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                    NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
           raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
         
         During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f279ddb5d00>)
         During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
         
         
         File "numba/cpython/unicode.py", line 278:
         def _empty_string(kind, length, is_ascii=0):
             char_width = _kind_to_byte_width(kind)
             ^
         
             Traceback (most recent call last):
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
                 constraint(typeinfer)
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
                 self.resolve(typeinfer, typevars, fnty)
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
                 sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
                 return self.context.resolve_function_type(fnty, pos_args, kw_args)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
                 raise last_exception
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
                 res = self._resolve_user_function_type(func, args, kws)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
                 return func.get_call_type(self, args, kws)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
                 failures.raise_error()
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
                 raise errors.TypingError(self.format())
             numba.core.errors.TypingError: No implementation of function Function(<function _kind_to_byte_width at 0x7f279ddb5d00>) found for signature:
              
              >>> _kind_to_byte_width(int64)
              
             There are 2 candidate implementations:
                   - Of which 2 did not match due to:
                   Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                     With argument(s): '(int64)':
                    Rejected as the implementation raised a specific error:
                      TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                    NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                        Traceback (most recent call last):
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                            sig = temp.apply(nolitargs, nolitkws)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                            sig = generic(args, kws)
                                  ^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                            disp, new_args = self._get_impl(args, kws)
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                            impl, args = self._build_impl(cache_key, args, kws)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                            disp_type.get_call_type(self.context, args, kws)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                            self.dispatcher.get_call_template(args, kws)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                            self.compile(tuple(args))
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                            cres = self._compiler.compile(args, return_type)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                            raise retval
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                            retval = self._compile_core(args, return_type)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                            cres = compiler.compile_extra(self.targetdescr.typing_context,
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                            return pipeline.compile_extra(func)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                            return self._compile_bytecode()
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                            return self._compile_core()
                                   ^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                            raise e
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                            pm.run(self.state)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                            raise patched_exception
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                            self._runPass(idx, pass_inst, state)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                            return func(*args, **kwargs)
                                   ^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                            mutated |= check(pss.run_pass, internal_state)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                            mangled = func(compiler_state)
                                      ^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                            typemap, return_type, calltypes, errs = type_inference_stage(
                                                                    ^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                            infer.build_constraint()
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                            self.constrain_statement(inst)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                            self.typeof_assign(inst)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                            self.typeof_global(inst, inst.target, value)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                            typ = self.resolve_value_type(inst, gvar.value)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                            raise TypingError(msg, loc=inst.loc)
                        numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                        NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
               raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
             During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f279ddb5d00>)
             During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
             The above exception was the direct cause of the following exception:
             Traceback (most recent call last):
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                 sig = temp.apply(nolitargs, nolitkws)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                 sig = generic(args, kws)
                       ^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                 disp, new_args = self._get_impl(args, kws)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                 impl, args = self._build_impl(cache_key, args, kws)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                 disp_type.get_call_type(self.context, args, kws)
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                 self.dispatcher.get_call_template(args, kws)
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                 self.compile(tuple(args))
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                 cres = self._compiler.compile(args, return_type)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                 raise retval
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                 retval = self._compile_core(args, return_type)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                 cres = compiler.compile_extra(self.targetdescr.typing_context,
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                 return pipeline.compile_extra(func)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                 return self._compile_bytecode()
                        ^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                 return self._compile_core()
                        ^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                 raise e
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                 pm.run(self.state)
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                 raise patched_exception
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                 self._runPass(idx, pass_inst, state)
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                 return func(*args, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                 mutated |= check(pss.run_pass, internal_state)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                 mangled = func(compiler_state)
                           ^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                 typemap, return_type, calltypes, errs = type_inference_stage(
                                                         ^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
                 errs = infer.propagate(raise_errors=raise_errors)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
               File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
                 raise errors[0]
             numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
             No implementation of function Function(<function _kind_to_byte_width at 0x7f279ddb5d00>) found for signature:
              
              >>> _kind_to_byte_width(int64)
              
             There are 2 candidate implementations:
                   - Of which 2 did not match due to:
                   Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                     With argument(s): '(int64)':
                    Rejected as the implementation raised a specific error:
                      TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                    NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                        Traceback (most recent call last):
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                            sig = temp.apply(nolitargs, nolitkws)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                            sig = generic(args, kws)
                                  ^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                            disp, new_args = self._get_impl(args, kws)
                                             ^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                            impl, args = self._build_impl(cache_key, args, kws)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                            disp_type.get_call_type(self.context, args, kws)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                            self.dispatcher.get_call_template(args, kws)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                            self.compile(tuple(args))
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                            cres = self._compiler.compile(args, return_type)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                            raise retval
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                            retval = self._compile_core(args, return_type)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                            cres = compiler.compile_extra(self.targetdescr.typing_context,
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                            return pipeline.compile_extra(func)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                            return self._compile_bytecode()
                                   ^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                            return self._compile_core()
                                   ^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                            raise e
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                            pm.run(self.state)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                            raise patched_exception
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                            self._runPass(idx, pass_inst, state)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                            return func(*args, **kwargs)
                                   ^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                            mutated |= check(pss.run_pass, internal_state)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                            mangled = func(compiler_state)
                                      ^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                            typemap, return_type, calltypes, errs = type_inference_stage(
                                                                    ^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                            infer.build_constraint()
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                            self.constrain_statement(inst)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                            self.typeof_assign(inst)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                            self.typeof_global(inst, inst.target, value)
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                            typ = self.resolve_value_type(inst, gvar.value)
                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                          File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                            raise TypingError(msg, loc=inst.loc)
                        numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                        NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
               raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
             During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f279ddb5d00>)
             During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
             File "numba/cpython/unicode.py", line 278:
             def _empty_string(kind, length, is_ascii=0):
                 char_width = _kind_to_byte_width(kind)
                 ^
        raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086
      During: resolving callee type: Function(<function _empty_string at 0x7f279ddb5580>)
      During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1794)
      File "numba/cpython/unicode.py", line 1794:
                  def getitem_char(s, idx):
                      <source elided>
                          is_ascii = _codepoint_is_ascii(cp)
                          ret = _empty_string(kind, 1, is_ascii)
                          ^
  raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086
 - Of which 1 did not match due to:
 Overload in function 'unicode_getitem': File: numba/cpython/unicode.py: Line 1782.
   With argument(s): '(unicode_type, uint64)':
  Rejected as the implementation raised a specific error:
    TypingError: Failed in nopython mode pipeline (step: nopython frontend)
  No implementation of function Function(<function _empty_string at 0x7f279ddb5580>) found for signature:
   
   >>> _empty_string(int64, Literal[int](1), bool)
   
  There are 2 candidate implementations:
      - Of which 2 did not match due to:
      Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
        With argument(s): '(int64, int64, bool)':
       Rejected as the implementation raised a specific error:
         TypingError: Failed in nopython mode pipeline (step: nopython frontend)
       No implementation of function Function(<function _kind_to_byte_width at 0x7f279ddb5d00>) found for signature:
        
        >>> _kind_to_byte_width(int64)
        
       There are 2 candidate implementations:
             - Of which 2 did not match due to:
             Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
               With argument(s): '(int64)':
              Rejected as the implementation raised a specific error:
                TypingError: Failed in nopython mode pipeline (step: nopython frontend)
              NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                  Traceback (most recent call last):
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                      sig = temp.apply(nolitargs, nolitkws)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                      sig = generic(args, kws)
                            ^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                      disp, new_args = self._get_impl(args, kws)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                      impl, args = self._build_impl(cache_key, args, kws)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                      disp_type.get_call_type(self.context, args, kws)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                      self.dispatcher.get_call_template(args, kws)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                      self.compile(tuple(args))
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                      cres = self._compiler.compile(args, return_type)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                      raise retval
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                      retval = self._compile_core(args, return_type)
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                      cres = compiler.compile_extra(self.targetdescr.typing_context,
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                      return pipeline.compile_extra(func)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                      return self._compile_bytecode()
                             ^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                      return self._compile_core()
                             ^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                      raise e
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                      pm.run(self.state)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                      raise patched_exception
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                      self._runPass(idx, pass_inst, state)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                      return func(*args, **kwargs)
                             ^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                      mutated |= check(pss.run_pass, internal_state)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                      mangled = func(compiler_state)
                                ^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                      typemap, return_type, calltypes, errs = type_inference_stage(
                                                              ^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                      infer.build_constraint()
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                      self.constrain_statement(inst)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                      self.typeof_assign(inst)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                      self.typeof_global(inst, inst.target, value)
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                      typ = self.resolve_value_type(inst, gvar.value)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                    File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                      raise TypingError(msg, loc=inst.loc)
                  numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                  NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
         raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
       
       During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f279ddb5d00>)
       During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
       
       
       File "numba/cpython/unicode.py", line 278:
       def _empty_string(kind, length, is_ascii=0):
           char_width = _kind_to_byte_width(kind)
           ^
       
           Traceback (most recent call last):
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
               constraint(typeinfer)
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
               self.resolve(typeinfer, typevars, fnty)
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
               sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
               return self.context.resolve_function_type(fnty, pos_args, kw_args)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
               raise last_exception
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
               res = self._resolve_user_function_type(func, args, kws)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
               return func.get_call_type(self, args, kws)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
               failures.raise_error()
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
               raise errors.TypingError(self.format())
           numba.core.errors.TypingError: No implementation of function Function(<function _kind_to_byte_width at 0x7f279ddb5d00>) found for signature:
            
            >>> _kind_to_byte_width(int64)
            
           There are 2 candidate implementations:
                 - Of which 2 did not match due to:
                 Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                   With argument(s): '(int64)':
                  Rejected as the implementation raised a specific error:
                    TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                  NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                      Traceback (most recent call last):
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                          sig = temp.apply(nolitargs, nolitkws)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                          sig = generic(args, kws)
                                ^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                          disp, new_args = self._get_impl(args, kws)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                          impl, args = self._build_impl(cache_key, args, kws)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                          disp_type.get_call_type(self.context, args, kws)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                          self.dispatcher.get_call_template(args, kws)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                          self.compile(tuple(args))
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                          cres = self._compiler.compile(args, return_type)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                          raise retval
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                          retval = self._compile_core(args, return_type)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                          cres = compiler.compile_extra(self.targetdescr.typing_context,
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                          return pipeline.compile_extra(func)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                          return self._compile_bytecode()
                                 ^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                          return self._compile_core()
                                 ^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                          raise e
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                          pm.run(self.state)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                          raise patched_exception
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                          self._runPass(idx, pass_inst, state)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                          return func(*args, **kwargs)
                                 ^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                          mutated |= check(pss.run_pass, internal_state)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                          mangled = func(compiler_state)
                                    ^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                          typemap, return_type, calltypes, errs = type_inference_stage(
                                                                  ^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                          infer.build_constraint()
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                          self.constrain_statement(inst)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                          self.typeof_assign(inst)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                          self.typeof_global(inst, inst.target, value)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                          typ = self.resolve_value_type(inst, gvar.value)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                          raise TypingError(msg, loc=inst.loc)
                      numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                      NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
             raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
           During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f279ddb5d00>)
           During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
           The above exception was the direct cause of the following exception:
           Traceback (most recent call last):
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
               sig = temp.apply(nolitargs, nolitkws)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
               sig = generic(args, kws)
                     ^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
               disp, new_args = self._get_impl(args, kws)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
               impl, args = self._build_impl(cache_key, args, kws)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
               disp_type.get_call_type(self.context, args, kws)
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
               self.dispatcher.get_call_template(args, kws)
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
               self.compile(tuple(args))
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
               cres = self._compiler.compile(args, return_type)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
               raise retval
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
               retval = self._compile_core(args, return_type)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
               cres = compiler.compile_extra(self.targetdescr.typing_context,
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
               return pipeline.compile_extra(func)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
               return self._compile_bytecode()
                      ^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
               return self._compile_core()
                      ^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
               raise e
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
               pm.run(self.state)
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
               raise patched_exception
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
               self._runPass(idx, pass_inst, state)
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
               return func(*args, **kwargs)
                      ^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
               mutated |= check(pss.run_pass, internal_state)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
               mangled = func(compiler_state)
                         ^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
               typemap, return_type, calltypes, errs = type_inference_stage(
                                                       ^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
               errs = infer.propagate(raise_errors=raise_errors)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
             File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
               raise errors[0]
           numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
           No implementation of function Function(<function _kind_to_byte_width at 0x7f279ddb5d00>) found for signature:
            
            >>> _kind_to_byte_width(int64)
            
           There are 2 candidate implementations:
                 - Of which 2 did not match due to:
                 Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                   With argument(s): '(int64)':
                  Rejected as the implementation raised a specific error:
                    TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                  NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                      Traceback (most recent call last):
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                          sig = temp.apply(nolitargs, nolitkws)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                          sig = generic(args, kws)
                                ^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                          disp, new_args = self._get_impl(args, kws)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                          impl, args = self._build_impl(cache_key, args, kws)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                          disp_type.get_call_type(self.context, args, kws)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                          self.dispatcher.get_call_template(args, kws)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                          self.compile(tuple(args))
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                          cres = self._compiler.compile(args, return_type)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                          raise retval
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                          retval = self._compile_core(args, return_type)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                          cres = compiler.compile_extra(self.targetdescr.typing_context,
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                          return pipeline.compile_extra(func)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                          return self._compile_bytecode()
                                 ^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                          return self._compile_core()
                                 ^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                          raise e
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                          pm.run(self.state)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                          raise patched_exception
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                          self._runPass(idx, pass_inst, state)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                          return func(*args, **kwargs)
                                 ^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                          mutated |= check(pss.run_pass, internal_state)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                          mangled = func(compiler_state)
                                    ^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                          typemap, return_type, calltypes, errs = type_inference_stage(
                                                                  ^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                          infer.build_constraint()
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                          self.constrain_statement(inst)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                          self.typeof_assign(inst)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                          self.typeof_global(inst, inst.target, value)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                          typ = self.resolve_value_type(inst, gvar.value)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                          raise TypingError(msg, loc=inst.loc)
                      numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                      NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
             raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
           During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f279ddb5d00>)
           During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
           File "numba/cpython/unicode.py", line 278:
           def _empty_string(kind, length, is_ascii=0):
               char_width = _kind_to_byte_width(kind)
               ^
    raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086
  
  During: resolving callee type: Function(<function _empty_string at 0x7f279ddb5580>)
  During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1794)
  
  
  File "numba/cpython/unicode.py", line 1794:
              def getitem_char(s, idx):
                  <source elided>
                      is_ascii = _codepoint_is_ascii(cp)
                      ret = _empty_string(kind, 1, is_ascii)
                      ^
  
      Traceback (most recent call last):
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
          constraint(typeinfer)
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
          self.resolve(typeinfer, typevars, fnty)
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
          sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
          return self.context.resolve_function_type(fnty, pos_args, kw_args)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
          raise last_exception
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
          res = self._resolve_user_function_type(func, args, kws)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
          return func.get_call_type(self, args, kws)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
          failures.raise_error()
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
          raise errors.TypingError(self.format())
      numba.core.errors.TypingError: No implementation of function Function(<function _empty_string at 0x7f279ddb5580>) found for signature:
       
       >>> _empty_string(int64, Literal[int](1), bool)
       
      There are 2 candidate implementations:
          - Of which 2 did not match due to:
          Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
            With argument(s): '(int64, int64, bool)':
           Rejected as the implementation raised a specific error:
             TypingError: Failed in nopython mode pipeline (step: nopython frontend)
           No implementation of function Function(<function _kind_to_byte_width at 0x7f279ddb5d00>) found for signature:
            
            >>> _kind_to_byte_width(int64)
            
           There are 2 candidate implementations:
                 - Of which 2 did not match due to:
                 Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                   With argument(s): '(int64)':
                  Rejected as the implementation raised a specific error:
                    TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                  NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                      Traceback (most recent call last):
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                          sig = temp.apply(nolitargs, nolitkws)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                          sig = generic(args, kws)
                                ^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                          disp, new_args = self._get_impl(args, kws)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                          impl, args = self._build_impl(cache_key, args, kws)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                          disp_type.get_call_type(self.context, args, kws)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                          self.dispatcher.get_call_template(args, kws)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                          self.compile(tuple(args))
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                          cres = self._compiler.compile(args, return_type)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                          raise retval
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                          retval = self._compile_core(args, return_type)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                          cres = compiler.compile_extra(self.targetdescr.typing_context,
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                          return pipeline.compile_extra(func)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                          return self._compile_bytecode()
                                 ^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                          return self._compile_core()
                                 ^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                          raise e
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                          pm.run(self.state)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                          raise patched_exception
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                          self._runPass(idx, pass_inst, state)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                          return func(*args, **kwargs)
                                 ^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                          mutated |= check(pss.run_pass, internal_state)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                          mangled = func(compiler_state)
                                    ^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                          typemap, return_type, calltypes, errs = type_inference_stage(
                                                                  ^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                          infer.build_constraint()
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                          self.constrain_statement(inst)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                          self.typeof_assign(inst)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                          self.typeof_global(inst, inst.target, value)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                          typ = self.resolve_value_type(inst, gvar.value)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                          raise TypingError(msg, loc=inst.loc)
                      numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                      NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
             raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
           
           During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f279ddb5d00>)
           During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
           
           
           File "numba/cpython/unicode.py", line 278:
           def _empty_string(kind, length, is_ascii=0):
               char_width = _kind_to_byte_width(kind)
               ^
           
               Traceback (most recent call last):
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
                   constraint(typeinfer)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
                   self.resolve(typeinfer, typevars, fnty)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
                   sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
                   return self.context.resolve_function_type(fnty, pos_args, kw_args)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
                   raise last_exception
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
                   res = self._resolve_user_function_type(func, args, kws)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
                   return func.get_call_type(self, args, kws)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
                   failures.raise_error()
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
                   raise errors.TypingError(self.format())
               numba.core.errors.TypingError: No implementation of function Function(<function _kind_to_byte_width at 0x7f279ddb5d00>) found for signature:
                
                >>> _kind_to_byte_width(int64)
                
               There are 2 candidate implementations:
                     - Of which 2 did not match due to:
                     Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                       With argument(s): '(int64)':
                      Rejected as the implementation raised a specific error:
                        TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                      NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                          Traceback (most recent call last):
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                              sig = temp.apply(nolitargs, nolitkws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                              sig = generic(args, kws)
                                    ^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                              disp, new_args = self._get_impl(args, kws)
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                              impl, args = self._build_impl(cache_key, args, kws)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                              disp_type.get_call_type(self.context, args, kws)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                              self.dispatcher.get_call_template(args, kws)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                              self.compile(tuple(args))
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                              cres = self._compiler.compile(args, return_type)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                              raise retval
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                              retval = self._compile_core(args, return_type)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                              cres = compiler.compile_extra(self.targetdescr.typing_context,
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                              return pipeline.compile_extra(func)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                              return self._compile_bytecode()
                                     ^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                              return self._compile_core()
                                     ^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                              raise e
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                              pm.run(self.state)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                              raise patched_exception
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                              self._runPass(idx, pass_inst, state)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                              return func(*args, **kwargs)
                                     ^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                              mutated |= check(pss.run_pass, internal_state)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                              mangled = func(compiler_state)
                                        ^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                              typemap, return_type, calltypes, errs = type_inference_stage(
                                                                      ^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                              infer.build_constraint()
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                              self.constrain_statement(inst)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                              self.typeof_assign(inst)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                              self.typeof_global(inst, inst.target, value)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                              typ = self.resolve_value_type(inst, gvar.value)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                              raise TypingError(msg, loc=inst.loc)
                          numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                          NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                 raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
               During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f279ddb5d00>)
               During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
               The above exception was the direct cause of the following exception:
               Traceback (most recent call last):
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                   sig = temp.apply(nolitargs, nolitkws)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                   sig = generic(args, kws)
                         ^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                   disp, new_args = self._get_impl(args, kws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                   impl, args = self._build_impl(cache_key, args, kws)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                   disp_type.get_call_type(self.context, args, kws)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                   self.dispatcher.get_call_template(args, kws)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                   self.compile(tuple(args))
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                   cres = self._compiler.compile(args, return_type)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                   raise retval
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                   retval = self._compile_core(args, return_type)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                   cres = compiler.compile_extra(self.targetdescr.typing_context,
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                   return pipeline.compile_extra(func)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                   return self._compile_bytecode()
                          ^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                   return self._compile_core()
                          ^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                   raise e
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                   pm.run(self.state)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                   raise patched_exception
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                   self._runPass(idx, pass_inst, state)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                   return func(*args, **kwargs)
                          ^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                   mutated |= check(pss.run_pass, internal_state)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                   mangled = func(compiler_state)
                             ^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                   typemap, return_type, calltypes, errs = type_inference_stage(
                                                           ^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
                   errs = infer.propagate(raise_errors=raise_errors)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
                   raise errors[0]
               numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
               No implementation of function Function(<function _kind_to_byte_width at 0x7f279ddb5d00>) found for signature:
                
                >>> _kind_to_byte_width(int64)
                
               There are 2 candidate implementations:
                     - Of which 2 did not match due to:
                     Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                       With argument(s): '(int64)':
                      Rejected as the implementation raised a specific error:
                        TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                      NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                          Traceback (most recent call last):
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                              sig = temp.apply(nolitargs, nolitkws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                              sig = generic(args, kws)
                                    ^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                              disp, new_args = self._get_impl(args, kws)
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                              impl, args = self._build_impl(cache_key, args, kws)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                              disp_type.get_call_type(self.context, args, kws)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                              self.dispatcher.get_call_template(args, kws)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                              self.compile(tuple(args))
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                              cres = self._compiler.compile(args, return_type)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                              raise retval
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                              retval = self._compile_core(args, return_type)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                              cres = compiler.compile_extra(self.targetdescr.typing_context,
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                              return pipeline.compile_extra(func)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                              return self._compile_bytecode()
                                     ^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                              return self._compile_core()
                                     ^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                              raise e
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                              pm.run(self.state)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                              raise patched_exception
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                              self._runPass(idx, pass_inst, state)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                              return func(*args, **kwargs)
                                     ^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                              mutated |= check(pss.run_pass, internal_state)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                              mangled = func(compiler_state)
                                        ^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                              typemap, return_type, calltypes, errs = type_inference_stage(
                                                                      ^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                              infer.build_constraint()
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                              self.constrain_statement(inst)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                              self.typeof_assign(inst)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                              self.typeof_global(inst, inst.target, value)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                              typ = self.resolve_value_type(inst, gvar.value)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                              raise TypingError(msg, loc=inst.loc)
                          numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                          NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                 raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
               During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f279ddb5d00>)
               During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
               File "numba/cpython/unicode.py", line 278:
               def _empty_string(kind, length, is_ascii=0):
                   char_width = _kind_to_byte_width(kind)
                   ^
        raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086
      During: resolving callee type: Function(<function _empty_string at 0x7f279ddb5580>)
      During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1794)
      The above exception was the direct cause of the following exception:
      Traceback (most recent call last):
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 303, in get_call_type
          sig = temp.apply(args, kws)
                ^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
          sig = generic(args, kws)
                ^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
          disp, new_args = self._get_impl(args, kws)
                           ^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
          impl, args = self._build_impl(cache_key, args, kws)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
          disp_type.get_call_type(self.context, args, kws)
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
          self.dispatcher.get_call_template(args, kws)
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
          self.compile(tuple(args))
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
          cres = self._compiler.compile(args, return_type)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
          raise retval
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
          retval = self._compile_core(args, return_type)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
          cres = compiler.compile_extra(self.targetdescr.typing_context,
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
          return pipeline.compile_extra(func)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
          return self._compile_bytecode()
                 ^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
          return self._compile_core()
                 ^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
          raise e
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
          pm.run(self.state)
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
          raise patched_exception
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
          self._runPass(idx, pass_inst, state)
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
          return func(*args, **kwargs)
                 ^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
          mutated |= check(pss.run_pass, internal_state)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
          mangled = func(compiler_state)
                    ^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
          typemap, return_type, calltypes, errs = type_inference_stage(
                                                  ^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
          errs = infer.propagate(raise_errors=raise_errors)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
          raise errors[0]
      numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
      No implementation of function Function(<function _empty_string at 0x7f279ddb5580>) found for signature:
       
       >>> _empty_string(int64, Literal[int](1), bool)
       
      There are 2 candidate implementations:
          - Of which 2 did not match due to:
          Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
            With argument(s): '(int64, int64, bool)':
           Rejected as the implementation raised a specific error:
             TypingError: Failed in nopython mode pipeline (step: nopython frontend)
           No implementation of function Function(<function _kind_to_byte_width at 0x7f279ddb5d00>) found for signature:
            
            >>> _kind_to_byte_width(int64)
            
           There are 2 candidate implementations:
                 - Of which 2 did not match due to:
                 Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                   With argument(s): '(int64)':
                  Rejected as the implementation raised a specific error:
                    TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                  NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                      Traceback (most recent call last):
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                          sig = temp.apply(nolitargs, nolitkws)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                          sig = generic(args, kws)
                                ^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                          disp, new_args = self._get_impl(args, kws)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                          impl, args = self._build_impl(cache_key, args, kws)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                          disp_type.get_call_type(self.context, args, kws)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                          self.dispatcher.get_call_template(args, kws)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                          self.compile(tuple(args))
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                          cres = self._compiler.compile(args, return_type)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                          raise retval
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                          retval = self._compile_core(args, return_type)
                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                          cres = compiler.compile_extra(self.targetdescr.typing_context,
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                          return pipeline.compile_extra(func)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                          return self._compile_bytecode()
                                 ^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                          return self._compile_core()
                                 ^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                          raise e
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                          pm.run(self.state)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                          raise patched_exception
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                          self._runPass(idx, pass_inst, state)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                          return func(*args, **kwargs)
                                 ^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                          mutated |= check(pss.run_pass, internal_state)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                          mangled = func(compiler_state)
                                    ^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                          typemap, return_type, calltypes, errs = type_inference_stage(
                                                                  ^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                          infer.build_constraint()
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                          self.constrain_statement(inst)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                          self.typeof_assign(inst)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                          self.typeof_global(inst, inst.target, value)
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                          typ = self.resolve_value_type(inst, gvar.value)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                        File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                          raise TypingError(msg, loc=inst.loc)
                      numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                      NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
             raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
           
           During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f279ddb5d00>)
           During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
           
           
           File "numba/cpython/unicode.py", line 278:
           def _empty_string(kind, length, is_ascii=0):
               char_width = _kind_to_byte_width(kind)
               ^
           
               Traceback (most recent call last):
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 155, in propagate
                   constraint(typeinfer)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 578, in __call__
                   self.resolve(typeinfer, typevars, fnty)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 601, in resolve
                   sig = typeinfer.resolve_call(fnty, pos_args, kw_args)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1557, in resolve_call
                   return self.context.resolve_function_type(fnty, pos_args, kw_args)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 213, in resolve_function_type
                   raise last_exception
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 196, in resolve_function_type
                   res = self._resolve_user_function_type(func, args, kws)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/context.py", line 248, in _resolve_user_function_type
                   return func.get_call_type(self, args, kws)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 331, in get_call_type
                   failures.raise_error()
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 227, in raise_error
                   raise errors.TypingError(self.format())
               numba.core.errors.TypingError: No implementation of function Function(<function _kind_to_byte_width at 0x7f279ddb5d00>) found for signature:
                
                >>> _kind_to_byte_width(int64)
                
               There are 2 candidate implementations:
                     - Of which 2 did not match due to:
                     Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                       With argument(s): '(int64)':
                      Rejected as the implementation raised a specific error:
                        TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                      NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                          Traceback (most recent call last):
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                              sig = temp.apply(nolitargs, nolitkws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                              sig = generic(args, kws)
                                    ^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                              disp, new_args = self._get_impl(args, kws)
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                              impl, args = self._build_impl(cache_key, args, kws)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                              disp_type.get_call_type(self.context, args, kws)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                              self.dispatcher.get_call_template(args, kws)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                              self.compile(tuple(args))
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                              cres = self._compiler.compile(args, return_type)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                              raise retval
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                              retval = self._compile_core(args, return_type)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                              cres = compiler.compile_extra(self.targetdescr.typing_context,
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                              return pipeline.compile_extra(func)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                              return self._compile_bytecode()
                                     ^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                              return self._compile_core()
                                     ^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                              raise e
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                              pm.run(self.state)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                              raise patched_exception
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                              self._runPass(idx, pass_inst, state)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                              return func(*args, **kwargs)
                                     ^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                              mutated |= check(pss.run_pass, internal_state)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                              mangled = func(compiler_state)
                                        ^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                              typemap, return_type, calltypes, errs = type_inference_stage(
                                                                      ^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                              infer.build_constraint()
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                              self.constrain_statement(inst)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                              self.typeof_assign(inst)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                              self.typeof_global(inst, inst.target, value)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                              typ = self.resolve_value_type(inst, gvar.value)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                              raise TypingError(msg, loc=inst.loc)
                          numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                          NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                 raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
               During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f279ddb5d00>)
               During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
               The above exception was the direct cause of the following exception:
               Traceback (most recent call last):
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                   sig = temp.apply(nolitargs, nolitkws)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                   sig = generic(args, kws)
                         ^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                   disp, new_args = self._get_impl(args, kws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                   impl, args = self._build_impl(cache_key, args, kws)
                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                   disp_type.get_call_type(self.context, args, kws)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                   self.dispatcher.get_call_template(args, kws)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                   self.compile(tuple(args))
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                   cres = self._compiler.compile(args, return_type)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                   raise retval
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                   retval = self._compile_core(args, return_type)
                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                   cres = compiler.compile_extra(self.targetdescr.typing_context,
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                   return pipeline.compile_extra(func)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                   return self._compile_bytecode()
                          ^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                   return self._compile_core()
                          ^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                   raise e
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                   pm.run(self.state)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                   raise patched_exception
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                   self._runPass(idx, pass_inst, state)
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                   return func(*args, **kwargs)
                          ^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                   mutated |= check(pss.run_pass, internal_state)
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                   mangled = func(compiler_state)
                             ^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                   typemap, return_type, calltypes, errs = type_inference_stage(
                                                           ^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 91, in type_inference_stage
                   errs = infer.propagate(raise_errors=raise_errors)
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                 File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1086, in propagate
                   raise errors[0]
               numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
               No implementation of function Function(<function _kind_to_byte_width at 0x7f279ddb5d00>) found for signature:
                
                >>> _kind_to_byte_width(int64)
                
               There are 2 candidate implementations:
                     - Of which 2 did not match due to:
                     Overload in function 'register_jitable.<locals>.wrap.<locals>.ov_wrap': File: numba/core/extending.py: Line 161.
                       With argument(s): '(int64)':
                      Rejected as the implementation raised a specific error:
                        TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                      NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                          Traceback (most recent call last):
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 308, in get_call_type
                              sig = temp.apply(nolitargs, nolitkws)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 351, in apply
                              sig = generic(args, kws)
                                    ^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 614, in generic
                              disp, new_args = self._get_impl(args, kws)
                                               ^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 713, in _get_impl
                              impl, args = self._build_impl(cache_key, args, kws)
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typing/templates.py", line 817, in _build_impl
                              disp_type.get_call_type(self.context, args, kws)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/types/functions.py", line 541, in get_call_type
                              self.dispatcher.get_call_template(args, kws)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 363, in get_call_template
                              self.compile(tuple(args))
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 965, in compile
                              cres = self._compiler.compile(args, return_type)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 129, in compile
                              raise retval
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 139, in _compile_cached
                              retval = self._compile_core(args, return_type)
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/dispatcher.py", line 152, in _compile_core
                              cres = compiler.compile_extra(self.targetdescr.typing_context,
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 770, in compile_extra
                              return pipeline.compile_extra(func)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 461, in compile_extra
                              return self._compile_bytecode()
                                     ^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 529, in _compile_bytecode
                              return self._compile_core()
                                     ^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 508, in _compile_core
                              raise e
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler.py", line 495, in _compile_core
                              pm.run(self.state)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 368, in run
                              raise patched_exception
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 356, in run
                              self._runPass(idx, pass_inst, state)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_lock.py", line 35, in _acquire_compile_lock
                              return func(*args, **kwargs)
                                     ^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 311, in _runPass
                              mutated |= check(pss.run_pass, internal_state)
                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/compiler_machinery.py", line 273, in check
                              mangled = func(compiler_state)
                                        ^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 110, in run_pass
                              typemap, return_type, calltypes, errs = type_inference_stage(
                                                                      ^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typed_passes.py", line 89, in type_inference_stage
                              infer.build_constraint()
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1039, in build_constraint
                              self.constrain_statement(inst)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1386, in constrain_statement
                              self.typeof_assign(inst)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1461, in typeof_assign
                              self.typeof_global(inst, inst.target, value)
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1561, in typeof_global
                              typ = self.resolve_value_type(inst, gvar.value)
                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
                            File "/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py", line 1482, in resolve_value_type
                              raise TypingError(msg, loc=inst.loc)
                          numba.core.errors.TypingError: Failed in nopython mode pipeline (step: nopython frontend)
                          NameError: name 'PY_UNICODE_WCHAR_KIND' is not defined
                 raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1482
               During: resolving callee type: Function(<function _kind_to_byte_width at 0x7f279ddb5d00>)
               During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (278)
               File "numba/cpython/unicode.py", line 278:
               def _empty_string(kind, length, is_ascii=0):
                   char_width = _kind_to_byte_width(kind)
                   ^
        raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086
      During: resolving callee type: Function(<function _empty_string at 0x7f279ddb5580>)
      During: typing of call at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/cpython/unicode.py (1794)
      File "numba/cpython/unicode.py", line 1794:
                  def getitem_char(s, idx):
                      <source elided>
                          is_ascii = _codepoint_is_ascii(cp)
                          ret = _empty_string(kind, 1, is_ascii)
                          ^
  raised from /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/typeinfer.py:1086

During: lowering "$46for_iter.1 = iternext(value=$phi46.0)" at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/typed/dictimpl.py (23)
During: lowering "d = call $4load_global.0($28call.6, func=$4load_global.0, args=[Var($28call.6, test_dicts.py:45)], kws=(), vararg=None, varkwarg=None, target=None)" at /mnt/home/sklam/dev/numba-py312-workspace/numba/numba/tests/test_dicts.py (45)

Stderr:
/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/ir_utils.py:2174: NumbaPendingDeprecationWarning: 
Encountered the use of a type that is scheduled for deprecation: type 'reflected list' found for argument 'a' of function 'TestCompiledDict.test_use_dict_iterable_args.<locals>.dict_iterable_1'.

For more information visit https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-reflection-for-list-and-set-types

File "numba/tests/test_dicts.py", line 44:
        @njit
        def dict_iterable_1(a, b):
        ^

  warnings.warn(NumbaPendingDeprecationWarning(msg, loc=loc))
/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/ir_utils.py:2174: NumbaPendingDeprecationWarning: 
Encountered the use of a type that is scheduled for deprecation: type 'reflected list' found for argument 'b' of function 'TestCompiledDict.test_use_dict_iterable_args.<locals>.dict_iterable_1'.

For more information visit https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-reflection-for-list-and-set-types

File "numba/tests/test_dicts.py", line 44:
        @njit
        def dict_iterable_1(a, b):
        ^

  warnings.warn(NumbaPendingDeprecationWarning(msg, loc=loc))
/mnt/home/sklam/dev/numba-py312-workspace/numba/numba/core/ir_utils.py:2174: NumbaPendingDeprecationWarning: 
Encountered the use of a type that is scheduled for deprecation: type 'reflected list' found for argument 'a' of function 'TestCompiledDict.test_use_dict_iterable_args.<locals>.dict_iterable_1'.

For more information visit https://numba.readthedocs.io/en/stable/reference/deprecation.html#deprecation-of-reflection-for-list-and-set-types

File "numba/tests/test_dicts.py", line 44:
        @njit
        def dict_iterable_1(a, b):
        ^

  warnings.warn(NumbaPendingDeprecationWarning(msg, loc=loc))

----------------------------------------------------------------------
Ran 14 tests in 9.239s

FAILED (errors=2)
